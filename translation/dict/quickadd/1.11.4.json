{
  "manifest": {
    "translationVersion": 1731379954131,
    "pluginVersion": "1.11.4"
  },
  "description": {
    "original": "Quickly add new pages or content to your vault.",
    "translation": "Quickly add new pages or content to your vault."
  },
  "dict": {
    "Notice(\"Choice name is invalid.\")": "Notice(\"Choice name is invalid.\")",
    ".log(\"Loading QuickAdd\")": ".log(\"Loading QuickAdd\")",
    ".log(\"Test QuickAdd (dev)": ".log(\"Test QuickAdd (dev)",
    ".log(\"Unloading QuickAdd\")": ".log(\"Unloading QuickAdd\")",
    "name:\"Run QuickAdd\"": "name:\"Run QuickAdd\"",
    "name:\"Reload QuickAdd (dev)\"": "name:\"Reload QuickAdd (dev)\"",
    "name:\"Test QuickAdd (dev)\"": "name:\"Test QuickAdd (dev)\"",
    "name:\"Test\"": "name:\"Test\"",
    "description:\"Migrate to macro ID from embedded macro in macro choices.\"": "description:\"Migrate to macro ID from embedded macro in macro choices.\"",
    "description:\"Use QuickAdd template folder instead of Obsidian templates plugin folder / Templater templates folder.\"": "description:\"Use QuickAdd template folder instead of Obsidian templates plugin folder / Templater templates folder.\"",
    "description:\"'Increment file name' setting moved to 'Set default behavior if file already exists' setting\"": "description:\"'Increment file name' setting moved to 'Set default behavior if file already exists' setting\"",
    "description:\"Mutual exclusion of insertAfter and writeToBottomOfFile settings. If insertAfter is enabled, writeToBottomOfFile is disabled. To support changes in settings UI.\"": "description:\"Mutual exclusion of insertAfter and writeToBottomOfFile settings. If insertAfter is enabled, writeToBottomOfFile is disabled. To support changes in settings UI.\"",
    "description:\"Set version to the current plugin version.\"": "description:\"Set version to the current plugin version.\"",
    "description:\"Add default AI providers to the settings.\"": "description:\"Add default AI providers to the settings.\"",
    "text:\"Choose folder when creating a new note\"": "text:\"Choose folder when creating a new note\"",
    "text:`${this.settings.name} Settings`": "text:`${this.settings.name} Settings`",
    "text:\"Macro Manager\"": "text:\"Macro Manager\"",
    "text:\"AI Assistant Settings\"": "text:\"AI Assistant Settings\"",
    "text:\"QuickAdd Settings\"": "text:\"QuickAdd Settings\"",
    "text:\"Fetching release notes...\"": "text:\"Fetching release notes...\"",
    ".setButtonText(\"No\")": ".setButtonText(\"No\")",
    ".setButtonText(\"Yes\")": ".setButtonText(\"Yes\")",
    ".setButtonText(\"Add\")": ".setButtonText(\"Add\")",
    ".setButtonText(\"OK\")": ".setButtonText(\"OK\")",
    ".setButtonText(\"Submit\")": ".setButtonText(\"Submit\")",
    ".setButtonText(\"Delete\")": ".setButtonText(\"Delete\")",
    ".setButtonText(\"Configure\")": ".setButtonText(\"Configure\")",
    ".setButtonText(\"Add macro\")": ".setButtonText(\"Add macro\")",
    ".setButtonText(\"Add Provider\")": ".setButtonText(\"Add Provider\")",
    ".setButtonText(\"Edit\")": ".setButtonText(\"Edit\")",
    ".setButtonText(\"Add Model\")": ".setButtonText(\"Add Model\")",
    ".setButtonText(\"Cancel\")": ".setButtonText(\"Cancel\")",
    ".setButtonText(\"Save\")": ".setButtonText(\"Save\")",
    ".setButtonText(\"Edit Providers\")": ".setButtonText(\"Edit Providers\")",
    ".setName(\"Template Path\")": ".setName(\"Template Path\")",
    ".setName(\"File Name Format\")": ".setName(\"File Name Format\")",
    ".setName(\"Create in folder\")": ".setName(\"Create in folder\")",
    ".setName(\"Include subfolders\")": ".setName(\"Include subfolders\")",
    ".setName(\"Create in same folder as active file\")": ".setName(\"Create in same folder as active file\")",
    ".setName(\"Append link\")": ".setName(\"Append link\")",
    ".setName(\"Set default behavior if file already exists\")": ".setName(\"Set default behavior if file already exists\")",
    ".setName(\"Open\")": ".setName(\"Open\")",
    ".setName(\"New split\")": ".setName(\"New split\")",
    ".setName(\"Focus new pane\")": ".setName(\"Focus new pane\")",
    ".setName(\"Capture To\")": ".setName(\"Capture To\")",
    ".setName(\"Write to bottom of file\")": ".setName(\"Write to bottom of file\")",
    ".setName(\"Task\")": ".setName(\"Task\")",
    ".setName(\"Insert after\")": ".setName(\"Insert after\")",
    ".setName(\"Insert at end of section\")": ".setName(\"Insert at end of section\")",
    ".setName(\"Consider subsections\")": ".setName(\"Consider subsections\")",
    ".setName(\"Create line if not found\")": ".setName(\"Create line if not found\")",
    ".setName(\"Capture format\")": ".setName(\"Capture format\")",
    ".setName(\"Create file if it doesn't exist\")": ".setName(\"Create file if it doesn't exist\")",
    ".setName(\"Create file with given template.\")": ".setName(\"Create file with given template.\")",
    ".setName(\"New Tab\")": ".setName(\"New Tab\")",
    ".setName(\"Prompt Template\")": ".setName(\"Prompt Template\")",
    ".setName(\"Model\")": ".setName(\"Model\")",
    ".setName(\"Output variable name\")": ".setName(\"Output variable name\")",
    ".setName(\"System Prompt\")": ".setName(\"System Prompt\")",
    ".setName(\"Show advanced settings\")": ".setName(\"Show advanced settings\")",
    ".setName(\"Temperature\")": ".setName(\"Temperature\")",
    ".setName(\"Top P\")": ".setName(\"Top P\")",
    ".setName(\"Frequency Penalty\")": ".setName(\"Frequency Penalty\")",
    ".setName(\"Presence Penalty\")": ".setName(\"Presence Penalty\")",
    ".setName(\"Obsidian command\")": ".setName(\"Obsidian command\")",
    ".setName(\"Editor commands\")": ".setName(\"Editor commands\")",
    ".setName(\"User Scripts\")": ".setName(\"User Scripts\")",
    ".setName(\"Choices\")": ".setName(\"Choices\")",
    ".setName(\"Providers\")": ".setName(\"Providers\")",
    ".setName(\"Name\")": ".setName(\"Name\")",
    ".setName(\"Endpoint\")": ".setName(\"Endpoint\")",
    ".setName(\"API Key\")": ".setName(\"API Key\")",
    ".setName(\"Add Model\")": ".setName(\"Add Model\")",
    ".setName(\"Default Model\")": ".setName(\"Default Model\")",
    ".setName(\"Prompt Template Folder Path\")": ".setName(\"Prompt Template Folder Path\")",
    ".setName(\"Show Assistant\")": ".setName(\"Show Assistant\")",
    ".setName(\"Default System Prompt\")": ".setName(\"Default System Prompt\")",
    ".setName(\"Announce Updates\")": ".setName(\"Announce Updates\")",
    ".setName(\"Use Multi-line Input Prompt\")": ".setName(\"Use Multi-line Input Prompt\")",
    ".setName(\"Template Folder Path\")": ".setName(\"Template Folder Path\")",
    ".setName(\"Disable AI & Online features\")": ".setName(\"Disable AI & Online features\")",
    ".setName(\"Show icon in sidebar\")": ".setName(\"Show icon in sidebar\")",
    ".setName(\"Result Joiner\")": ".setName(\"Result Joiner\")",
    ".setName(\"Chunk Separator\")": ".setName(\"Chunk Separator\")",
    ".setName(\"Max Chunk Tokens\")": ".setName(\"Max Chunk Tokens\")",
    ".setName(\"Merge Chunks\")": ".setName(\"Merge Chunks\")",
    ".setDesc(\"Path to the Template.\")": ".setDesc(\"Path to the Template.\")",
    ".setDesc(\"Set the file name format.\")": ".setDesc(\"Set the file name format.\")",
    ".setDesc(\"Create the file in the specified folder. If multiple folders are specified, you will be prompted for which folder to create the file in.\")": ".setDesc(\"Create the file in the specified folder. If multiple folders are specified, you will be prompted for which folder to create the file in.\")",
    ".setDesc(\"Get prompted to choose from both the selected folders and their subfolders when creating the note.\")": ".setDesc(\"Get prompted to choose from both the selected folders and their subfolders when creating the note.\")",
    ".setDesc(\"Creates the file in the same folder as the currently active file. Will not create the file if there is no active file.\")": ".setDesc(\"Creates the file in the same folder as the currently active file. Will not create the file if there is no active file.\")",
    ".setDesc(\"Append link to created file to current file.\")": ".setDesc(\"Append link to created file to current file.\")",
    ".setDesc(\"Set default behavior rather then prompting user on what to do if a file already exists.\")": ".setDesc(\"Set default behavior rather then prompting user on what to do if a file already exists.\")",
    ".setDesc(\"Open the created file.\")": ".setDesc(\"Open the created file.\")",
    ".setDesc(\"Split your editor and open file in new split.\")": ".setDesc(\"Split your editor and open file in new split.\")",
    ".setDesc(\"Focus the opened tab immediately after opening\")": ".setDesc(\"Focus the opened tab immediately after opening\")",
    ".setDesc(\"File to capture to. Supports some format syntax.\")": ".setDesc(\"File to capture to. Supports some format syntax.\")",
    ".setDesc(`Put value at the bottom of the file - otherwise at the ${this.choice?.captureToActiveFile?\"active cursor location\":\"top\"}.`)": ".setDesc(`Put value at the bottom of the file - otherwise at the ${this.choice?.captureToActiveFile?\"active cursor location\":\"top\"}.`)",
    ".setDesc(\"Formats the value as a task.\")": ".setDesc(\"Formats the value as a task.\")",
    ".setDesc(\"Add a link on your current cursor position, linking to the file you're capturing to.\")": ".setDesc(\"Add a link on your current cursor position, linking to the file you're capturing to.\")",
    ".setDesc(\"Insert capture after specified line. Accepts format syntax.\")": ".setDesc(\"Insert capture after specified line. Accepts format syntax.\")",
    ".setDesc(\"Insert the text at the end of the section, rather than at the top.\")": ".setDesc(\"Insert the text at the end of the section, rather than at the top.\")",
    ".setDesc(\"Enabling this will insert the text at the end of the section & its subsections, rather than just at the end of the target section. A section is defined by a heading, and its subsections are all the headings inside that section.\")": ".setDesc(\"Enabling this will insert the text at the end of the section & its subsections, rather than just at the end of the target section. A section is defined by a heading, and its subsections are all the headings inside that section.\")",
    ".setDesc(\"Creates the 'insert after' line if it is not found.\")": ".setDesc(\"Creates the 'insert after' line if it is not found.\")",
    ".setDesc(\"Set the format of the capture.\")": ".setDesc(\"Set the format of the capture.\")",
    ".setDesc(\"Open the file that is captured to.\")": ".setDesc(\"Open the file that is captured to.\")",
    ".setDesc(\"Open the file that is captured to in a new tab.\")": ".setDesc(\"Open the file that is captured to in a new tab.\")",
    ".setDesc(\"Focus the opened tab immediately\")": ".setDesc(\"Focus the opened tab immediately\")",
    ".setDesc(\"Enabling this will have the assistant use the prompt template you specify. If disable, the assistant will ask you for a prompt template to use.\")": ".setDesc(\"Enabling this will have the assistant use the prompt template you specify. If disable, the assistant will ask you for a prompt template to use.\")",
    ".setDesc(\"The model the AI Assistant will use\")": ".setDesc(\"The model the AI Assistant will use\")",
    ".setDesc(\"The name of the variable used to store the AI Assistant output, i.e. {{value:output}}.\")": ".setDesc(\"The name of the variable used to store the AI Assistant output, i.e. {{value:output}}.\")",
    ".setDesc(\"The system prompt for the AI Assistant\")": ".setDesc(\"The system prompt for the AI Assistant\")",
    ".setDesc(\"Show advanced settings such as temperature, top p, and frequency penalty.\")": ".setDesc(\"Show advanced settings such as temperature, top p, and frequency penalty.\")",
    ".setDesc(\"Sampling temperature. Higher values like 0.8 makes the output more random, whereas lower values like 0.2 will make it more focused and deterministic. The default is 1.\")": ".setDesc(\"Sampling temperature. Higher values like 0.8 makes the output more random, whereas lower values like 0.2 will make it more focused and deterministic. The default is 1.\")",
    ".setDesc(\"Nucleus sampling - consider this an alternative to temperature. The model considers the results of the tokens with top_p probability mass. 0.1 means only tokens compromising the top 10% probability mass are considered. The default is 1.\")": ".setDesc(\"Nucleus sampling - consider this an alternative to temperature. The model considers the results of the tokens with top_p probability mass. 0.1 means only tokens compromising the top 10% probability mass are considered. The default is 1.\")",
    ".setDesc(\"Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. The default is 0.\")": ".setDesc(\"Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. The default is 0.\")",
    ".setDesc(\"Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. The default is 0.\")": ".setDesc(\"Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. The default is 0.\")",
    ".setDesc(\"Add an Obsidian command\")": ".setDesc(\"Add an Obsidian command\")",
    ".setDesc(\"Add editor command\")": ".setDesc(\"Add editor command\")",
    ".setDesc(\"Add user script\")": ".setDesc(\"Add user script\")",
    ".setDesc(\"Add existing choice\")": ".setDesc(\"Add existing choice\")",
    ".setDesc(\"Providers for the AI Assistant\")": ".setDesc(\"Providers for the AI Assistant\")",
    ".setDesc(\"The name of the provider\")": ".setDesc(\"The name of the provider\")",
    ".setDesc(\"The endpoint for the AI Assistant\")": ".setDesc(\"The endpoint for the AI Assistant\")",
    ".setDesc(\"The API Key for the AI Assistant\")": ".setDesc(\"The API Key for the AI Assistant\")",
    ".setDesc(`Max Tokens: ${b.maxTokens}`)": ".setDesc(`Max Tokens: ${b.maxTokens}`)",
    ".setDesc(\"The providers for the AI Assistant\")": ".setDesc(\"The providers for the AI Assistant\")",
    ".setDesc(\"The default model for the AI Assistant\")": ".setDesc(\"The default model for the AI Assistant\")",
    ".setDesc(\"Path to your folder with prompt templates\")": ".setDesc(\"Path to your folder with prompt templates\")",
    ".setDesc(\"Show status messages from the AI Assistant\")": ".setDesc(\"Show status messages from the AI Assistant\")",
    ".setDesc(\"The default system prompt for the AI Assistant\")": ".setDesc(\"The default system prompt for the AI Assistant\")",
    ".setDesc(\"Display release notes when a new version is installed. This includes new features, demo videos, and bug fixes.\")": ".setDesc(\"Display release notes when a new version is installed. This includes new features, demo videos, and bug fixes.\")",
    ".setDesc(\"Use multi-line input prompt instead of single-line input prompt\")": ".setDesc(\"Use multi-line input prompt instead of single-line input prompt\")",
    ".setDesc(\"Path to the folder where templates are stored. Used to suggest template files when configuring QuickAdd.\")": ".setDesc(\"Path to the folder where templates are stored. Used to suggest template files when configuring QuickAdd.\")",
    ".setDesc(\"This prevents the plugin from making requests to external providers like OpenAI. You can still use User Scripts to execute arbitrary code, including contacting external providers. However, this setting disables plugin features like the AI Assistant from doing so. You need to disable this setting to use the AI Assistant.\")": ".setDesc(\"This prevents the plugin from making requests to external providers like OpenAI. You can still use User Scripts to execute arbitrary code, including contacting external providers. However, this setting disables plugin features like the AI Assistant from doing so. You need to disable this setting to use the AI Assistant.\")",
    ".setDesc(\"Add QuickAdd icon to the sidebar ribbon. Requires a reload.\")": ".setDesc(\"Add QuickAdd icon to the sidebar ribbon. Requires a reload.\")",
    ".setDesc(\"The string used to join multiple LLM responses together. The default is a newline.\")": ".setDesc(\"The string used to join multiple LLM responses together. The default is a newline.\")",
    ".setDesc(\"The string used to separate chunks of text. The default is a newline.\")": ".setDesc(\"The string used to separate chunks of text. The default is a newline.\")",
    ".setDesc(\"The maximum number of tokens in each chunk, calculated as the chunk token size + prompt template token size + system prompt token size. Make sure you leave room for the model to respond to the prompt.\")": ".setDesc(\"The maximum number of tokens in each chunk, calculated as the chunk token size + prompt template token size + system prompt token size. Make sure you leave room for the model to respond to the prompt.\")",
    ".setDesc(\"Merge chunks together by putting them in the same prompt, until the max tokens limit is reached. Useful for sending fewer queries overall, but may result in less coherent responses.\")": ".setDesc(\"Merge chunks together by putting them in the same prompt, until the max tokens limit is reached. Useful for sending fewer queries overall, but may result in less coherent responses.\")",
    ".setPlaceholder(\"File path\")": ".setPlaceholder(\"File path\")",
    ".setPlaceholder(\"Template path\")": ".setPlaceholder(\"Template path\")",
    ".setPlaceholder(\"File name format\")": ".setPlaceholder(\"File name format\")",
    ".setPlaceholder(\"Folder path\")": ".setPlaceholder(\"Folder path\")",
    ".setPlaceholder(\"Insert after\")": ".setPlaceholder(\"Insert after\")",
    ".setPlaceholder(\"Format\")": ".setPlaceholder(\"Format\")",
    ".setPlaceholder(\"Obsidian command\")": ".setPlaceholder(\"Obsidian command\")",
    ".setPlaceholder(\"User script\")": ".setPlaceholder(\"User script\")",
    ".setPlaceholder(\"Choice\")": ".setPlaceholder(\"Choice\")",
    ".setPlaceholder(\"Macro name\")": ".setPlaceholder(\"Macro name\")",
    ".setPlaceholder(\"templates/\")": ".setPlaceholder(\"templates/\")",
    ".setTooltip(`Toggle ${I}`)": ".setTooltip(`Toggle ${I}`)",
    ".setTooltip(\"Create file if it doesn't exist\")": ".setTooltip(\"Create file if it doesn't exist\")",
    ".setTooltip(\"Add AI Assistant command\")": ".setTooltip(\"Add AI Assistant command\")",
    ".setTooltip(\"Add wait command\")": ".setTooltip(\"Add wait command\")",
    ".setTooltip(`Add ${l} Choice`)": ".setTooltip(`Add ${l} Choice`)",
    ".setTooltip(\"Create Macro\")": ".setTooltip(\"Create Macro\")",
    ".setTooltip(\"Configure Macro\")": ".setTooltip(\"Configure Macro\")",
    ".setTooltip(\"Use multi-line input prompt\")": ".setTooltip(\"Use multi-line input prompt\")",
    ".innerText=`Token count: ${this.systemPromptTokenLength!==Number.POSITIVE_INFINITY?this.systemPromptTokenLength:\"select a model to calculate\"}`": ".innerText=`Token count: ${this.systemPromptTokenLength!==Number.POSITIVE_INFINITY?this.systemPromptTokenLength:\"select a model to calculate\"}`",
    ".innerText=`Token count: ${this.systemPromptTokenLength}`": ".innerText=`Token count: ${this.systemPromptTokenLength}`",
    ".createEl(\"span\",{text:\"Choose folder when creating a new note\"})": ".createEl(\"span\",{text:\"Choose folder when creating a new note\"})",
    ".createEl(\"h2\",{text:`${this.settings.name} Settings`})": ".createEl(\"h2\",{text:`${this.settings.name} Settings`})",
    ".createEl(\"h2\",{text:\"Macro Manager\"})": ".createEl(\"h2\",{text:\"Macro Manager\"})",
    ".createEl(\"h2\",{text:\"AI Assistant Settings\"})": ".createEl(\"h2\",{text:\"AI Assistant Settings\"})",
    ".createEl(\"h2\",{text:\"QuickAdd Settings\"})": ".createEl(\"h2\",{text:\"QuickAdd Settings\"})",
    ".createEl(\"h1\",{text:\"Fetching release notes...\"})": ".createEl(\"h1\",{text:\"Fetching release notes...\"})",
    ".setDesc(\"Path to the Template.\"": ".setDesc(\"Path to the Template.\"",
    ".setDesc(\"Set the file name format.\"": ".setDesc(\"Set the file name format.\"",
    ".setDesc(\"Append link to created file to current file.\"": ".setDesc(\"Append link to created file to current file.\"",
    ".setDesc(\"Open the created file.\"": ".setDesc(\"Open the created file.\"",
    ".setDesc(\"Split your editor and open file in new split.\"": ".setDesc(\"Split your editor and open file in new split.\"",
    ".setDesc(\"Focus the opened tab immediately after opening\"": ".setDesc(\"Focus the opened tab immediately after opening\"",
    ".setDesc(\"File to capture to. Supports some format syntax.\"": ".setDesc(\"File to capture to. Supports some format syntax.\"",
    ".setDesc(\"Formats the value as a task.\"": ".setDesc(\"Formats the value as a task.\"",
    ".setDesc(\"Creates the 'insert after' line if it is not found.\"": ".setDesc(\"Creates the 'insert after' line if it is not found.\"",
    ".setDesc(\"Set the format of the capture.\"": ".setDesc(\"Set the format of the capture.\"",
    ".setDesc(\"Open the file that is captured to.\"": ".setDesc(\"Open the file that is captured to.\"",
    ".setDesc(\"Open the file that is captured to in a new tab.\"": ".setDesc(\"Open the file that is captured to in a new tab.\"",
    ".setDesc(\"Focus the opened tab immediately\"": ".setDesc(\"Focus the opened tab immediately\"",
    ".setDesc(\"The model the AI Assistant will use\"": ".setDesc(\"The model the AI Assistant will use\"",
    ".setDesc(\"The system prompt for the AI Assistant\"": ".setDesc(\"The system prompt for the AI Assistant\"",
    ".setDesc(\"Add an Obsidian command\"": ".setDesc(\"Add an Obsidian command\"",
    ".setDesc(\"Add editor command\"": ".setDesc(\"Add editor command\"",
    ".setDesc(\"Add user script\"": ".setDesc(\"Add user script\"",
    ".setDesc(\"Add existing choice\"": ".setDesc(\"Add existing choice\"",
    ".setDesc(\"The API Key for the AI Assistant\"": ".setDesc(\"The API Key for the AI Assistant\"",
    ".setDesc(\"The default model for the AI Assistant\"": ".setDesc(\"The default model for the AI Assistant\"",
    ".setDesc(\"Path to your folder with prompt templates\"": ".setDesc(\"Path to your folder with prompt templates\"",
    ".setDesc(\"Show status messages from the AI Assistant\"": ".setDesc(\"Show status messages from the AI Assistant\"",
    ".setDesc(\"The default system prompt for the AI Assistant\"": ".setDesc(\"The default system prompt for the AI Assistant\"",
    ".setTooltip(`Toggle ${item}`": ".setTooltip(`Toggle ${item}`",
    ".setTooltip(\"Create file if it doesn't exist\"": ".setTooltip(\"Create file if it doesn't exist\"",
    ".setTooltip(\"Add AI Assistant command\"": ".setTooltip(\"Add AI Assistant command\"",
    ".setTooltip(\"Add wait command\"": ".setTooltip(\"Add wait command\"",
    ".setTooltip(`Add ${typeName} Choice`": ".setTooltip(`Add ${typeName} Choice`",
    ".setTooltip(\"Create Macro\"": ".setTooltip(\"Create Macro\"",
    ".setTooltip(\"Configure Macro\"": ".setTooltip(\"Configure Macro\"",
    ".setTooltip(\"Use multi-line input prompt\"": ".setTooltip(\"Use multi-line input prompt\"",
    ".setName(\"Template Path\"": ".setName(\"Template Path\"",
    ".setName(\"File Name Format\"": ".setName(\"File Name Format\"",
    ".setName(\"Create in folder\"": ".setName(\"Create in folder\"",
    ".setName(\"Include subfolders\"": ".setName(\"Include subfolders\"",
    ".setName(\"Create in same folder as active file\"": ".setName(\"Create in same folder as active file\"",
    ".setName(\"Append link\"": ".setName(\"Append link\"",
    ".setName(\"Set default behavior if file already exists\"": ".setName(\"Set default behavior if file already exists\"",
    ".setName(\"Open\"": ".setName(\"Open\"",
    ".setName(\"New split\"": ".setName(\"New split\"",
    ".setName(\"Focus new pane\"": ".setName(\"Focus new pane\"",
    ".setName(\"Capture To\"": ".setName(\"Capture To\"",
    ".setName(\"Write to bottom of file\"": ".setName(\"Write to bottom of file\"",
    ".setName(\"Task\"": ".setName(\"Task\"",
    ".setName(\"Insert after\"": ".setName(\"Insert after\"",
    ".setName(\"Insert at end of section\"": ".setName(\"Insert at end of section\"",
    ".setName(\"Consider subsections\"": ".setName(\"Consider subsections\"",
    ".setName(\"Create line if not found\"": ".setName(\"Create line if not found\"",
    ".setName(\"Capture format\"": ".setName(\"Capture format\"",
    ".setName(\"Create file if it doesn't exist\"": ".setName(\"Create file if it doesn't exist\"",
    ".setName(\"Create file with given template.\"": ".setName(\"Create file with given template.\"",
    ".setName(\"New Tab\"": ".setName(\"New Tab\"",
    ".setName(\"Prompt Template\"": ".setName(\"Prompt Template\"",
    ".setName(\"Model\"": ".setName(\"Model\"",
    ".setName(\"Output variable name\"": ".setName(\"Output variable name\"",
    ".setName(\"System Prompt\"": ".setName(\"System Prompt\"",
    ".setName(\"Show advanced settings\"": ".setName(\"Show advanced settings\"",
    ".setName(\"Temperature\"": ".setName(\"Temperature\"",
    ".setName(\"Top P\"": ".setName(\"Top P\"",
    ".setName(\"Frequency Penalty\"": ".setName(\"Frequency Penalty\"",
    ".setName(\"Presence Penalty\"": ".setName(\"Presence Penalty\"",
    ".setName(\"Obsidian command\"": ".setName(\"Obsidian command\"",
    ".setName(\"Editor commands\"": ".setName(\"Editor commands\"",
    ".setName(\"User Scripts\"": ".setName(\"User Scripts\"",
    ".setName(\"Choices\"": ".setName(\"Choices\"",
    ".setName(\"API Key\"": ".setName(\"API Key\"",
    ".setName(\"Default Model\"": ".setName(\"Default Model\"",
    ".setName(\"Prompt Template Folder Path\"": ".setName(\"Prompt Template Folder Path\"",
    ".setName(\"Show Assistant\"": ".setName(\"Show Assistant\"",
    ".setName(\"Default System Prompt\"": ".setName(\"Default System Prompt\"",
    ".setName(\"Announce Updates\"": ".setName(\"Announce Updates\"",
    ".setName(\"Use Multi-line Input Prompt\"": ".setName(\"Use Multi-line Input Prompt\"",
    ".setName(\"Template Folder Path\"": ".setName(\"Template Folder Path\"",
    ".setName(\"Disable AI & Online features\"": ".setName(\"Disable AI & Online features\"",
    ".setName(\"Result Joiner\"": ".setName(\"Result Joiner\"",
    ".setName(\"Chunk Separator\"": ".setName(\"Chunk Separator\"",
    ".setName(\"Max Chunk Tokens\"": ".setName(\"Max Chunk Tokens\"",
    ".setName(\"Merge Chunks\"": ".setName(\"Merge Chunks\"",
    "This prevents the plugin from making requests to external providers like OpenAI. You can still use User Scripts to execute arbitrary code, inclulding contacting external providers. However, this setting disables plugin features like the AI Assistant from doing so. You need to disable this setting to use the AI Assistant.": "This prevents the plugin from making requests to external providers like OpenAI. You can still use User Scripts to execute arbitrary code, inclulding contacting external providers. However, this setting disables plugin features like the AI Assistant from doing so. You need to disable this setting to use the AI Assistant.",
    "Use multi-line input prompt instead of single-line input prompt": "Use multi-line input prompt instead of single-line input prompt",
    "Path to the folder where templates are stored. Used to suggest template files when configuring QuickAdd.": "Path to the folder where templates are stored. Used to suggest template files when configuring QuickAdd.",
    "Display release notes when a new version is installed. This includes new features, demo videos, and bug fixes.": "Display release notes when a new version is installed. This includes new features, demo videos, and bug fixes.",
    "throw new Error('Function called outside component initialization');": "throw new Error('Function called outside component initialization');",
    "ChoiceType[\"Capture\"] = \"Capture\";": "ChoiceType[\"Capture\"] = \"Capture\";",
    "ChoiceType[\"Macro\"] = \"Macro\";": "ChoiceType[\"Macro\"] = \"Macro\";",
    "ChoiceType[\"Multi\"] = \"Multi\";": "ChoiceType[\"Multi\"] = \"Multi\";",
    "ChoiceType[\"Template\"] = \"Template\";": "ChoiceType[\"Template\"] = \"Template\";",
    "attr(div, \"aria-label\", div_aria_label_value = `Configure${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`);": "attr(div, \"aria-label\", div_aria_label_value = `Configure${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`);",
    "if (!current || dirty & /*choiceName*/ 8 && div_aria_label_value !== (div_aria_label_value = `Configure${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`)) {": "if (!current || dirty & /*choiceName*/ 8 && div_aria_label_value !== (div_aria_label_value = `Configure${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`)) {",
    "attr(div0, \"aria-label\", div0_aria_label_value = `${/*commandEnabled*/ ctx[2] ? \"Remove\" : \"Add\"} command${/*choiceName*/ ctx[3]": "attr(div0, \"aria-label\", div0_aria_label_value = `${/*commandEnabled*/ ctx[2] ? \"Remove\" : \"Add\"} command${/*choiceName*/ ctx[3]",
    "? \" for \" + /*choiceName*/ ctx[3]": "? \" for \" + /*choiceName*/ ctx[3]",
    "attr(div1, \"aria-label\", div1_aria_label_value = `Delete${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`);": "attr(div1, \"aria-label\", div1_aria_label_value = `Delete${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`);",
    "attr(div2, \"aria-label\", \"Drag-handle\");": "attr(div2, \"aria-label\", \"Drag-handle\");",
    "if (!current || dirty & /*commandEnabled, choiceName*/ 12 && div0_aria_label_value !== (div0_aria_label_value = `${/*commandEnabled*/ ctx[2] ? \"Remove\" : \"Add\"} command${/*choiceName*/ ctx[3]": "if (!current || dirty & /*commandEnabled, choiceName*/ 12 && div0_aria_label_value !== (div0_aria_label_value = `${/*commandEnabled*/ ctx[2] ? \"Remove\" : \"Add\"} command${/*choiceName*/ ctx[3]",
    "if (!current || dirty & /*choiceName*/ 8 && div1_aria_label_value !== (div1_aria_label_value = `Delete${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`)) {": "if (!current || dirty & /*choiceName*/ 8 && div1_aria_label_value !== (div1_aria_label_value = `Delete${/*choiceName*/ ctx[3] ? \" \" + /*choiceName*/ ctx[3] : \"\"}`)) {",
    "throw new Error(\"cannot get depth of a falsy node\");": "throw new Error(\"cannot get depth of a falsy node\");",
    "var ID_TO_INSTRUCTION = (_ID_TO_INSTRUCTION = {}, _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs.DND_ZONE_ACTIVE, \"Tab to one the items and press space-bar or enter to start dragging it\"), _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED, \"This is a disabled drag and drop list\"), _ID_TO_INSTRUCTION);": "var ID_TO_INSTRUCTION = (_ID_TO_INSTRUCTION = {}, _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs.DND_ZONE_ACTIVE, \"Tab to one the items and press space-bar or enter to start dragging it\"), _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED, \"This is a disabled drag and drop list\"), _ID_TO_INSTRUCTION);",
    "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to the end of the list \").concat(focusedDzLabel));": "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to the end of the list \").concat(focusedDzLabel));",
    "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to the beginning of the list \").concat(focusedDzLabel));": "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to the beginning of the list \").concat(focusedDzLabel));",
    "alertToScreenReader(\"Stopped dragging item \".concat(focusedItemLabel));": "alertToScreenReader(\"Stopped dragging item \".concat(focusedItemLabel));",
    "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to position \").concat(idx + 2, \" in the list \").concat(focusedDzLabel));": "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to position \").concat(idx + 2, \" in the list \").concat(focusedDzLabel));",
    "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to position \").concat(_idx, \" in the list \").concat(focusedDzLabel));": "alertToScreenReader(\"Moved item \".concat(focusedItemLabel, \" to position \").concat(_idx, \" in the list \").concat(focusedDzLabel));",
    "var msg = \"Started dragging item \".concat(focusedItemLabel, \". Use the arrow keys to move it within its list \").concat(focusedDzLabel);": "var msg = \"Started dragging item \".concat(focusedItemLabel, \". Use the arrow keys to move it within its list \").concat(focusedDzLabel);",
    "msg += \", or tab to another list in order to move the item into it\";": "msg += \", or tab to another list in order to move the item into it\";",
    "button.textContent = \"Add Choice\";": "button.textContent = \"Add Choice\";",
    "attr(input, \"placeholder\", \"Name\");": "attr(input, \"placeholder\", \"Name\");",
    "new obsidian.Notice(\"Choice name is invalid.\");": "new obsidian.Notice(\"Choice name is invalid.\");",
    "button0.textContent = \"No\";": "button0.textContent = \"No\";",
    "button1.textContent = \"Yes\";": "button1.textContent = \"Yes\";",
    "return `File Name: ${output}`;": "return `File Name: ${output}`;",
    ".setName('Template Path')": ".setName('Template Path')",
    ".setDesc('Path to the Template.')": ".setDesc('Path to the Template.')",
    "search.setPlaceholder(\"Template path\");": "search.setPlaceholder(\"Template path\");",
    "enableSetting.setName(\"File Name Format\")": "enableSetting.setName(\"File Name Format\")",
    "formatInput.setPlaceholder(\"File name format\");": "formatInput.setPlaceholder(\"File name format\");",
    "folderSetting.setName(\"Create in folder\")": "folderSetting.setName(\"Create in folder\")",
    "chooseFolderWhenCreatingNoteContainer.createEl('span', { text: \"Choose folder when creating a new note\" });": "chooseFolderWhenCreatingNoteContainer.createEl('span', { text: \"Choose folder when creating a new note\" });",
    "createInSameFolderAsActiveFileSetting.setName(\"Create in same folder as active file\")": "createInSameFolderAsActiveFileSetting.setName(\"Create in same folder as active file\")",
    "appendLinkSetting.setName(\"Append link\")": "appendLinkSetting.setName(\"Append link\")",
    "incrementFileNameSetting.setName(\"Increment file name\")": "incrementFileNameSetting.setName(\"Increment file name\")",
    ".setDesc(\"If the file already exists, increment the file name.\")": ".setDesc(\"If the file already exists, increment the file name.\")",
    "noOpenSetting.setName(\"Open\")": "noOpenSetting.setName(\"Open\")",
    "newTabSetting.setName(\"New Tab\")": "newTabSetting.setName(\"New Tab\")",
    ".setDesc(\"Open created file in a new tab.\")": ".setDesc(\"Open created file in a new tab.\")",
    "dropdown.addOption(NewTabDirection.vertical, \"Vertical\");": "dropdown.addOption(NewTabDirection.vertical, \"Vertical\");",
    "dropdown.addOption(NewTabDirection.horizontal, \"Horizontal\");": "dropdown.addOption(NewTabDirection.horizontal, \"Horizontal\");",
    "log.logError(`${filePath} not found`);": "log.logError(`${filePath} not found`);",
    "log.logError(`${filePath} found but it's a folder`);": "log.logError(`${filePath} found but it's a folder`);",
    "this.rejectPromise(\"no input given.\");": "this.rejectPromise(\"no input given.\");",
    ".setTooltip(`Toggle ${item}`)": ".setTooltip(`Toggle ${item}`)",
    "submitButton.setButtonText(\"Submit\").setCta().onClick(evt => {": "submitButton.setButtonText(\"Submit\").setCta().onClick(evt => {",
    "log.logError(`choice named '${choiceName}' not found`);": "log.logError(`choice named '${choiceName}' not found`);",
    "EditorCommandType[\"Cut\"] = \"Cut\";": "EditorCommandType[\"Cut\"] = \"Cut\";",
    "EditorCommandType[\"Copy\"] = \"Copy\";": "EditorCommandType[\"Copy\"] = \"Copy\";",
    "EditorCommandType[\"Paste\"] = \"Paste\";": "EditorCommandType[\"Paste\"] = \"Paste\";",
    "EditorCommandType[\"SelectActiveLine\"] = \"Select active line\";": "EditorCommandType[\"SelectActiveLine\"] = \"Select active line\";",
    "EditorCommandType[\"SelectLinkOnActiveLine\"] = \"Select link on active line\";": "EditorCommandType[\"SelectLinkOnActiveLine\"] = \"Select link on active line\";",
    "log.logError(\"no active markdown view.\");": "log.logError(\"no active markdown view.\");",
    "log.logError(\"nothing selected.\");": "log.logError(\"nothing selected.\");",
    "log.logError(`no internal link found on line ${lineNumber}.`);": "log.logError(`no internal link found on line ${lineNumber}.`);",
    "log.logError(`No commands in the selected macro. Did you select a macro for '${this.choice.name}'?`);": "log.logError(`No commands in the selected macro. Did you select a macro for '${this.choice.name}'?`);",
    "log.logError(`failed to load user script ${command.path}.`);": "log.logError(`failed to load user script ${command.path}.`);",
    "log.logError(`user script in macro for '${this.choice.name}' is invalid`);": "log.logError(`user script in macro for '${this.choice.name}' is invalid`);",
    "log.logError(\"choice could not be found.\");": "log.logError(\"choice could not be found.\");",
    "log.logError(`choice in ${command.name} is invalid`);": "log.logError(`choice in ${command.name} is invalid`);",
    "log.logError(`macro '${macroName}' does not exist.`);": "log.logError(`macro '${macroName}' does not exist.`);",
    ".logError(`unable to append '${c}' to current line.`)": ".logError(`unable to append '${c}' to current line.`)",
    ".logError(`failed to load file ${c.path}.`)": ".logError(`failed to load file ${c.path}.`)",
    ".logError(`${G} not found`)": ".logError(`${G} not found`)",
    ".logError(`${G} found but it's a folder`)": ".logError(`${G} found but it's a folder`)",
    ".logError(`choice named '${b}' not found`)": ".logError(`choice named '${b}' not found`)",
    ".logError(`no internal link found on line ${l}.`)": ".logError(`no internal link found on line ${l}.`)",
    ".logError(`No commands in the selected macro. Did you select a macro for '${this.choice.name}'?`)": ".logError(`No commands in the selected macro. Did you select a macro for '${this.choice.name}'?`)",
    ".logError(`failed to load user script ${I.path}.`)": ".logError(`failed to load user script ${I.path}.`)",
    ".logError(`failed to run user script ${I.name}. Error:\n\n${b.message}`)": ".logError(`failed to run user script ${I.name}. Error:\n\n${b.message}`)",
    ".logError(`user script in macro for '${this.choice.name}' is invalid`)": ".logError(`user script in macro for '${this.choice.name}' is invalid`)",
    ".logError(`choice in ${I.name} is invalid`)": ".logError(`choice in ${I.name} is invalid`)",
    ".logError(`macro '${I}' does not exist.`)": ".logError(`macro '${I}' does not exist.`)",
    ".logError(`Could not create file with template: \n\n${b.message}`)": ".logError(`Could not create file with template: \n\n${b.message}`)",
    ".logError(`Template ${this.templatePath} not found.`)": ".logError(`Template ${this.templatePath} not found.`)",
    ".logError(`Could not find Obsidian command with name \"${b}\"`)": ".logError(`Could not find Obsidian command with name \"${b}\"`)",
    ".logError(`'${l}' already exists and is not a valid markdown file.`)": ".logError(`'${l}' already exists and is not a valid markdown file.`)",
    ".logError(`unable to insert line '${this.choice.insertAfter.after}' on your cursor.\n${Z}`)": ".logError(`unable to insert line '${this.choice.insertAfter.after}' on your cursor.\n${Z}`)",
    ".logError(`Migration '${I}' was unsuccessful. Please create an issue with the following error message: \n\n${b}\n\nQuickAdd will now revert to backup.`)": ".logError(`Migration '${I}' was unsuccessful. Please create an issue with the following error message: \n\n${b}\n\nQuickAdd will now revert to backup.`)",
    ".logError(`Failed to fetch release notes: ${l}`)": ".logError(`Failed to fetch release notes: ${l}`)",
    ".logWarning(\"cannot add same folder twice.\")": ".logWarning(\"cannot add same folder twice.\")",
    ".logWarning(`${q.name} has no settings.`)": ".logWarning(`${q.name} has no settings.`)",
    ".logWarning(\"File not written to.\")": ".logWarning(\"File not written to.\")",
    ".logWarning(`Could not create file '${l}'.`)": ".logWarning(`Could not create file '${l}'.`)",
    ".logWarning(\"No active file or active file has no parent. Cannot create file in same folder as active file. Creating in root folder.\")": ".logWarning(\"No active file or active file has no parent. Cannot create file in same folder as active file. Creating in root folder.\")",
    ".logWarning(`The file ${I} does not exist and \"Create file if it doesn't exist\" is disabled.`)": ".logWarning(`The file ${I} does not exist and \"Create file if it doesn't exist\" is disabled.`)",
    "await GenericInputPrompt.Prompt(this.app, (_a = this.valueHeader) !== null && _a !== void 0 ? _a : `Enter value`);": "await GenericInputPrompt.Prompt(this.app, (_a = this.valueHeader) !== null && _a !== void 0 ? _a : `Enter value`);",
    "throw new Error(\"detected numbers but couldn't get them.\");": "throw new Error(\"detected numbers but couldn't get them.\");",
    "log.logError(`Could not create file with template. Maybe '${templatePath}' is an invalid template path?`);": "log.logError(`Could not create file with template. Maybe '${templatePath}' is an invalid template path?`);",
    "log.logError(`Template ${this.templatePath} not found.`);": "log.logError(`Template ${this.templatePath} not found.`);",
    "return `Template (not found): ${templatePath}`;": "return `Template (not found): ${templatePath}`;",
    ".setName('Capture To')": ".setName('Capture To')",
    ".setDesc('File to capture to. Supports some format syntax.');": ".setDesc('File to capture to. Supports some format syntax.');",
    "captureToActiveFileText.textContent = \"Capture to active file\";": "captureToActiveFileText.textContent = \"Capture to active file\";",
    "prependSetting.setName(\"Write to bottom of file\")": "prependSetting.setName(\"Write to bottom of file\")",
    ".setDesc(`Put value at the bottom of the file - otherwise at the ${((_a = this.choice) === null || _a === void 0 ? void 0 : _a.captureToActiveFile) ? \"active cursor location\" : \"top\"}.`)": ".setDesc(`Put value at the bottom of the file - otherwise at the ${((_a = this.choice) === null || _a === void 0 ? void 0 : _a.captureToActiveFile) ? \"active cursor location\" : \"top\"}.`)",
    "taskSetting.setName(\"Task\")": "taskSetting.setName(\"Task\")",
    "insertAfterSetting.setName(\"Insert after\")": "insertAfterSetting.setName(\"Insert after\")",
    "insertAfterInput.setPlaceholder(\"Insert after\");": "insertAfterInput.setPlaceholder(\"Insert after\");",
    "insertAtEndSetting.setName(\"Insert at end of section\")": "insertAtEndSetting.setName(\"Insert at end of section\")",
    "createLineIfNotFound.setName(\"Create line if not found\")": "createLineIfNotFound.setName(\"Create line if not found\")",
    "enableSetting.setName(\"Capture format\")": "enableSetting.setName(\"Capture format\")",
    "formatInput.setPlaceholder(\"Format\");": "formatInput.setPlaceholder(\"Format\");",
    "createWithTemplateSetting.setName(\"Create file with given template.\")": "createWithTemplateSetting.setName(\"Create file with given template.\")",
    ".addOption('source', 'Source')": ".addOption('source', 'Source')",
    ".addOption('preview', 'Preview')": ".addOption('preview', 'Preview')",
    ".addOption('default', 'Default')": ".addOption('default', 'Default')",
    "attr(span1, \"aria-label\", \"Drag-handle\");": "attr(span1, \"aria-label\", \"Drag-handle\");",
    "t1 = text(\" for \");": "t1 = text(\" for \");",
    "attr(span2, \"aria-label\", \"Drag-handle\");": "attr(span2, \"aria-label\", \"Drag-handle\");",
    "textComponent.setPlaceholder(\"Obsidian command\");": "textComponent.setPlaceholder(\"Obsidian command\");",
    ".addButton(button => button.setCta().setButtonText(\"Add\").onClick(addObsidianCommandFromInput));": ".addButton(button => button.setCta().setButtonText(\"Add\").onClick(addObsidianCommandFromInput));",
    "log.logError(\"invalid editor command type\");": "log.logError(\"invalid editor command type\");",
    ".addButton(button => button.setCta().setButtonText(\"Add\").onClick(addEditorCommandFromDropdown));": ".addButton(button => button.setCta().setButtonText(\"Add\").onClick(addEditorCommandFromDropdown));",
    "textComponent.setPlaceholder(\"User script\");": "textComponent.setPlaceholder(\"User script\");",
    "textComponent.setPlaceholder(\"Choice\");": "textComponent.setPlaceholder(\"Choice\");",
    "const promptAnswer = await GenericYesNoPrompt.Prompt(this.app, \"Are you sure you wish to delete this command?\", `If you click yes, you will delete '${command.name}'.`);": "const promptAnswer = await GenericYesNoPrompt.Prompt(this.app, \"Are you sure you wish to delete this command?\", `If you click yes, you will delete '${command.name}'.`);",
    "this.newChoiceButton(quickCommandContainer, \"Capture\", CaptureChoice);": "this.newChoiceButton(quickCommandContainer, \"Capture\", CaptureChoice);",
    "this.newChoiceButton(quickCommandContainer, \"Template\", TemplateChoice);": "this.newChoiceButton(quickCommandContainer, \"Template\", TemplateChoice);",
    "button.setIcon('clock').setTooltip(\"Add wait command\").onClick(() => {": "button.setIcon('clock').setTooltip(\"Add wait command\").onClick(() => {",
    "button.setButtonText(typeName).setTooltip(`Add ${typeName} Choice`).onClick(() => {": "button.setButtonText(typeName).setTooltip(`Add ${typeName} Choice`).onClick(() => {",
    "const captureChoice = new type(`Untitled ${typeName} Choice`);": "const captureChoice = new type(`Untitled ${typeName} Choice`);",
    "this.contentEl.createEl('h2', { text: 'Macro Manager' }).style.textAlign = \"center\";": "this.contentEl.createEl('h2', { text: 'Macro Manager' }).style.textAlign = \"center\";",
    "this.addSpanWithText(itemContainerEl, \"Run on plugin load\");": "this.addSpanWithText(itemContainerEl, \"Run on plugin load\");",
    "deleteButton.setButtonText(\"Delete\").onClick(evt => {": "deleteButton.setButtonText(\"Delete\").onClick(evt => {",
    "configureButton.setButtonText(\"Configure\").onClick(async (evt) => {": "configureButton.setButtonText(\"Configure\").onClick(async (evt) => {",
    "nameInput.setPlaceholder(\"Macro name\");": "nameInput.setPlaceholder(\"Macro name\");",
    "addMacroButton.setButtonText(\"Add macro\")": "addMacroButton.setButtonText(\"Add macro\")",
    "log.logError(\"macro invalid - will not be added\");": "log.logError(\"macro invalid - will not be added\");",
    "button.textContent = \"Manage Macros\";": "button.textContent = \"Manage Macros\";",
    "const userConfirmed = yield GenericYesNoPrompt.Prompt(app, `Confirm deletion of choice`, `Please confirm that you wish to delete '${choice.name}'.": "const userConfirmed = yield GenericYesNoPrompt.Prompt(app, `Confirm deletion of choice`, `Please confirm that you wish to delete '${choice.name}'.",
    "? \"Deleting this choice will delete all (\" + choice.choices.length + \") choices inside it!\"": "? \"Deleting this choice will delete all (\" + choice.choices.length + \") choices inside it!\"",
    "const name = yield GenericInputPrompt.Prompt(app, `Rename ${oldChoice.name}`, \"\", oldChoice.name);": "const name = yield GenericInputPrompt.Prompt(app, `Rename ${oldChoice.name}`, \"\", oldChoice.name);",
    "containerEl.createEl('h2', { text: 'QuickAdd Settings' });": "containerEl.createEl('h2', { text: 'QuickAdd Settings' });",
    "log.logError(`'${filePath}' already exists and is not a valid markdown file.`);": "log.logError(`'${filePath}' already exists and is not a valid markdown file.`);",
    "log.logWarning(\"File not written to.\");": "log.logWarning(\"File not written to.\");",
    "log.logWarning(`Could not create file '${filePath}'.`);": "log.logWarning(`Could not create file '${filePath}'.`);",
    "log.logError(\"No active file. Cannot create new file.\");": "log.logError(\"No active file. Cannot create new file.\");",
    "log.logError(\"unable to find insert after line in file.\");": "log.logError(\"unable to find insert after line in file.\");",
    "log.logMessage(\"could not get frontmatter. Maybe there isn't any.\");": "log.logMessage(\"could not get frontmatter. Maybe there isn't any.\");",
    "log.logError(`Invalid capture to for ${this.choice.name}`);": "log.logError(`Invalid capture to for ${this.choice.name}`);",
    "log.logWarning(`The file ${filePath} does not exist and \"Create file if it doesn't exist\" is disabled.`);": "log.logWarning(`The file ${filePath} does not exist and \"Create file if it doesn't exist\" is disabled.`);",
    "log.logError(\"Cannot capture to active file - no active file.\");": "log.logError(\"Cannot capture to active file - no active file.\");",
    "log.logError(`please provide a template path for ${templateChoice.name}`);": "log.logError(`please provide a template path for ${templateChoice.name}`);",
    "log.logError(`please provide a capture path for ${captureChoice.name}`);": "log.logError(`please provide a capture path for ${captureChoice.name}`);",
    "return `QuickAdd: (${error.level}) ${error.message}`;": "return `QuickAdd: (${error.level}) ${error.message}`;",
    "console.log('Loading QuickAdd');": "console.log('Loading QuickAdd');",
    "name: 'Run QuickAdd',": "name: 'Run QuickAdd',",
    "console.log('Unloading QuickAdd');": "console.log('Unloading QuickAdd');",
    "id: `choice:${choice.id}`,": "id: `choice:${choice.id}`,",
    "deleteObsidianCommand(this.app, `quickadd:choice:${choice.id}`);": "deleteObsidianCommand(this.app, `quickadd:choice:${choice.id}`);",
    "setButtonText(\"Delete\"": "setButtonText(\"Delete\"",
    "addOption(\"Copy\" /* Copy */, \"Copy\"": "addOption(\"Copy\" /* Copy */, \"Copy\"",
    ".addOption(\"Cut\" /* Cut */, \"Cut\"": ".addOption(\"Cut\" /* Cut */, \"Cut\"",
    ".addOption(\"Paste\" /* Paste */, \"Paste\"": ".addOption(\"Paste\" /* Paste */, \"Paste\"",
    "Are you sure you wish to delete this command?": "Are you sure you wish to delete this command?",
    "`If you click yes, you will delete '${command.name}'.`": "`If you click yes, you will delete '${command.name}'.`",
    "setButtonText(\"Yes\"": "setButtonText(\"Yes\"",
    "setButtonText(\"No\"": "setButtonText(\"No\"",
    "`Untitled ${typeName} Choice`": "`Untitled ${typeName} Choice`",
    "`Put value at the bottom of the file - otherwise at the": "`Put value at the bottom of the file - otherwise at the",
    "active cursor location : \"top\"": "active cursor location : \"top\"",
    "Add a link on your current cursor position, linking to the file": "Add a link on your current cursor position, linking to the file",
    "you're capturing to.\"": "you're capturing to.\"",
    "Insert capture after specified line. Accepts format syntax.": "Insert capture after specified line. Accepts format syntax.",
    ".addOption(\"source\", \"Source\"": ".addOption(\"source\", \"Source\"",
    "Preview).addOption(\"default\", \"Default\"": "Preview).addOption(\"default\", \"Default\"",
    ".addOption(\"vertical\" /* vertical */, \"Vertical\"": ".addOption(\"vertical\" /* vertical */, \"Vertical\"",
    "addOption(\"horizontal\" /* horizontal */, \"Horizontal\"": "addOption(\"horizontal\" /* horizontal */, \"Horizontal\"",
    "Insert the text at the end of the section, rather than at the": "Insert the text at the end of the section, rather than at the",
    "top.\"": "top.\"",
    "Enabling this will insert the text at the end of the section &": "Enabling this will insert the text at the end of the section &",
    "its subsections, rather than just at the end of the target": "its subsections, rather than just at the end of the target",
    "section.A section is defined by a heading, and its subsections": "section.A section is defined by a heading, and its subsections",
    "are all the headings inside that section.\"": "are all the headings inside that section.\"",
    "return `Invalid template path for ${this.choice.name}. ${this.": "return `Invalid template path for ${this.choice.name}. ${this.",
    "choice.templatePath.length === 0 ? \"Template path is empty.\" :": "choice.templatePath.length === 0 ? \"Template path is empty.\" :",
    "`Template path is not valid: ${this.choice.templatePath}`}`;": "`Template path is not valid: ${this.choice.templatePath}`}`;",
    "`${\"Template\"}`": "`${\"Template\"}`",
    "`${\"Capture\"}`": "`${\"Capture\"}`",
    "`${\"Macro\"}`": "`${\"Macro\"}`",
    "`${\"Multi\"}`": "`${\"Multi\"}`",
    "`Confirm deletion of choice`, `Please confirm that you wish to delete '${choice.name}'": "`Confirm deletion of choice`, `Please confirm that you wish to delete '${choice.name}'",
    "      \"Cancel\"": "      \"Cancel\"",
    "      \"Ok\"": "      \"Ok\"",
    "`Rename ${oldChoice.name}`": "`Rename ${oldChoice.name}`",
    ".textContent=\"Manage Macros\"": ".textContent=\"Manage Macros\"",
    ".textContent=\"AI Assistant\"": ".textContent=\"AI Assistant\"",
    ".textContent=\"Template\"": ".textContent=\"Template\"",
    ".textContent=\"Capture\"": ".textContent=\"Capture\"",
    ".textContent=\"Macro\"": ".textContent=\"Macro\"",
    ".textContent=\"Multi\"": ".textContent=\"Multi\"",
    ".textContent=\"Add Choice\"": ".textContent=\"Add Choice\"",
    ".textContent=\"Capture to active file\"": ".textContent=\"Capture to active file\"",
    "`File Name:": "`File Name:",
    "(I,\"placeholder\",\"Name\")": "(I,\"placeholder\",\"Name\")",
    ".Notice(\"Choice name is invalid.\")": ".Notice(\"Choice name is invalid.\")",
    ".addOption(\"source\",\"Source\")": ".addOption(\"source\",\"Source\")",
    ".addOption(\"preview\",\"Preview\")": ".addOption(\"preview\",\"Preview\")",
    ".addOption(\"default\",\"Default\")": ".addOption(\"default\",\"Default\")",
    ".addOption(\"vertical\",\"Vertical\")": ".addOption(\"vertical\",\"Vertical\")",
    ".addOption(\"horizontal\",\"Horizontal\")": ".addOption(\"horizontal\",\"Horizontal\")",
    ".addOption(Jc,\"Top\")": ".addOption(Jc,\"Top\")",
    ".addOption(R1,\"Bottom\")": ".addOption(R1,\"Bottom\")",
    ".addOption(X1,\"Cursor\")": ".addOption(X1,\"Cursor\")",
    ".addOption(\"Copy\",\"Copy\")": ".addOption(\"Copy\",\"Copy\")",
    ".addOption(\"Cut\",\"Cut\")": ".addOption(\"Cut\",\"Cut\")",
    ".addOption(\"Paste\",\"Paste\")": ".addOption(\"Paste\",\"Paste\")",
    ".addOption(\"Select active line\",\"Select active line\")": ".addOption(\"Select active line\",\"Select active line\")",
    ".addOption(\"Select link on active line\",\"Select link on active line\")": ".addOption(\"Select link on active line\",\"Select link on active line\")",
    ".addSpanWithText(W,\"Run on plugin load\")": ".addSpanWithText(W,\"Run on plugin load\")",
    "b(`Untitled ${l} Choice`)": "b(`Untitled ${l} Choice`)",
    "j2=\"Increment the file name\",QG=\"Append to the bottom of the file\",JG=\"Append to the top of the file\",vG=\"Overwrite the file\",f2=\"Nothing\"": "j2=\"Increment the file name\",QG=\"Append to the bottom of the file\",JG=\"Append to the top of the file\",vG=\"Overwrite the file\",f2=\"Nothing\"",
    ".Prompt(d,`Rename ${p.name}`": ".Prompt(d,`Rename ${p.name}`",
    "this.createButton(l,\"Cancel\"": "this.createButton(l,\"Cancel\"",
    "this.createButton(l,\"Ok\"": "this.createButton(l,\"Ok\"",
    "(copy)`": "(copy)`",
    "d,\"Confirm deletion of choice\",`Please confirm that you wish to delete '": "d,\"Confirm deletion of choice\",`Please confirm that you wish to delete '",
    "If you click yes, you will delete": "If you click yes, you will delete",
    "super(\"Wait\",\"Wait\")": "super(\"Wait\",\"Wait\")",
    "\" for \"": "\" for \"",
    "\"Deleting this choice will delete the macro associated with it!\"": "\"Deleting this choice will delete the macro associated with it!\"",
    "\"Deleting this choice will delete all (\"": "\"Deleting this choice will delete all (\"",
    "\") choices inside it!\"": "\") choices inside it!\"",
    "`Are you sure you want to delete ${b.name}?`": "`Are you sure you want to delete ${b.name}?`"
  }
}