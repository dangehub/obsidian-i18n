{
  "manifest": {
    "translationVersion": 1730379853435,
    "pluginVersion": "0.3.3"
  },
  "description": {
    "original": "Collaborate in real time with live cursors. Create relays, add folders, and manage user access.",
    "translation": "Collaborate in real time with live cursors. Create relays, add folders, and manage user access."
  },
  "dict": {
    "Notice(n.name+`:\nAn error has occurred, please reload Obsidian.`)": "Notice(n.name+`:\nAn error has occurred, please reload Obsidian.`)",
    "Notice(\"Invite link copied\")": "Notice(\"Invite link copied\")",
    "Notice(\"Please sign in to use relay\")": "Notice(\"Please sign in to use relay\")",
    ".log(`[${this.path}] disconnection event`,c)": ".log(`[${this.path}] disconnection event`,c)",
    ".log(\"get provider token\")": ".log(\"get provider token\")",
    ".log(`Token Refreshed: setting new provider url, ${this._provider.url}`)": ".log(`Token Refreshed: setting new provider url, ${this._provider.url}`)",
    ".log(\"file tree\",this._debugFileTree()": ".log(\"file tree\",this._debugFileTree()",
    ".log(\"update count\",this.path,this._persistence._dbsize)": ".log(\"update count\",this.path,this._persistence._dbsize)",
    ".log(`syncFileTree diff:\n`+o.join(`\n`)": ".log(`syncFileTree diff:\n`+o.join(`\n`)",
    ".log(\"[getDoc]: creating doc for shared ID\")": ".log(\"[getDoc]: creating doc for shared ID\")",
    ".log(\"[getDoc]: creating new shared ID for existing file\")": ".log(\"[getDoc]: creating new shared ID for existing file\")",
    ".log(`[${c.path}] No Known Peers: Syncing file into ytext.`)": ".log(`[${c.path}] No Known Peers: Syncing file into ytext.`)",
    ".log(\"Moving out of shared folder\")": ".log(\"Moving out of shared folder\")",
    ".log(\"Moving in from outside of shared folder\")": ".log(\"Moving in from outside of shared folder\")",
    ".log(\"created\")": ".log(\"created\")",
    ".log(\"Recived yjs event against a non-live view\")": ".log(\"Recived yjs event against a non-live view\")",
    ".log(\"dispatch (incremental)": ".log(\"dispatch (incremental)",
    ".log(\"dispatch (full)": ".log(\"dispatch (full)",
    ".log(\"ytext and editor buffer need syncing\")": ".log(\"ytext and editor buffer need syncing\")",
    ".log(\"local db missing, not setting buffer\")": ".log(\"local db missing, not setting buffer\")",
    ".log(\"unable to subscribe to metadata updates\")": ".log(\"unable to subscribe to metadata updates\")",
    ".log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`)": ".log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`)",
    ".log(\"[getFolderFiles]\",`Downloading ${e.docset.size} files`)": ".log(\"[getFolderFiles]\",`Downloading ${e.docset.size} files`)",
    ".log(\"[System 3][Relay][Live Views] going offline\")": ".log(\"[System 3][Relay][Live Views] going offline\")",
    ".log(\"[System 3][Relay][Live Views] going online\")": ".log(\"[System 3][Relay][Live Views] going online\")",
    ".log(`Folder not ready, skipping views. folder=${s.path}`)": ".log(`Folder not ready, skipping views. folder=${s.path}`)",
    ".log(\"request failed\",t)": ".log(\"request failed\",t)",
    ".log(\"starting\")": ".log(\"starting\")",
    ".log(\"stopping\")": ".log(\"stopping\")",
    ".log(\"check and refresh tokens\")": ".log(\"check and refresh tokens\")",
    ".log(\"adding to refresh queue\")": ".log(\"adding to refresh queue\")",
    ".log(\"getting next item in queue\")": ".log(\"getting next item in queue\")",
    ".log(`immediate refresh of ${e}`)": ".log(`immediate refresh of ${e}`)",
    ".log(`enqueued refresh of ${e}`)": ".log(`enqueued refresh of ${e}`)",
    ".log(`new expiry time is ${r}`)": ".log(`new expiry time is ${r}`)",
    ".log(`Token refreshed for ${s.friendlyName} (${e})": ".log(`Token refreshed for ${s.friendlyName} (${e})",
    ".log(`getting token ${t}`)": ".log(`getting token ${t}`)",
    ".log(\"token was valid, cache hit!\")": ".log(\"token was valid, cache hit!\")",
    ".log(\"back online\")": ".log(\"back online\")",
    ".log(\"Loading shared folders\")": ".log(\"Loading shared folders\")",
    ".log(\"Saving settings: settings file locked\")": ".log(\"Saving settings: settings file locked\")",
    ".log(\"Saving settings\",this.settings)": ".log(\"Saving settings\",this.settings)",
    ".error(\"[yjs] Tried to remove event handler that doesn't exist.\")": ".error(\"[yjs] Tried to remove event handler that doesn't exist.\")",
    ".error(\"This document was already integrated as a sub-document. You should create a second instance instead with the same guid.\")": ".error(\"This document was already integrated as a sub-document. You should create a second instance instead with the same guid.\")",
    ".error(\"Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438\")": ".error(\"Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438\")",
    ".error(\"Caught error while handling a Yjs update\",r)": ".error(\"Caught error while handling a Yjs update\",r)",
    ".error(\"Unable to compute message\")": ".error(\"Unable to compute message\")",
    ".error(`Failed to write logs (attempt ${e+1})": ".error(`Failed to write logs (attempt ${e+1})",
    ".error(\"Max retries reached. Discarding log entries.\")": ".error(\"Max retries reached. Discarding log entries.\")",
    ".error(\"Failed to write log:\",c)": ".error(\"Failed to write log:\",c)",
    ".error(\"Deleting doc (somehow moved outside of shared folder)": ".error(\"Deleting doc (somehow moved outside of shared folder)",
    ".error(\"Authenticating failed\",t)": ".error(\"Authenticating failed\",t)",
    ".error(\"No collection found for\",e)": ".error(\"No collection found for\",e)",
    ".error(\"No collection found for record\",e)": ".error(\"No collection found for record\",e)",
    "name:\"folder\"": "name:\"folder\"",
    "name:\"layers\"": "name:\"layers\"",
    "name:\"satellite\"": "name:\"satellite\"",
    "name:\"settings\"": "name:\"settings\"",
    "name:\"Account\"": "name:\"Account\"",
    "name:\"Your account\"": "name:\"Your account\"",
    "name:\"Login\"": "name:\"Login\"",
    "name:\"\",description:`If your browser doesn't open, you can login manually by\\n\\t\\t\\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`,$$slots:{default:[Fk]},$$scope:{ctx:n}}}),c=new rt({props:{name:\"": "name:\"\",description:`If your browser doesn't open, you can login manually by\\n\\t\\t\\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`,$$slots:{default:[Fk]},$$scope:{ctx:n}}}),c=new rt({props:{name:\"",
    "name:\"User Agent\"": "name:\"User Agent\"",
    "name:\"Fetch\"": "name:\"Fetch\"",
    "name:\"Response\"": "name:\"Response\"",
    "name:\"Blink Fetch\"": "name:\"Blink Fetch\"",
    "name:\"Connections\"": "name:\"Connections\"",
    "name:\"Advanced\"": "name:\"Advanced\"",
    "name:\"Debug logs\"": "name:\"Debug logs\"",
    "name:\"Check\"": "name:\"Check\"",
    "name:\"Join a relay\"": "name:\"Join a relay\"",
    "name:\"Share key\"": "name:\"Share key\"",
    "name:\"Relays\"": "name:\"Relays\"",
    "name:\"Shared folders\"": "name:\"Shared folders\"",
    "name:\"Folder name\"": "name:\"Folder name\"",
    "name:\"Folder location\"": "name:\"Folder location\"",
    "name:\"Relay name\"": "name:\"Relay name\"",
    "name:\"Membership\"": "name:\"Membership\"",
    "name:\"Leave relay\"": "name:\"Leave relay\"",
    "name:\"Storage\"": "name:\"Storage\"",
    "name:\"Destroy relay\"": "name:\"Destroy relay\"",
    "name:`Plan: ${n[7].plan}`": "name:`Plan: ${n[7].plan}`",
    "name:\"Sharing\"": "name:\"Sharing\"",
    "name:\"Remote Folder\"": "name:\"Remote Folder\"",
    "name:\"Remove from relay\"": "name:\"Remove from relay\"",
    "name:\"Local folder\"": "name:\"Local folder\"",
    "name:\"Delete from vault\"": "name:\"Delete from vault\"",
    "name:\"Delete metadata\"": "name:\"Delete metadata\"",
    "name:\"Relay\"": "name:\"Relay\"",
    "name:\"Owner\"": "name:\"Owner\"",
    "name:\"Member\"": "name:\"Member\"",
    "name:\"relays\"": "name:\"relays\"",
    "name:\"subscriptions\"": "name:\"subscriptions\"",
    "name:\"Feature Flags\"": "name:\"Feature Flags\"",
    "description:\"You are currently logged in as: \"": "description:\"You are currently logged in as: \"",
    "description:\"Please complete the login flow in your browser and wait a few seconds.\"": "description:\"Please complete the login flow in your browser and wait a few seconds.\"",
    "description:`If your browser doesn't open, you can login manually by\n\t\t\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`": "description:`If your browser doesn't open, you can login manually by\n\t\t\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`",
    "description:\"Enable debug logs to help diagnose issues.\"": "description:\"Enable debug logs to help diagnose issues.\"",
    "description:\"Click here once you've completed login\"": "description:\"Click here once you've completed login\"",
    "description:\"You need to login to use this plugin.\"": "description:\"You need to login to use this plugin.\"",
    "description:\"Enter the code that was shared with you.\"": "description:\"Enter the code that was shared with you.\"",
    "description:\"Set the name of the folder to be added.\"": "description:\"Set the name of the folder to be added.\"",
    "description:\"Set the location in your vault.\"": "description:\"Set the location in your vault.\"",
    "description:\"Set the relay name.\"": "description:\"Set the relay name.\"",
    "description:\"Leave the relay. Local data is preserved.\"": "description:\"Leave the relay. Local data is preserved.\"",
    "description:\"This will destroy the relay (deleting all data on the server). Local data is preserved.\"": "description:\"This will destroy the relay (deleting all data on the server). Local data is preserved.\"",
    "description:\"Share this key with your collaborators.\"": "description:\"Share this key with your collaborators.\"",
    "description:\"Deletes the remote folder from the relay. Local files will be preserved.\"": "description:\"Deletes the remote folder from the relay. Local files will be preserved.\"",
    "description:\"Delete the local Shared Folder and all of its contents.\"": "description:\"Delete the local Shared Folder and all of its contents.\"",
    "description:\"Deletes edit history and disables change tracking.\"": "description:\"Deletes edit history and disables change tracking.\"",
    "text:\"Accept Top\"": "text:\"Accept Top\"",
    "text:\"Accept Bottom\"": "text:\"Accept Bottom\"",
    "text:\"Accept All\"": "text:\"Accept All\"",
    "text:\"Accept None\"": "text:\"Accept None\"",
    "text:`Accept from ${this.file1.name}`": "text:`Accept from ${this.file1.name}`",
    "text:\"Discard\"": "text:\"Discard\"",
    "text:`Accept from ${this.file2.name}`": "text:`Accept from ${this.file2.name}`",
    "Error(\"Path must be a string. Received \"": "Error(\"Path must be a string. Received \"",
    "Error('\"ext\" argument must be a string');": "Error('\"ext\" argument must be a string');",
    "Error(\"Null input. (diff_main)\");": "Error(\"Null input. (diff_main)\");",
    "Error(\"Illegal escape in diff_fromDelta: \"+l)}break;case\"-\":case\"=\":var c=parseInt(l,10);if(isNaN(c)||c<0)throw new Error(\"Invalid number in diff_fromDelta: \"+l);var f=n.substring(s,s+=c);o[i].charAt(0)==\"=\"?t[r++]=new K.Diff(he,f):t[r++]=new K.Diff(Pe,f);break;default:if(o[i])throw new Error(\"Invalid diff operation in diff_fromDelta: \"+o[i])}}if(s!=n.length)throw new Error(\"Delta length (\"+s+\") does not equal source text length (\"+n.length+\").\");": "Error(\"Illegal escape in diff_fromDelta: \"+l)}break;case\"-\":case\"=\":var c=parseInt(l,10);if(isNaN(c)||c<0)throw new Error(\"Invalid number in diff_fromDelta: \"+l);var f=n.substring(s,s+=c);o[i].charAt(0)==\"=\"?t[r++]=new K.Diff(he,f):t[r++]=new K.Diff(Pe,f);break;default:if(o[i])throw new Error(\"Invalid diff operation in diff_fromDelta: \"+o[i])}}if(s!=n.length)throw new Error(\"Delta length (\"+s+\") does not equal source text length (\"+n.length+\").\");",
    "Error(\"Null input. (match_main)\");": "Error(\"Null input. (match_main)\");",
    "Error(\"Pattern too long for this browser.\");": "Error(\"Pattern too long for this browser.\");",
    "Error(\"patch not initialized\");": "Error(\"patch not initialized\");",
    "Error(\"Unknown call format to patch_make.\");": "Error(\"Unknown call format to patch_make.\");",
    "Error(\"Unknown unit \"+a)}}function Nb(){return this.isValid()?this._milliseconds+this._days*864e5+this._months%12*2592e6+ye(this._months/12)*31536e6:NaN}function Hr(a){return function(){return this.as(a)}}var Bb=Hr(\"ms\"),Hb=Hr(\"s\"),Vb=Hr(\"m\"),Wb=Hr(\"h\"),Kb=Hr(\"d\"),Yb=Hr(\"w\"),Jb=Hr(\"M\"),qb=Hr(\"Q\"),jb=Hr(\"y\");": "Error(\"Unknown unit \"+a)}}function Nb(){return this.isValid()?this._milliseconds+this._days*864e5+this._months%12*2592e6+ye(this._months/12)*31536e6:NaN}function Hr(a){return function(){return this.as(a)}}var Bb=Hr(\"ms\"),Hb=Hr(\"s\"),Vb=Hr(\"m\"),Wb=Hr(\"h\"),Kb=Hr(\"d\"),Yb=Hr(\"w\"),Jb=Hr(\"M\"),qb=Hr(\"Q\"),jb=Hr(\"y\");",
    "Error(`Type with the name ${e} has already been defined with a different constructor`);": "Error(`Type with the name ${e} has already been defined with a different constructor`);",
    "Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");": "Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");",
    "Error(\"Invalid relay UUID\");": "Error(\"Invalid relay UUID\");",
    "Error(\"Invalid folder UUID\");": "Error(\"Invalid folder UUID\");",
    "Error(\"Invalid document UUID\");": "Error(\"Invalid document UUID\");",
    "Error(\"Invalid s3rn format\");": "Error(\"Invalid s3rn format\");",
    "Error(\"Invalid UUID\");": "Error(\"Invalid UUID\");",
    "Error(\"Invalid s3rn format for the given product type\")}};var km=require(\"obsidian\");": "Error(\"Invalid s3rn format for the given product type\")}};var km=require(\"obsidian\");",
    "Error(\"missing provider!\");": "Error(\"missing provider!\");",
    "Error(\"tried to access postie during teardown\");": "Error(\"tried to access postie during teardown\");",
    "Error(`Could not find shared folders on file system at ${this.path}`);": "Error(`Could not find shared folders on file system at ${this.path}`);",
    "Error(\"Path is not in shared folder: \"+t)}mkdir(t){let r=(0,Zt.join)(this.path,t);return this.vault.adapter.mkdir((0,ut.normalizePath)(r))}checkPath(t){return t.startsWith(this.path+Zt.sep)}checkExtension(t,r=\".md\"){return t.endsWith(r)}getVirtualPath(t){return this.assertPath(t),t.slice(this.path.length)}getFile(t,r=!0,s=!1,o=!0){let i=this.getVirtualPath(t);return this.getDoc(i,r,s,o)}getTFile(t){let r=this.vault.getAbstractFileByPath(this.getPath(t.path));return r instanceof ut.TFile?r:null}getDoc(t,r=!0,s=!1,o=!0){let i=this.ids.get(t);if(i!==void 0){let l=this.docs.get(i);return l!==void 0?(l.move(t),l):(this.log(\"[getDoc]: creating doc for shared ID\"),this.createDoc(t,!1,o))}else{if(r)return this.log(\"[getDoc]: creating new shared ID for existing file\"),this.createDoc(t,s,o);throw new Error(\"No shared doc for vpath: \"+t)}}createFile(t,r=!1,s=!0,o=i=>{}){let i=this.getVirtualPath(t);return this.createDoc(i,r,s,o)}placeHold(t){let r=[];return this.ydoc.transact(()=>{t.forEach(s=>{if(!this.ids.has(s)){this.debug(\"creating entirely new doc for\",s);let o=Hs();r.push(o),this.ids.set(s,o)}})},this),r}createDoc(t,r=!1,s=!0,o=i=>{}){!this.synced&&!this.ids.get(t)&&this.warn(`potential for document split at ${t}`);let i=this.ids.get(t),l;if(i===void 0){if(!r)throw new Error(\"attempting to create a new doc without a local file\");": "Error(\"Path is not in shared folder: \"+t)}mkdir(t){let r=(0,Zt.join)(this.path,t);return this.vault.adapter.mkdir((0,ut.normalizePath)(r))}checkPath(t){return t.startsWith(this.path+Zt.sep)}checkExtension(t,r=\".md\"){return t.endsWith(r)}getVirtualPath(t){return this.assertPath(t),t.slice(this.path.length)}getFile(t,r=!0,s=!1,o=!0){let i=this.getVirtualPath(t);return this.getDoc(i,r,s,o)}getTFile(t){let r=this.vault.getAbstractFileByPath(this.getPath(t.path));return r instanceof ut.TFile?r:null}getDoc(t,r=!0,s=!1,o=!0){let i=this.ids.get(t);if(i!==void 0){let l=this.docs.get(i);return l!==void 0?(l.move(t),l):(this.log(\"[getDoc]: creating doc for shared ID\"),this.createDoc(t,!1,o))}else{if(r)return this.log(\"[getDoc]: creating new shared ID for existing file\"),this.createDoc(t,s,o);throw new Error(\"No shared doc for vpath: \"+t)}}createFile(t,r=!1,s=!0,o=i=>{}){let i=this.getVirtualPath(t);return this.createDoc(i,r,s,o)}placeHold(t){let r=[];return this.ydoc.transact(()=>{t.forEach(s=>{if(!this.ids.has(s)){this.debug(\"creating entirely new doc for\",s);let o=Hs();r.push(o),this.ids.set(s,o)}})},this),r}createDoc(t,r=!1,s=!0,o=i=>{}){!this.synced&&!this.ids.get(t)&&this.warn(`potential for document split at ${t}`);let i=this.ids.get(t),l;if(i===void 0){if(!r)throw new Error(\"attempting to create a new doc without a local file\");",
    "Error(`This folder is already mounted at ${l.path}.`);": "Error(`This folder is already mounted at ${l.path}.`);",
    "Error(\"Conflict: Tracked folder exists at this location.\");": "Error(\"Conflict: Tracked folder exists at this location.\");",
    "Error(\"Function called outside component initialization\");": "Error(\"Function called outside component initialization\");",
    "Error(`Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var GS=Object.prototype.toString,ai=new rn;ai.useLongestToken=!0;ai.tokenize=tf.tokenize;ai.castInput=function(n){var e=this.options,t=e.undefinedReplacement,r=e.stringifyReplacer,s=r===void 0?function(o,i){return typeof i==\"undefined\"?t:i}:r;return typeof n==\"string\"?n:JSON.stringify(Zu(n,null,null,s),s,\"  \")};ai.equals=function(n,e){return rn.prototype.equals.call(ai,n.replace(/,([\\r\\n])/g,\"$1\"),e.replace(/,([\\r\\n])/g,\"$1\"))};function Zu(n,e,t,r,s){e=e||[],t=t||[],r&&(n=r(s,n));var o;for(o=0;o<e.length;o+=1)if(e[o]===n)return t[o];var i;if(GS.call(n)===\"[object Array]\"){for(e.push(n),i=new Array(n.length),t.push(i),o=0;o<n.length;o+=1)i[o]=Zu(n[o],e,t,r,s);return e.pop(),t.pop(),i}if(n&&n.toJSON&&(n=n.toJSON()),Ya(n)===\"object\"&&n!==null){e.push(n),i={},t.push(i);var l=[],c;for(c in n)n.hasOwnProperty(c)&&l.push(c);for(l.sort(),o=0;o<l.length;o+=1)c=l[o],i[c]=Zu(n[c],e,t,r,c);e.pop(),t.pop()}else i=n;return i}var Qu=new rn;Qu.tokenize=function(n){return n.slice()};Qu.join=Qu.removeEmpty=function(n){return n};function zm(n,e,t,r,s,o,i){i||(i={}),typeof i.context==\"undefined\"&&(i.context=4);var l=VS(t,r,i);if(!l)return;l.push({value:\"\",lines:[]});function c(x){return x.map(function(M){return\" \"+M})}for(var f=[],d=0,p=0,g=[],_=1,y=1,b=function(M){var W=l[M],S=W.lines||W.value.replace(/\\n$/,\"\").split(`\n`);": "Error(`Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var GS=Object.prototype.toString,ai=new rn;ai.useLongestToken=!0;ai.tokenize=tf.tokenize;ai.castInput=function(n){var e=this.options,t=e.undefinedReplacement,r=e.stringifyReplacer,s=r===void 0?function(o,i){return typeof i==\"undefined\"?t:i}:r;return typeof n==\"string\"?n:JSON.stringify(Zu(n,null,null,s),s,\"  \")};ai.equals=function(n,e){return rn.prototype.equals.call(ai,n.replace(/,([\\r\\n])/g,\"$1\"),e.replace(/,([\\r\\n])/g,\"$1\"))};function Zu(n,e,t,r,s){e=e||[],t=t||[],r&&(n=r(s,n));var o;for(o=0;o<e.length;o+=1)if(e[o]===n)return t[o];var i;if(GS.call(n)===\"[object Array]\"){for(e.push(n),i=new Array(n.length),t.push(i),o=0;o<n.length;o+=1)i[o]=Zu(n[o],e,t,r,s);return e.pop(),t.pop(),i}if(n&&n.toJSON&&(n=n.toJSON()),Ya(n)===\"object\"&&n!==null){e.push(n),i={},t.push(i);var l=[],c;for(c in n)n.hasOwnProperty(c)&&l.push(c);for(l.sort(),o=0;o<l.length;o+=1)c=l[o],i[c]=Zu(n[c],e,t,r,c);e.pop(),t.pop()}else i=n;return i}var Qu=new rn;Qu.tokenize=function(n){return n.slice()};Qu.join=Qu.removeEmpty=function(n){return n};function zm(n,e,t,r,s,o,i){i||(i={}),typeof i.context==\"undefined\"&&(i.context=4);var l=VS(t,r,i);if(!l)return;l.push({value:\"\",lines:[]});function c(x){return x.map(function(M){return\" \"+M})}for(var f=[],d=0,p=0,g=[],_=1,y=1,b=function(M){var W=l[M],S=W.lines||W.value.replace(/\\n$/,\"\").split(`\n`);",
    "Error(\"Unable to decode S3RN\");": "Error(\"Unable to decode S3RN\");",
    "Error(\"Not logged in\");": "Error(\"Not logged in\");",
    "Error(`Failed to upload document: ${t.status} ${t.text}`)}catch(t){console.error(t);return}}async putFolderFiles(e){await e.whenReady(),this.log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`);": "Error(`Failed to upload document: ${t.status} ${t.text}`)}catch(t){console.error(t);return}}async putFolderFiles(e){await e.whenReady(),this.log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`);",
    "Error(\"derived() expects stores as input, got a falsy value\");": "Error(\"derived() expects stores as input, got a falsy value\");",
    "Error(\"argument name is invalid\");": "Error(\"argument name is invalid\");",
    "Error(\"argument val is invalid\");": "Error(\"argument val is invalid\");",
    "Error(\"option maxAge is invalid\");": "Error(\"option maxAge is invalid\");",
    "Error(\"option domain is invalid\");": "Error(\"option domain is invalid\");",
    "Error(\"option path is invalid\");": "Error(\"option path is invalid\");",
    "Error(\"option expires is invalid\");": "Error(\"option expires is invalid\");",
    "Error(\"option priority is invalid\")}if(r.sameSite)switch(typeof r.sameSite==\"string\"?r.sameSite.toLowerCase():r.sameSite){case!0:i+=\"; SameSite=Strict\";break;case\"lax\":i+=\"; SameSite=Lax\";break;case\"strict\":i+=\"; SameSite=Strict\";break;case\"none\":i+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}return i}function pE(n){return n.indexOf(\"%\")!==-1?decodeURIComponent(n):n}function mE(n){return encodeURIComponent(n)}var Xg;function ll(n){if(n)try{let e=decodeURIComponent(Xg(n.split(\".\")[1]).split(\"\").map(function(t){return\"%\"+(\"00\"+t.charCodeAt(0).toString(16)).slice(-2)}).join(\"\"));return JSON.parse(e)||{}}catch(e){}return{}}function Zg(n,e=0){let t=ll(n);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}Xg=typeof atob==\"function\"?atob:n=>{let e=String(n).replace(/=+$/,\"\");": "Error(\"option priority is invalid\")}if(r.sameSite)switch(typeof r.sameSite==\"string\"?r.sameSite.toLowerCase():r.sameSite){case!0:i+=\"; SameSite=Strict\";break;case\"lax\":i+=\"; SameSite=Lax\";break;case\"strict\":i+=\"; SameSite=Strict\";break;case\"none\":i+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}return i}function pE(n){return n.indexOf(\"%\")!==-1?decodeURIComponent(n):n}function mE(n){return encodeURIComponent(n)}var Xg;function ll(n){if(n)try{let e=decodeURIComponent(Xg(n.split(\".\")[1]).split(\"\").map(function(t){return\"%\"+(\"00\"+t.charCodeAt(0).toString(16)).slice(-2)}).join(\"\"));return JSON.parse(e)||{}}catch(e){}return{}}function Zg(n,e=0){let t=ll(n);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}Xg=typeof atob==\"function\"?atob:n=>{let e=String(n).replace(/=+$/,\"\");",
    "Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");": "Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");",
    "Error(\"topic must be set.\");": "Error(\"topic must be set.\");",
    "Error(\"EventSource connect took too long.\"))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl(\"/api/realtime\")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error(\"Failed to establish realtime connection.\"))},this.eventSource.addEventListener(\"PB_CONNECT\",e=>{let t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let r=3;for(;this.hasUnsentSubscriptions()&&r>0;)r--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);let r=this.getSubscriptionsByTopic(\"PB_CONNECT\");": "Error(\"EventSource connect took too long.\"))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl(\"/api/realtime\")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error(\"Failed to establish realtime connection.\"))},this.eventSource.addEventListener(\"PB_CONNECT\",e=>{let t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let r=3;for(;this.hasUnsentSubscriptions()&&r>0;)r--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);let r=this.getSubscriptionsByTopic(\"PB_CONNECT\");",
    "Error(\"Missing topic.\");": "Error(\"Missing topic.\");",
    "Error(\"Missing subscription callback.\");": "Error(\"Missing subscription callback.\");",
    "Error(\"No remote to connect to\"));return}if(!n.loggedIn){r(Error(\"Not logged in\"));return}let c={Authorization:`Bearer ${(f=n.user)==null?void 0:f.token}`};(0,my.requestUrl)({url:\"https://api.system3.md/token\",method:\"POST\",headers:c,body:l}).then(d=>{d.status!==200&&(s(d.status,d.text),r(Error(`从 API 收到状态码 ${d.status}。`)));let p=d.json;t(p)}).catch(d=>{o(d,l),r(d)})}var Cl=class extends Sl{constructor(e,t,r,s=5){super({log:Q(\"[LiveTokenStore]\",\"debug\"),refresh:jE(e,GE),getJwtExpiry:qE,getStorage:function(){return new kl(\"TokenStore/\"+r)},getTimeProvider:()=>t},s)}};var gy=require(\"obsidian\");": "Error(\"No remote to connect to\"));return}if(!n.loggedIn){r(Error(\"Not logged in\"));return}let c={Authorization:`Bearer ${(f=n.user)==null?void 0:f.token}`};(0,my.requestUrl)({url:\"https://api.system3.md/token\",method:\"POST\",headers:c,body:l}).then(d=>{d.status!==200&&(s(d.status,d.text),r(Error(`从 API 收到状态码 ${d.status}。`)));let p=d.json;t(p)}).catch(d=>{o(d,l),r(d)})}var Cl=class extends Sl{constructor(e,t,r,s=5){super({log:Q(\"[LiveTokenStore]\",\"debug\"),refresh:jE(e,GE),getJwtExpiry:qE,getStorage:function(){return new kl(\"TokenStore/\"+r)},getTimeProvider:()=>t},s)}};var gy=require(\"obsidian\");",
    "Error(\"invalid remote folder\");": "Error(\"invalid remote folder\");",
    "Error(`Unable to find user: ${this.relayRole.user}`);": "Error(`Unable to find user: ${this.relayRole.user}`);",
    "Error(\"invalid role\");": "Error(\"invalid role\");",
    "Error(\"invalid invitation\");": "Error(\"invalid invitation\");",
    "Error(\"invalid subscription\");": "Error(\"invalid subscription\");",
    "Error(\"Failed to accept invitation\");": "Error(\"Failed to accept invitation\");",
    "Error(\"Failed to create Relay\");": "Error(\"Failed to create Relay\");",
    "Error(\"Not Logged In\");": "Error(\"Not Logged In\");",
    "Error(\"Failed to update relay\");": "Error(\"Failed to update relay\");",
    "Error(\"Failed to create folder\");": "Error(\"Failed to create folder\");",
    "\"Join relay\"": "\"Join relay\"",
    "\"New relay\"": "\"New relay\"",
    "\"Refresh\"": "\"Refresh\"",
    "\"Check\"": "\"Check\"",
    "\"Cancel\"": "\"Cancel\"",
    "\"Logout\"": "\"Logout\"",
    "\"(Untitled Relay)\"": "\"(Untitled Relay)\"",
    "\"Add to vault\"": "\"Add to vault\"",
    "\"Confirm\"": "\"Confirm\"",
    "\"Add to Vault\"": "\"Add to Vault\"",
    "\"Kick\"": "\"Kick\"",
    "\"Leave\"": "\"Leave\"",
    "\"Manage\"": "\"Manage\"",
    "\"Status: Cancelled\"": "\"Status: Cancelled\"",
    "\"Destroy\"": "\"Destroy\"",
    "\"Delete local\"": "\"Delete local\"",
    "\"Delete metadata\"": "\"Delete metadata\"",
    "\"Delete remote\"": "\"Delete remote\"",
    "\"Feature Flags\"": "\"Feature Flags\"",
    "\"Make sure you reload obsidian after changing the flags below.\"": "\"Make sure you reload obsidian after changing the flags below.\"",
    "\"Add\"": "\"Add\"",
    "\"Back\"": "\"Back\"",
    "\"Upgrade\"": "\"Upgrade\"",
    "\"destroy\"": "\"destroy\"",
    "\"Tracking Changes\"": "\"Tracking Changes\"",
    "\"Metadata is required for sharing.\"": "\"Metadata is required for sharing.\"",
    "\"Add shared folder to vault\"": "\"Add shared folder to vault\"",
    "\"Cancel subscription to destroy relay.\"": "\"Cancel subscription to destroy relay.\"",
    "\"Select a folder to add to the relay\"": "\"Select a folder to add to the relay\"",
    "\"Thanks for supporting Relay development <3\"": "\"Thanks for supporting Relay development <3\"",
    "\"custom fetch can help avoid some network restrictions\"": "\"custom fetch can help avoid some network restrictions\"",
    "\"Database Corrupted. Connect to Relay servers to resolve.\"": "\"Database Corrupted. Connect to Relay servers to resolve.\"",
    "\"Enter to create\"": "\"Enter to create\"",
    "\"Enter share key\"": "\"Enter share key\"",
    "\"Login with Google\"": "\"Login with Google\"",
    "\"Login to enable Live edits\"": "\"Login to enable Live edits\"",
    "\"login issues? try the \"),r=L(\"a\"),r.textContent=\"debug flow.\"": "\"login issues? try the \"),r=L(\"a\"),r.textContent=\"debug flow.\"",
    "'We&#39;re working on improving the login process. Please <a href=\"https://discord.system3.md\">join our Discord</a> and we will help you.'": "'We&#39;re working on improving the login process. Please <a href=\"https://discord.system3.md\">join our Discord</a> and we will help you.'"
  }
}