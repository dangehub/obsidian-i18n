{
  "manifest": {
    "translationVersion": -639075600000,
    "pluginVersion": "2.57.2"
  },
  "description": {
    "original": "Publish your notes to the web for others to enjoy. For free.",
    "translation": "Publish your notes to the web for others to enjoy. For free."
  },
  "dict": {
    "Notice(\"devPluginPath missing, run generateGardenSettings.mjs\")": "Notice(\"devPluginPath missing, run generateGardenSettings.mjs\")",
    "Notice(`Snapshot written to ${fullSnapshotPath}`)": "Notice(`Snapshot written to ${fullSnapshotPath}`)",
    "Notice(`Check snapshot to make sure nothing has accidentally changed`)": "Notice(`Check snapshot to make sure nothing has accidentally changed`)",
    "Notice(\n      \"Note does not have the dg-publish: true set. Please add this and try again.\"\n    )": "Notice(\n      \"Note does not have the dg-publish: true set. Please add this and try again.\"\n    )",
    "Notice(\n            \"Unable to render dataview query. Please update the dataview plugin to the latest version.\"\n          )": "Notice(\n            \"Unable to render dataview query. Please update the dataview plugin to the latest version.\"\n          )",
    "Notice(\n            \"Unable to render dataviewjs query. Please update the dataview plugin to the latest version.\"\n          )": "Notice(\n            \"Unable to render dataviewjs query. Please update the dataview plugin to the latest version.\"\n          )",
    "Notice(\n            \"Unable to render inline dataview query. Please update the dataview plugin to the latest version.\"\n          )": "Notice(\n            \"Unable to render inline dataview query. Please update the dataview plugin to the latest version.\"\n          )",
    "Notice(\n            \"Unable to render inline dataviewjs query. Please update the dataview plugin to the latest version.\"\n          )": "Notice(\n            \"Unable to render inline dataviewjs query. Please update the dataview plugin to the latest version.\"\n          )",
    "Notice(\n            `Your custom filters contains an invalid regex: ${filter2.pattern}. Skipping it.`\n          )": "Notice(\n            `Your custom filters contains an invalid regex: ${filter2.pattern}. Skipping it.`\n          )",
    "Notice(\n        \"Config error: You need to define a GitHub repo in the plugin settings\"\n      )": "Notice(\n        \"Config error: You need to define a GitHub repo in the plugin settings\"\n      )",
    "Notice(\n        \"Config error: You need to define a GitHub Username in the plugin settings\"\n      )": "Notice(\n        \"Config error: You need to define a GitHub Username in the plugin settings\"\n      )",
    "Notice(\n        \"Config error: You need to define a GitHub Token in the plugin settings\"\n      )": "Notice(\n        \"Config error: You need to define a GitHub Token in the plugin settings\"\n      )",
    "Notice(\"Settings already up to date!\")": "Notice(\"Settings already up to date!\")",
    "Notice(\"Please set the garden base url in the settings\")": "Notice(\"Please set the garden base url in the settings\")",
    "Notice(\"Applying settings to site...\")": "Notice(\"Applying settings to site...\")",
    "Notice(\"Applying Style Settings...\")": "Notice(\"Applying Style Settings...\")",
    "Notice(\"No Style Settings found\")": "Notice(\"No Style Settings found\")",
    "Notice(\"Style Settings applied to site\")": "Notice(\"Style Settings applied to site\")",
    "Notice(\"Style Settings removed from site\")": "Notice(\"Style Settings removed from site\")",
    "Notice(\n          `The ${theme.name} theme doesn't support ${baseTheme} mode.`\n        )": "Notice(\n          `The ${theme.name} theme doesn't support ${baseTheme} mode.`\n        )",
    "Notice(\"Successfully applied settings\")": "Notice(\"Successfully applied settings\")",
    "Notice(\"Updating settings...\")": "Notice(\"Updating settings...\")",
    "Notice(\n          \"Failed to update settings. Make sure you have an internet connection.\"\n        )": "Notice(\n          \"Failed to update settings. Make sure you have an internet connection.\"\n        )",
    "Notice(\"Settings successfully updated!\")": "Notice(\"Settings successfully updated!\")",
    "Notice(`${this.settings.faviconPath} is not a valid file.`)": "Notice(`${this.settings.faviconPath} is not a valid file.`)",
    "Notice(\"Adding publish flag to note and publishing it.\")": "Notice(\"Adding publish flag to note and publishing it.\")",
    "Notice(\"Processing files to publish...\")": "Notice(\"Processing files to publish...\")",
    "Notice(\"Garden is already fully synced!\")": "Notice(\"Garden is already fully synced!\")",
    "Notice(\n              `Publishing ${filesToPublish.length} notes, deleting ${filesToDelete.length} notes and ${imagesToDelete.length} images. See the status bar in lower right corner for progress.`,\n              8e3\n            )": "Notice(\n              `Publishing ${filesToPublish.length} notes, deleting ${filesToDelete.length} notes and ${imagesToDelete.length} images. See the status bar in lower right corner for progress.`,\n              8e3\n            )",
    "Notice(\n              `Successfully published ${filesToPublish.length} notes to your garden.`\n            )": "Notice(\n              `Successfully published ${filesToPublish.length} notes to your garden.`\n            )",
    "Notice(\n                `Successfully deleted ${filesToDelete.length} notes from your garden.`\n              )": "Notice(\n                `Successfully deleted ${filesToDelete.length} notes from your garden.`\n              )",
    "Notice(\n                `Successfully deleted ${imagesToDelete.length} images from your garden.`\n              )": "Notice(\n                `Successfully deleted ${imagesToDelete.length} images from your garden.`\n              )",
    "Notice(\n              \"Unable to publish multiple notes, something went wrong.\"\n            )": "Notice(\n              \"Unable to publish multiple notes, something went wrong.\"\n            )",
    "Notice(\n        \"No file is open/active. Please open a file and try again.\"\n      )": "Notice(\n        \"No file is open/active. Please open a file and try again.\"\n      )",
    "Notice(`Note URL copied to clipboard`)": "Notice(`Note URL copied to clipboard`)",
    "Notice(\n          \"Unable to copy note URL to clipboard, something went wrong.\"\n        )": "Notice(\n          \"Unable to copy note URL to clipboard, something went wrong.\"\n        )",
    "Notice(\n            \"The current file is not a markdown file. Please open a markdown file and try again.\"\n          )": "Notice(\n            \"The current file is not a markdown file. Please open a markdown file and try again.\"\n          )",
    "Notice(\"Publishing note...\")": "Notice(\"Publishing note...\")",
    "Notice(`Successfully published note to your garden.`)": "Notice(`Successfully published note to your garden.`)",
    "Notice(\"Unable to publish note, something went wrong.\")": "Notice(\"Unable to publish note, something went wrong.\")",
    ".log(e)": ".log(e)",
    ".log(\"Initializing DigitalGarden plugin v\" + this.appVersion)": ".log(\"Initializing DigitalGarden plugin v\" + this.appVersion)",
    ".error(e)": ".error(e)",
    ".error(\n            `Invalid regex: ${filter2.pattern} ${filter2.flags}`\n          )": ".error(\n            `Invalid regex: ${filter2.pattern} ${filter2.flags}`\n          )",
    ".error(\n              `can't find transcluded file ${transclusionFilePath}`\n            )": ".error(\n              `can't find transcluded file ${transclusionFilePath}`\n            )",
    ".error(error)": ".error(error)",
    ".error(\n            `cannot find file ${path} on github, not removing`\n          )": ".error(\n            `cannot find file ${path} on github, not removing`\n          )",
    ".error(\"Could not get latest release\")": ".error(\"Could not get latest release\")",
    ".error(\"Could not get latest release\", error)": ".error(\"Could not get latest release\", error)",
    ".error(\"Could not get latest commit\")": ".error(\"Could not get latest commit\")",
    ".error(\"Could not get latest commit\", error)": ".error(\"Could not get latest commit\", error)",
    ".error(\"Error loading style settings plugin\")": ".error(\"Error loading style settings plugin\")",
    ".error(\"Unable to load generateGardenSnapshot\", e)": ".error(\"Unable to load generateGardenSnapshot\", e)",
    "name: \"file\"": "name: \"file\"",
    "name: \"chevron-right\"": "name: \"chevron-right\"",
    "name: \"file-diff\"": "name: \"file-diff\"",
    "name: \"folder\"": "name: \"folder\"",
    "name: \"clock\"": "name: \"clock\"",
    "name: \"cross\"": "name: \"cross\"",
    "name: \"check\"": "name: \"check\"",
    "name: \"applyStyles\"": "name: \"applyStyles\"",
    "name: \"arrow\"": "name: \"arrow\"",
    "name: \"computeStyles\"": "name: \"computeStyles\"",
    "name: \"eventListeners\"": "name: \"eventListeners\"",
    "name: \"flip\"": "name: \"flip\"",
    "name: \"hide\"": "name: \"hide\"",
    "name: \"offset\"": "name: \"offset\"",
    "name: \"popperOffsets\"": "name: \"popperOffsets\"",
    "name: \"preventOverflow\"": "name: \"preventOverflow\"",
    "name: \"sameWidth\"": "name: \"sameWidth\"",
    "name: \"Quick Publish And Share Note\"": "name: \"Quick Publish And Share Note\"",
    "name: \"Publish Single Note\"": "name: \"Publish Single Note\"",
    "name: \"Generate Garden Snapshot\"": "name: \"Generate Garden Snapshot\"",
    "name: \"Publish Multiple Notes\"": "name: \"Publish Multiple Notes\"",
    "name: \"Copy Garden URL\"": "name: \"Copy Garden URL\"",
    "name: \"Open Publication Center\"": "name: \"Open Publication Center\"",
    "name: \"Add publish flag\"": "name: \"Add publish flag\"",
    "name: \"Remove publish flag\"": "name: \"Remove publish flag\"",
    "name: \"Toggle publication status\"": "name: \"Toggle publication status\"",
    "text: \"Digital Garden: \"": "text: \"Digital Garden: \"",
    "text: `${this.numberOfNotesToPublish} files marked for publishing`": "text: `${this.numberOfNotesToPublish} files marked for publishing`",
    "text: `${localFile.basename}`": "text: `${localFile.basename}`",
    "text: \"Publication Center\"": "text: \"Publication Center\"",
    "text: \"reference\"": "text: \"reference\"",
    "text: \"GitHub Authentication (required)\"": "text: \"GitHub Authentication (required)\"",
    "text: \"Digital Garden Settings\"": "text: \"Digital Garden Settings\"",
    "text: \"Remember to read the setup guide if you haven't already. It can be found \"": "text: \"Remember to read the setup guide if you haven't already. It can be found \"",
    "text: \"URL\"": "text: \"URL\"",
    "text: \"Features\"": "text: \"Features\"",
    "text: \"Appearance\"": "text: \"Appearance\"",
    "text: \"Advanced\"": "text: \"Advanced\"",
    "text: \"Default Note Settings\"": "text: \"Default Note Settings\"",
    "text: \"Note Setting Docs is available \"": "text: \"Note Setting Docs is available \"",
    "text: \"Appearance Settings\"": "text: \"Appearance Settings\"",
    "text: \"Style Settings Plugin\"": "text: \"Style Settings Plugin\"",
    "text: \"Theme Settings\"": "text: \"Theme Settings\"",
    ".setButtonText(\"Manage Rewrite Rules\")": ".setButtonText(\"Manage Rewrite Rules\")",
    ".setButtonText(\"Manage note settings\")": ".setButtonText(\"Manage note settings\")",
    ".setButtonText(\"Apply settings to site\")": ".setButtonText(\"Apply settings to site\")",
    ".setButtonText(\"Manage appearance\")": ".setButtonText(\"Manage appearance\")",
    ".setButtonText(\"Apply Style Settings\")": ".setButtonText(\"Apply Style Settings\")",
    ".setButtonText(\"Clear\")": ".setButtonText(\"Clear\")",
    ".setButtonText(\"Manage Custom Filters\")": ".setButtonText(\"Manage Custom Filters\")",
    ".setButtonText(\"Add\")": ".setButtonText(\"Add\")",
    ".setButtonText(\n            `Update to ${updater.newestTemplateVersion}`\n          )": ".setButtonText(\n            `Update to ${updater.newestTemplateVersion}`\n          )",
    ".setButtonText(\"Already up to date!\")": ".setButtonText(\"Already up to date!\")",
    ".setButtonText(\"Create PR\")": ".setButtonText(\"Create PR\")",
    ".setName(\"GitHub repo name\")": ".setName(\"GitHub repo name\")",
    ".setName(\"GitHub Username\")": ".setName(\"GitHub Username\")",
    ".setName(\"GitHub token\")": ".setName(\"GitHub token\")",
    ".setName(\"Path Rewrite Rules\")": ".setName(\"Path Rewrite Rules\")",
    ".setName(\"Global Note Settings\")": ".setName(\"Global Note Settings\")",
    ".setName(\"Show home link (dg-home-link)\")": ".setName(\"Show home link (dg-home-link)\")",
    ".setName(\"Show local graph for notes (dg-show-local-graph)\")": ".setName(\"Show local graph for notes (dg-show-local-graph)\")",
    ".setName(\"Show backlinks for notes (dg-show-backlinks)\")": ".setName(\"Show backlinks for notes (dg-show-backlinks)\")",
    ".setName(\"Show a table of content for notes (dg-show-toc)\")": ".setName(\"Show a table of content for notes (dg-show-toc)\")",
    ".setName(\"Show inline title (dg-show-inline-title)\")": ".setName(\"Show inline title (dg-show-inline-title)\")",
    ".setName(\"Show filetree sidebar (dg-show-file-tree)\")": ".setName(\"Show filetree sidebar (dg-show-file-tree)\")",
    ".setName(\"Enable search (dg-enable-search)\")": ".setName(\"Enable search (dg-enable-search)\")",
    ".setName(\"Enable link preview (dg-link-preview)\")": ".setName(\"Enable link preview (dg-link-preview)\")",
    ".setName(\"Show Tags (dg-show-tags)\")": ".setName(\"Show Tags (dg-show-tags)\")",
    ".setName(\"Let all frontmatter through (dg-pass-frontmatter)\")": ".setName(\"Let all frontmatter through (dg-pass-frontmatter)\")",
    ".setName(\"Appearance\")": ".setName(\"Appearance\")",
    ".setName(\"Apply current style settings to site\")": ".setName(\"Apply current style settings to site\")",
    ".setName(\"Theme\")": ".setName(\"Theme\")",
    ".setName(\"Base theme\")": ".setName(\"Base theme\")",
    ".setName(\"Sitename\")": ".setName(\"Sitename\")",
    ".setName(\"Main language\")": ".setName(\"Main language\")",
    ".setName(\"Favicon\")": ".setName(\"Favicon\")",
    ".setName(\"Use full resolution images\")": ".setName(\"Use full resolution images\")",
    ".setName(\"Timestamp format\")": ".setName(\"Timestamp format\")",
    ".setName(\"Show created timestamp\")": ".setName(\"Show created timestamp\")",
    ".setName(\"Created timestamp Frontmatter Key\")": ".setName(\"Created timestamp Frontmatter Key\")",
    ".setName(\"Show updated timestamp\")": ".setName(\"Show updated timestamp\")",
    ".setName(\"Updated timestamp Frontmatter Key\")": ".setName(\"Updated timestamp Frontmatter Key\")",
    ".setName(\"Body Classes Key\")": ".setName(\"Body Classes Key\")",
    ".setName(\"Note icon Frontmatter Key\")": ".setName(\"Note icon Frontmatter Key\")",
    ".setName(\"Default note icon Value\")": ".setName(\"Default note icon Value\")",
    ".setName(\"Show note icon on Title\")": ".setName(\"Show note icon on Title\")",
    ".setName(\"Show note icon in FileTree\")": ".setName(\"Show note icon in FileTree\")",
    ".setName(\"Show note icon on Internal Links\")": ".setName(\"Show note icon on Internal Links\")",
    ".setName(\"Show note icon on Backlinks\")": ".setName(\"Show note icon on Backlinks\")",
    ".setName(\"Base URL\")": ".setName(\"Base URL\")",
    ".setName(\"Slugify Note URL\")": ".setName(\"Slugify Note URL\")",
    ".setName(\"Custom Filters\")": ".setName(\"Custom Filters\")",
    ".setName(\"Filters\")": ".setName(\"Filters\")",
    ".setName(\"Site Template\")": ".setName(\"Site Template\")",
    ".setName(\"Update site to latest template\")": ".setName(\"Update site to latest template\")",
    ".setDesc(\"The name of the GitHub repository\")": ".setDesc(\"The name of the GitHub repository\")",
    ".setDesc(\"Your GitHub Username\")": ".setDesc(\"Your GitHub Username\")",
    ".setDesc(\n        \"Define rules to rewrite note folder structure in the garden. See the modal for more information.\"\n      )": ".setDesc(\n        \"Define rules to rewrite note folder structure in the garden. See the modal for more information.\"\n      )",
    ".setDesc(\n        `Default settings for each published note. These can be overwritten per note via frontmatter.`\n      )": ".setDesc(\n        `Default settings for each published note. These can be overwritten per note via frontmatter.`\n      )",
    ".setDesc(\n        \"Determines whether to show a link back to the homepage or not.\"\n      )": ".setDesc(\n        \"Determines whether to show a link back to the homepage or not.\"\n      )",
    ".setDesc(\n        \"When turned on, notes will show its local graph in a sidebar on desktop and at the bottom of the page on mobile.\"\n      )": ".setDesc(\n        \"When turned on, notes will show its local graph in a sidebar on desktop and at the bottom of the page on mobile.\"\n      )",
    ".setDesc(\n        \"When turned on, notes will show backlinks in a sidebar on desktop and at the bottom of the page on mobile.\"\n      )": ".setDesc(\n        \"When turned on, notes will show backlinks in a sidebar on desktop and at the bottom of the page on mobile.\"\n      )",
    ".setDesc(\n        \"When turned on, notes will show all headers as a table of content in a sidebar on desktop. It will not be shown on mobile devices.\"\n      )": ".setDesc(\n        \"When turned on, notes will show all headers as a table of content in a sidebar on desktop. It will not be shown on mobile devices.\"\n      )",
    ".setDesc(\n        \"When turned on, the title of the note will show on top of the page.\"\n      )": ".setDesc(\n        \"When turned on, the title of the note will show on top of the page.\"\n      )",
    ".setDesc(\"When turned on, a filetree will be shown on your site.\")": ".setDesc(\"When turned on, a filetree will be shown on your site.\")",
    ".setDesc(\n        \"When turned on, users will be able to search through the content of your site.\"\n      )": ".setDesc(\n        \"When turned on, users will be able to search through the content of your site.\"\n      )",
    ".setDesc(\n        \"When turned on, hovering over links to notes in your garden shows a scrollable preview.\"\n      )": ".setDesc(\n        \"When turned on, hovering over links to notes in your garden shows a scrollable preview.\"\n      )",
    ".setDesc(\n        \"When turned on, tags in your frontmatter will be displayed on each note. If search is enabled, clicking on a tag will bring up a search for all notes containing that tag.\"\n      )": ".setDesc(\n        \"When turned on, tags in your frontmatter will be displayed on each note. If search is enabled, clicking on a tag will bring up a search for all notes containing that tag.\"\n      )",
    ".setDesc(\"Manage themes, sitename and styling on your site\")": ".setDesc(\"Manage themes, sitename and styling on your site\")",
    ".setDesc(\n            \"Click the apply button to use the current style settings from the Style Settings Plugin on your site. (The plugin looks at the currently APPLIED settings. Meaning you need to have the theme you are using in the garden selected in Obsidian before applying)\"\n          )": ".setDesc(\n            \"Click the apply button to use the current style settings from the Style Settings Plugin on your site. (The plugin looks at the currently APPLIED settings. Meaning you need to have the theme you are using in the garden selected in Obsidian before applying)\"\n          )",
    ".setDesc(\n        \"The name of your site. This will be displayed as the site header.\"\n      )": ".setDesc(\n        \"The name of your site. This will be displayed as the site header.\"\n      )",
    ".setDesc(\n        \"Language code (ISO 639-1) for the main language of your site. This is used to set the correct language on your site to assist search engines and browsers.\"\n      )": ".setDesc(\n        \"Language code (ISO 639-1) for the main language of your site. This is used to set the correct language on your site to assist search engines and browsers.\"\n      )",
    ".setDesc(\n        \"Path to an svg in your vault you wish to use as a favicon. Leave blank to use default. Must be square! (eg. 16x16)\"\n      )": ".setDesc(\n        \"Path to an svg in your vault you wish to use as a favicon. Leave blank to use default. Must be square! (eg. 16x16)\"\n      )",
    ".setDesc(\n        \"By default, the images on your site are compressed to make your site load faster. If you instead want to use the full resolution images, enable this setting.\"\n      )": ".setDesc(\n        \"By default, the images on your site are compressed to make your site load faster. If you instead want to use the full resolution images, enable this setting.\"\n      )",
    ".setDesc(\n        \"The format string to render timestamp on the garden. Must be luxon compatible\"\n      )": ".setDesc(\n        \"The format string to render timestamp on the garden. Must be luxon compatible\"\n      )",
    ".setDesc(\n        \"Key to get the created timestamp from the frontmatter. Leave blank to get the value from file creation time. The value can be any value that luxon Datetime.fromISO can parse.\"\n      )": ".setDesc(\n        \"Key to get the created timestamp from the frontmatter. Leave blank to get the value from file creation time. The value can be any value that luxon Datetime.fromISO can parse.\"\n      )",
    ".setDesc(\n        \"Key to get the updated timestamp from the frontmatter. Leave blank to get the value from file update time. The value can be any value that luxon Datetime.fromISO can parse.\"\n      )": ".setDesc(\n        \"Key to get the updated timestamp from the frontmatter. Leave blank to get the value from file update time. The value can be any value that luxon Datetime.fromISO can parse.\"\n      )",
    ".setDesc(\n        \"Key for setting css-classes to the note body from the frontmatter.\"\n      )": ".setDesc(\n        \"Key for setting css-classes to the note body from the frontmatter.\"\n      )",
    ".setDesc(\"Key to get the note icon value from the frontmatter\")": ".setDesc(\"Key to get the note icon value from the frontmatter\")",
    ".setDesc(\"The default value for note icon if not specified\")": ".setDesc(\"The default value for note icon if not specified\")",
    ".setDesc(\n      `This is optional, but recommended. It is used for the \"Copy Garden URL\" command, generating a sitemap.xml for better SEO and an RSS feed located at /feed.xml. `\n    )": ".setDesc(\n      `This is optional, but recommended. It is used for the \"Copy Garden URL\" command, generating a sitemap.xml for better SEO and an RSS feed located at /feed.xml. `\n    )",
    ".setDesc(\n      'Transform the URL from \"/My Folder/My Note/\" to \"/my-folder/my-note\". If your note titles contains non-English characters, this should be disabled.'\n    )": ".setDesc(\n      'Transform the URL from \"/My Folder/My Note/\" to \"/my-folder/my-note\". If your note titles contains non-English characters, this should be disabled.'\n    )",
    ".setDesc(\n      \"Define custom rules to replace parts of the note before publishing.\"\n    )": ".setDesc(\n      \"Define custom rules to replace parts of the note before publishing.\"\n    )",
    ".setDesc(\n        \"Manage updates to the base template. You should try updating the template when you update the plugin to make sure your garden support all features.\"\n      )": ".setDesc(\n        \"Manage updates to the base template. You should try updating the template when you update the plugin to make sure your garden support all features.\"\n      )",
    ".setDesc(\n        `\n\t\t\t\tThis will create a pull request with the latest template changes, which you'll need to use all plugin features. \n\t\t\t\tIt will not publish any changes before you approve them.\n\t\t\t`\n      )": ".setDesc(\n        `\n\t\t\t\tThis will create a pull request with the latest template changes, which you'll need to use all plugin features. \n\t\t\t\tIt will not publish any changes before you approve them.\n\t\t\t`\n      )",
    ".setPlaceholder(\"regex pattern\")": ".setPlaceholder(\"regex pattern\")",
    ".setPlaceholder(\"replacement\")": ".setPlaceholder(\"replacement\")",
    ".setPlaceholder(\"flags\")": ".setPlaceholder(\"flags\")",
    ".setPlaceholder(\"mydigitalgarden\")": ".setPlaceholder(\"mydigitalgarden\")",
    ".setPlaceholder(\"myusername\")": ".setPlaceholder(\"myusername\")",
    ".setPlaceholder(\"Secret Token\")": ".setPlaceholder(\"Secret Token\")",
    ".setPlaceholder(\"myfavicon.svg\")": ".setPlaceholder(\"myfavicon.svg\")",
    ".setTooltip(\"Remove filter\")": ".setTooltip(\"Remove filter\")",
    ".setTooltip(\"Add a filter\")": ".setTooltip(\"Add a filter\")",
    "span.innerText = \"A GitHub token with repo permissions. You can generate it \";": "span.innerText = \"A GitHub token with repo permissions. You can generate it \";",
    "      new import_obsidian13.Setting(noteSettingsModal.contentEl).setName(\"允许所有前置信息通过 (dg-pass-frontmatter)\").setDesc(\n        \"THIS WILL BREAK YOUR SITE IF YOU DON'T KNOW WHAT YOU ARE DOING! (But disabling will fix it). Determines whether to let all frontmatter data through to the site template. Be aware that this could break your site if you have data in a format not recognized by the template engine, 11ty.\"\n      )": "      new import_obsidian13.Setting(noteSettingsModal.contentEl).setName(\"允许所有前置信息通过 (dg-pass-frontmatter)\").setDesc(\n        \"THIS WILL BREAK YOUR SITE IF YOU DON'T KNOW WHAT YOU ARE DOING! (But disabling will fix it). Determines whether to let all frontmatter data through to the site template. Be aware that this could break your site if you have data in a format not recognized by the template engine, 11ty.\"\n      )",
    "h1.textContent = \"Path rewrite rules\";": "h1.textContent = \"Path rewrite rules\";",
    "div0.textContent = \"Define rules to rewrite note paths/folder structure, using following\\n\t\tsyntax:\";": "div0.textContent = \"Define rules to rewrite note paths/folder structure, using following\\n\t\tsyntax:\";",
    "     div1.textContent = 'Example: If you want the vault folder \"Personal/Journal\" to be shown as\\n\t\tonly \"Journal\" in the left file sidebar in the garden, add the line\\n\t\t\"Personal/Journal:Journal\"';\n": "     div1.textContent = 'Example: If you want the vault folder \"Personal/Journal\" to be shown as\\n\t\tonly \"Journal\" in the left file sidebar in the garden, add the line\\n\t\t\"Personal/Journal:Journal\"';\n",
    "div2.textContent = \"To define a folder as the root folder for the garden, use\\n\t\t`[from_vault_path]:`\";": "div2.textContent = \"To define a folder as the root folder for the garden, use\\n\t\t`[from_vault_path]:`\";",
    "div3.textContent = \"Saving will not update the garden directly, and changes will be visible\\n\t\tin the publication center.\";": "div3.textContent = \"Saving will not update the garden directly, and changes will be visible\\n\t\tin the publication center.\";",
    "t = text(\"No notes will be affected by the change\");": "t = text(\"No notes will be affected by the change\");",
    "ol.innerHTML = `<li>One rule-per line</li> <li>The format is [from_vault_path]:[to_garden_path]</li> <li>Matching will exit on first match</li>`;": "ol.innerHTML = `<li>One rule-per line</li> <li>The format is [from_vault_path]:[to_garden_path]</li> <li>Matching will exit on first match</li>`;",
    "attr(textarea, \"placeholder\", \"Personal/Journal:Journal\");": "attr(textarea, \"placeholder\", \"Personal/Journal:Journal\");",
    "utton1.textContent = \"Cancel\";": "utton1.textContent = \"Cancel\";",
    "t19 = text(\"Save\");": "t19 = text(\"Save\");",
    ".innerHTML = `Define regex filters to replace note content before publishing.`;": ".innerHTML = `Define regex filters to replace note content before publishing.`;",
    "modal.titleEl.createEl(\"h2\", { text: \"Update site\" });": "modal.titleEl.createEl(\"h2\", { text: \"Update site\" });",
    "this.settingsRootElement.createEl(\"h3\", { text: \"Support\" }).prepend(this.getIcon(\"heart\"));": "this.settingsRootElement.createEl(\"h3\", { text: \"Support\" }).prepend(this.getIcon(\"heart\"));",
    ".innerHTML = `Format: [<code>regex pattern</code>, <code>replacement</code>, <code>regex flags</code>]`;": ".innerHTML = `Format: [<code>regex pattern</code>, <code>replacement</code>, <code>regex flags</code>]`;",
    ".innerHTML = `Example: filter [<code>:smile:</code>, <code>\\u{1F600}</code>, <code>g</code>] will replace text with real emojis`;": ".innerHTML = `Example: filter [<code>:smile:</code>, <code>\\u{1F600}</code>, <code>g</code>] will replace text with real emojis`;",
    "this.settingsRootElement.createEl(\"h3\", { text: \"Update site\" }).prepend((_a2 = (0, import_obsidian13.getIcon)(\"sync\")) != null ? _a2 : \"\");": "this.settingsRootElement.createEl(\"h3\", { text: \"Update site\" }).prepend((_a2 = (0, import_obsidian13.getIcon)(\"sync\")) != null ? _a2 : \"\");",
    "": "",
    "themeModal.contentEl.createEl(\"h2\", { text: \"Timestamps Settings\" }).prepend(this.getIcon(\"calendar-clock\"));": "themeModal.contentEl.createEl(\"h2\", { text: \"Timestamps Settings\" }).prepend(this.getIcon(\"calendar-clock\"));",
    "themeModal.contentEl.createEl(\"h2\", { text: \"CSS settings\" }).prepend(this.getIcon(\"code\"));": "themeModal.contentEl.createEl(\"h2\", { text: \"CSS settings\" }).prepend(this.getIcon(\"code\"));",
    "themeModal.contentEl.createEl(\"h2\", { text: \"Note icons Settings\" }).prepend(this.getIcon(\"image\"));": "themeModal.contentEl.createEl(\"h2\", { text: \"Note icons Settings\" }).prepend(this.getIcon(\"image\"));",
    "text: \"Documentation on note icons\"": "text: \"Documentation on note icons\"",
    "\"Digital Garden Publication Center\",": "\"Digital Garden Publication Center\",",
    "div0.textContent = \"Calculating publication status from GitHub\";": "div0.textContent = \"Calculating publication status from GitHub\";",
    "note.getPath()), \"Changed Notes\"));": "note.getPath()), \"Changed Notes\"));",
    "note.getPath()), \"Published Notes\"));": "note.getPath()), \"Published Notes\"));",
    "note.getPath()), \"Unpublished Notes\"));": "note.getPath()), \"Unpublished Notes\"));",
    "path.path), \"Deleted Notes\"));": "path.path), \"Deleted Notes\"));",
    "button.textContent = \"PUBLISH SELECTED\";": "button.textContent = \"PUBLISH SELECTED\";"
  }
}