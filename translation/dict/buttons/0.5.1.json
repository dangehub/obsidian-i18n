{
  "manifest": {
    "translationVersion": 1732075089424,
    "pluginVersion": "0.5.1"
  },
  "description": {
    "original": "Create Buttons in your Obsidian notes to run commands, open links, and insert templates",
    "translation": "Create Buttons in your Obsidian notes to run commands, open links, and insert templates"
  },
  "dict": {
    "name: \"My Awesome Button\"": "name: \"My Awesome Button\"",
    "name: \"Button Maker\"": "name: \"Button Maker\"",
    "name: \"Insert Inline Button\"": "name: \"Insert Inline Button\"",
    "text: \"Cancel\"": "text: \"Cancel\"",
    "text: \"Insert Button\"": "text: \"Insert Button\"",
    ".setText(\"Button Maker\"": ".setText(\"Button Maker\"",
    ".setText(\"Button Type\"": ".setText(\"Button Type\"",
    ".setText(\"What type of button are you making?\"": ".setText(\"What type of button are you making?\"",
    ".setText(\"Button Preview\"": ".setText(\"Button Preview\"",
    ".setText(\"Insert Inline Button\"": ".setText(\"Insert Inline Button\"",
    ".setName(\"Name\"": ".setName(\"Name\"",
    ".setName(\"Button Name\"": ".setName(\"Button Name\"",
    ".setName(\"Link\"": ".setName(\"Link\"",
    ".setName(\"Command\"": ".setName(\"Command\"",
    ".setName(\"Template\"": ".setName(\"Template\"",
    ".setName(\"Line Number\"": ".setName(\"Line Number\"",
    ".setName(\"Prompt\"": ".setName(\"Prompt\"",
    ".setName(\"Note Name\"": ".setName(\"Note Name\"",
    ".setName(\"Default Folder\"": ".setName(\"Default Folder\"",
    ".setName(\"Split\"": ".setName(\"Split\"",
    ".setName(\"Text\"": ".setName(\"Text\"",
    ".setName(\"Calculate\"": ".setName(\"Calculate\"",
    ".setName(\"Swap\"": ".setName(\"Swap\"",
    ".setName(\"Button Block ID\"": ".setName(\"Button Block ID\"",
    ".setName(\"Remove\"": ".setName(\"Remove\"",
    ".setName(\"Select Remove\"": ".setName(\"Select Remove\"",
    ".setName(\"Replace\"": ".setName(\"Replace\"",
    ".setName(\"Select Lines\"": ".setName(\"Select Lines\"",
    ".setName(\"Inherit\"": ".setName(\"Inherit\"",
    ".setName(\"Templater\"": ".setName(\"Templater\"",
    ".setName(\"Custom Class\"": ".setName(\"Custom Class\"",
    ".setName(\"Color\"": ".setName(\"Color\"",
    ".setName(\"Background: \"": ".setName(\"Background: \"",
    ".setName(\"Text Color: \"": ".setName(\"Text Color: \"",
    ".setDesc(\"What would you like to call this button?\"": ".setDesc(\"What would you like to call this button?\"",
    ".setDesc(\"Enter a link to open\"": ".setDesc(\"Enter a link to open\"",
    ".setDesc(\"Enter a command to run\"": ".setDesc(\"Enter a command to run\"",
    ".setDesc(\"Select a template note and what should happen\"": ".setDesc(\"Select a template note and what should happen\"",
    ".setDesc(\"At which line should the template be inserted?\"": ".setDesc(\"At which line should the template be inserted?\"",
    ".setDesc(\"Should you be prompted to enter a name for the file on creation?\"": ".setDesc(\"Should you be prompted to enter a name for the file on creation?\"",
    ".setDesc(\"Enter a folder path to place the note in. Defaults to root\"": ".setDesc(\"Enter a folder path to place the note in. Defaults to root\"",
    ".setDesc(\"Should the new note open in a split pane?\"": ".setDesc(\"Should the new note open in a split pane?\"",
    ".setDesc(\"What should the new note be named?\"": ".setDesc(\"What should the new note be named?\"",
    ".setDesc(\"choose buttons to be included in the Inline Swap Button\"": ".setDesc(\"choose buttons to be included in the Inline Swap Button\"",
    ".setDesc(\"Text to copy for clipboard\"": ".setDesc(\"Text to copy for clipboard\"",
    ".setDesc(\"Provide a custom button-block-id\"": ".setDesc(\"Provide a custom button-block-id\"",
    ".setDesc(\"Would you like to remove this button (or other buttons) after clicking?\"": ".setDesc(\"Would you like to remove this button (or other buttons) after clicking?\"",
    ".setDesc(\"Would you like to replace lines in the note after clicking?\"": ".setDesc(\"Would you like to replace lines in the note after clicking?\"",
    ".setDesc(\"Would you like to inherit args by adding an existing button block-id?\"": ".setDesc(\"Would you like to inherit args by adding an existing button block-id?\"",
    ".setDesc(\"inherit from other Buttons by adding their button block-id\"": ".setDesc(\"inherit from other Buttons by adding their button block-id\"",
    ".setDesc(\"Do you want to convert a templater command inside your Button on each click?\"": ".setDesc(\"Do you want to convert a templater command inside your Button on each click?\"",
    ".setDesc(\"Add a custom class for button styling\"": ".setDesc(\"Add a custom class for button styling\"",
    ".setDesc(\"What color would you like your button to be?\"": ".setDesc(\"What color would you like your button to be?\"",
    "addOption(\"command\", \"Command - run a command prompt command\")": "addOption(\"command\", \"Command - run a command prompt command\")",
    "addOption(\"link\", \"Link - open a url or uri\")": "addOption(\"link\", \"Link - open a url or uri\")",
    "addOption(\"template\", \"Template - insert or create notes from templates\")": "addOption(\"template\", \"Template - insert or create notes from templates\")",
    "addOption(\"text\", \"Text - insert or create notes with text\")": "addOption(\"text\", \"Text - insert or create notes with text\")",
    "addOption(\"calculate\", \"Calculate - run a mathematical calculation\")": "addOption(\"calculate\", \"Calculate - run a mathematical calculation\")",
    "addOption(\"swap\", \"Swap - Create a multi-purpose Inline Button from other Buttons\")": "addOption(\"swap\", \"Swap - Create a multi-purpose Inline Button from other Buttons\")",
    "addOption(\"copy\", \"Text - Copy text to clipboard\")": "addOption(\"copy\", \"Text - Copy text to clipboard\")",
    "addOption(\"default\", \"Default Color\")": "addOption(\"default\", \"Default Color\")",
    "addOption(\"blue\", \"Blue\")": "addOption(\"blue\", \"Blue\")",
    "addOption(\"red\", \"Red\")": "addOption(\"red\", \"Red\")",
    "addOption(\"green\", \"Green\")": "addOption(\"green\", \"Green\")",
    "addOption(\"yellow\", \"Yellow\")": "addOption(\"yellow\", \"Yellow\")",
    "addOption(\"purple\", \"Purple\")": "addOption(\"purple\", \"Purple\")",
    "addOption(\"custom\", \"Custom\")": "addOption(\"custom\", \"Custom\")",
    "addOption(\"pre\", \"Select a Button Type\"": "addOption(\"pre\", \"Select a Button Type\"",
    "addOption(\"prepend template\", \"Prepend\"": "addOption(\"prepend template\", \"Prepend\"",
    "addOption(\"append template\", \"Append\"": "addOption(\"append template\", \"Append\"",
    "addOption(\"line template\", \"Line\"": "addOption(\"line template\", \"Line\"",
    "addOption(\"note template\", \"Note\"": "addOption(\"note template\", \"Note\"",
    "addOption(\"command\", \"Default\"": "addOption(\"command\", \"Default\"",
    "addOption(\"prepend command\", \"Prepend\"": "addOption(\"prepend command\", \"Prepend\"",
    "addOption(\"prepend text\", \"Prepend\"": "addOption(\"prepend text\", \"Prepend\"",
    "addOption(\"append text\", \"Append\"": "addOption(\"append text\", \"Append\"",
    "addOption(\"line text\", \"Line\"": "addOption(\"line text\", \"Line\"",
    "addOption(\"note text\", \"Note\"": "addOption(\"note text\", \"Note\"",
    "textEl.setPlaceholder(\"My Awesome Button\")": "textEl.setPlaceholder(\"My Awesome Button\")",
    "textEl.setPlaceholder(\"buttonId\")": "textEl.setPlaceholder(\"buttonId\")",
    ".setDesc(\"What should the new note be named? Note: if prompt is on, this will be the default name\"": ".setDesc(\"What should the new note be named? Note: if prompt is on, this will be the default name\"",
    ".setDesc(\"What text and where should it go?\"": ".setDesc(\"What text and where should it go?\"",
    ".setDesc(\"Enter a calculation, you can reference a line number with $LineNumber\"": ".setDesc(\"Enter a calculation, you can reference a line number with $LineNumber\"",
    ".setDesc(\"Use true to remove this button, or supply an [array] of button block-ids\"": ".setDesc(\"Use true to remove this button, or supply an [array] of button block-ids\"",
    ".setDesc(\"Supply an array of [startingLine, endingLine] to be replaced\"": ".setDesc(\"Supply an array of [startingLine, endingLine] to be replaced\"",
    "addOption(\"pre\", \"Do this...\"": "addOption(\"pre\", \"Do this...\"",
    "Notice(\"Could not get Active View\", 1000)": "Notice(\"Could not get Active View\", 1000)",
    "Notice(\"Templater is not installed. Please install it.\")": "Notice(\"Templater is not installed. Please install it.\")",
    "Notice(`There was an error processing the template!`, 2000)": "Notice(`There was an error processing the template!`, 2000)",
    "Notice(\"There was an issue prepending content, please try again\", 2000)": "Notice(\"There was an issue prepending content, please try again\", 2000)",
    "Notice(\"There was an issue appending content, please try again\", 2000)": "Notice(\"There was an issue appending content, please try again\", 2000)",
    "Notice(\"There was an issue adding content, please try again\", 2000)": "Notice(\"There was an issue adding content, please try again\", 2000)",
    "Notice(\"There was an error! Maybe the file already exists?\", 2000)": "Notice(\"There was an error! Maybe the file already exists?\", 2000)",
    "Notice(`couldn't parse the path!`, 2000)": "Notice(`couldn't parse the path!`, 2000)",
    "Notice(`couldn't read file`, 2000)": "Notice(`couldn't read file`, 2000)",
    "Notice(\"Check the line number in your calculate button\", 3000)": "Notice(\"Check the line number in your calculate button\", 3000)",
    "Notice(`Couldn't find the specified template, please check and try again`, 2000)": "Notice(`Couldn't find the specified template, please check and try again`, 2000)",
    "Notice(\"You need to have the Templates or Templater plugin enabled and Template folder defined\", 2000)": "Notice(\"You need to have the Templates or Templater plugin enabled and Template folder defined\", 2000)",
    "Notice(\"templater args don't work with inline buttons yet\", 2000)": "Notice(\"templater args don't work with inline buttons yet\", 2000)",
    "Notice(\"swap args only work in inline buttons for now\", 2000)": "Notice(\"swap args only work in inline buttons for now\", 2000)",
    ".log(\"trying to create folder at: \", directoryPath)": ".log(\"trying to create folder at: \", directoryPath)",
    ".error(\"could not get active view\")": ".error(\"could not get active view\")",
    ".error(\"Error in Buttons: \", e)": ".error(\"Error in Buttons: \", e)",
    ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '))": ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '))",
    ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '))": ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '))",
    ".error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '))": ".error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '))",
    ".error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {             return \"\\\"\" + s + \"\\\"\";           }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\")": ".error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {             return \"\\\"\" + s + \"\\\"\";           }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\")",
    ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '))": ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '))",
    "'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s'": "'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s'",
    "'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available'": "'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available'",
    "'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.'": "'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.'",
    "'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.'": "'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.'",
    ".warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '))": ".warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '))",
    ".warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '))": ".warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '))",
    "text: \"Name of new note\"": "text: \"Name of new note\"",
    ".setButtonText(\"Create Note\")": ".setButtonText(\"Create Note\")",
    ".setName(\"Text Color: \")": ".setName(\"Text Color: \")",
    ".setPlaceholder(\"My Awesome Button\")": ".setPlaceholder(\"My Awesome Button\")",
    ".setPlaceholder(\"My New Note\")": ".setPlaceholder(\"My New Note\")",
    ".setPlaceholder(\"My Text to Insert\")": ".setPlaceholder(\"My Text to Insert\")",
    ".setPlaceholder(\"Text to copy\")": ".setPlaceholder(\"Text to copy\")",
    ".setPlaceholder(\"buttonId\")": ".setPlaceholder(\"buttonId\")",
    ".setTooltip(\"Do not use for inline Button\")": ".setTooltip(\"Do not use for inline Button\")",
    "addOption(\"append command\", \"Append\")": "addOption(\"append command\", \"Append\")",
    "Exception('Can\\'t understand after ' + string.slice(i))": "Exception('Can\\'t understand after ' + string.slice(i))",
    "Exception('Unexpected Space')": "Exception('Unexpected Space')",
    "Exception(cToken + ' is not allowed after ' + prevKey)": "Exception(cToken + ' is not allowed after ' + prevKey)",
    "Exception('Closing parenthesis are more than opening one, wait What!!!')": "Exception('Closing parenthesis are more than opening one, wait What!!!')",
    "Exception('Two decimals are not allowed in one number')": "Exception('Two decimals are not allowed in one number')",
    "Exception('complete the expression')": "Exception('complete the expression')",
    "Exception(\"Uncaught Syntax error\")": "Exception(\"Uncaught Syntax error\")"
  }
}