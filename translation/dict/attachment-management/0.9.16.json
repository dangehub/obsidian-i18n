{
  "manifest": {
    "translationVersion": 1734480400522,
    "pluginVersion": "0.9.16"
  },
  "description": {
    "original": "Customize your attachment path of notes independently with variables and auto rename it on change.",
    "translation": "Customize your attachment path of notes independently with variables and auto rename it on change."
  },
  "dict": {
    ".setName(\"Attachment path\")": ".setName(\"Attachment path\")",
    ".setName(\"Date format\")": ".setName(\"Date format\")",
    ".setName(\"Automatically rename attachment\")": ".setName(\"Automatically rename attachment\")",
    ".setName(\"Exclude subpaths\")": ".setName(\"Exclude subpaths\")",
    ".setDesc(\"Root folder of new attachment\")": ".setDesc(\"Root folder of new attachment\")",
    ".setPlaceholder(\"pdf|docx?\")": ".setPlaceholder(\"pdf|docx?\")",
    ".setPlaceholder(\"pdf|docx?|xlsx?|pptx?|zip|rar\")": ".setPlaceholder(\"pdf|docx?|xlsx?|pptx?|zip|rar\")",
    ".setPlaceholder(\"pdf\")": ".setPlaceholder(\"pdf\")",
    ".setName(\"Root path to save attachment\")": ".setName(\"Root path to save attachment\")",
    ".setName(\"Root folder\")": ".setName(\"Root folder\")",
    ".setName(\"Attachment format\")": ".setName(\"Attachment format\")",
    ".setName(\"Extension override\")": ".setName(\"Extension override\")",
    ".setName(\"Extension\")": ".setName(\"Extension\")",
    ".setName(\"Exclude extension pattern\")": ".setName(\"Exclude extension pattern\")",
    ".setName(\"Excluded paths\")": ".setName(\"Excluded paths\")",
    ".setDesc(\"Select root path of attachment\")": ".setDesc(\"Select root path of attachment\")",
    ".setDesc(\n      `Path of attachment in root folder, available variables ${SETTINGS_VARIABLES_NOTEPATH}, ${SETTINGS_VARIABLES_NOTENAME} and ${SETTINGS_VARIABLES_NOTEPARENT}`\n    )": ".setDesc(\n      `Path of attachment in root folder, available variables ${SETTINGS_VARIABLES_NOTEPATH}, ${SETTINGS_VARIABLES_NOTENAME} and ${SETTINGS_VARIABLES_NOTEPARENT}`\n    )",
    ".setDesc(\n      `Define how to name the attachment file, available variables ${SETTINGS_VARIABLES_DATES}, ${SETTINGS_VARIABLES_NOTENAME}, ${SETTINGS_VARIABLES_MD5} and ${SETTINGS_VARIABLES_ORIGINALNAME}.`\n    )": ".setDesc(\n      `Define how to name the attachment file, available variables ${SETTINGS_VARIABLES_DATES}, ${SETTINGS_VARIABLES_NOTENAME}, ${SETTINGS_VARIABLES_MD5} and ${SETTINGS_VARIABLES_ORIGINALNAME}.`\n    )",
    ".setDesc(\n      `Path of attachment in root folder, available variables ${SETTINGS_VARIABLES_NOTEPATH}, ${SETTINGS_VARIABLES_NOTENAME}, ${SETTINGS_VARIABLES_NOTEPARENT}`\n    )": ".setDesc(\n      `Path of attachment in root folder, available variables ${SETTINGS_VARIABLES_NOTEPATH}, ${SETTINGS_VARIABLES_NOTENAME}, ${SETTINGS_VARIABLES_NOTEPARENT}`\n    )",
    ".setDesc(\n      \"Automatically rename the attachment folder/filename when you rename the folder/filename where the corresponding md/canvas file be placed.\"\n    )": ".setDesc(\n      \"Automatically rename the attachment folder/filename when you rename the folder/filename where the corresponding md/canvas file be placed.\"\n    )",
    ".setDesc(\"Using the extension override if you want to autorename the attachment with a specific extension (e.g. pdf or zip).\")": ".setDesc(\"Using the extension override if you want to autorename the attachment with a specific extension (e.g. pdf or zip).\")",
    ".setDesc(\"Extension to override\")": ".setDesc(\"Extension to override\")",
    ".setDesc(`Regex pattern to exclude certain extensions from being handled.`)": ".setDesc(`Regex pattern to exclude certain extensions from being handled.`)",
    ".setDesc(\n      `Provide the full path of the folder names (case sensitive and without leading slash '/') divided by semicolon (;) to be excluded from renaming.`\n    )": ".setDesc(\n      `Provide the full path of the folder names (case sensitive and without leading slash '/') divided by semicolon (;) to be excluded from renaming.`\n    )",
    ".setDesc(\"Turn on this option if you want to also exclude all subfolders of the folder paths provided above.\")": ".setDesc(\"Turn on this option if you want to also exclude all subfolders of the folder paths provided above.\")",
    ".setTooltip(\"Remove extension override\")": ".setTooltip(\"Remove extension override\")",
    ".setTooltip(\"Edit extension override\")": ".setTooltip(\"Edit extension override\")",
    ".setTooltip(\"Save extension override\")": ".setTooltip(\"Save extension override\")",
    ".appendText(\"Moment date format to use \")": ".appendText(\"Moment date format to use \")",
    ".setTitle(\"Overriding attachment setting\")": ".setTitle(\"Overriding attachment setting\")",
    ".innerText = \"This operation is irreversible and experimental. Please backup your vault first!\"": ".innerText = \"This operation is irreversible and experimental. Please backup your vault first!\"",
    "Notice(\"Canvas is not supported as an extension override.\")": "Notice(\"Canvas is not supported as an extension override.\")",
    "Notice(\"Markdown is not supported as an extension override.\")": "Notice(\"Markdown is not supported as an extension override.\")",
    "Notice(\"Extension override cannot be empty.\")": "Notice(\"Extension override cannot be empty.\")",
    "Notice(\"Duplicate extension override.\")": "Notice(\"Duplicate extension override.\")",
    "Notice(\"Extension override cannot be an excluded extension.\")": "Notice(\"Extension override cannot be an excluded extension.\")",
    "Notice(\"Saved extension override\")": "Notice(\"Saved extension override\")",
    "Notice(`Reset attachment setting of ${this.file.path}`)": "Notice(`Reset attachment setting of ${this.file.path}`)",
    "Notice(`Overridden attachment setting of ${this.file.path}`)": "Notice(`Overridden attachment setting of ${this.file.path}`)",
    "Notice(`${file2.path} was excluded, skipped`)": "Notice(`${file2.path} was excluded, skipped`)",
    "Notice(`${file.path} was excluded, skipped`)": "Notice(`${file.path} was excluded, skipped`)",
    "Notice(\"Arrange completed\")": "Notice(\"Arrange completed\")",
    "Notice(`${source.path} was excluded, skipped`)": "Notice(`${source.path} was excluded, skipped`)",
    "Notice(`Renamed ${name} to ${attachName}.`)": "Notice(`Renamed ${name} to ${attachName}.`)",
    "Notice(`${file.path} was excluded`)": "Notice(`${file.path} was excluded`)",
    "Notice(\"Removed override setting of \" + file.path)": "Notice(\"Removed override setting of \" + file.path)",
    "Notice(`Reset attachment setting of ${file.path}`)": "Notice(`Reset attachment setting of ${file.path}`)",
    ".log(\"DEBUG is enabled\")": ".log(\"DEBUG is enabled\")",
    ".log(new Date()": ".log(new Date()",
    ".log(`Invalid link: ${link}, err: ${err}`)": ".log(`Invalid link: ${link}, err: ${err}`)",
    ".log(`Plugin loading: ${this.manifest.name} v.${this.manifest.version}`)": ".log(`Plugin loading: ${this.manifest.name} v.${this.manifest.version}`)",
    ".log(\"unloading attachment management.\")": ".log(\"unloading attachment management.\")",
    "name:\", originalName);\n        let attachName = \"": "name:\", originalName);\n        let attachName = \"",
    "name: \"Rearrange all linked attachments\"": "name: \"Rearrange all linked attachments\"",
    "name: \"Rearrange linked attachments\"": "name: \"Rearrange linked attachments\"",
    "name: \"Overriding setting\"": "name: \"Overriding setting\"",
    "name: \"Reset override setting\"": "name: \"Reset override setting\"",
    "name: \"Clear unused original name storage\"": "name: \"Clear unused original name storage\"",
    "text: `Extension settings for ${this.settings.extension}`": "text: `Extension settings for ${this.settings.extension}`",
    "text: \"Moment format options\"": "text: \"Moment format options\"",
    "text: \"Overriding Settings\"": "text: \"Overriding Settings\"",
    "text: \"Tips\"": "text: \"Tips\"",
    "settings:\", setting);\n          if (setting.type === \"": "settings:\", setting);\n          if (setting.type === \"",
    "settings:\", setting);\n          if (!this.settings.autoRenameAttachment) {\n            debugLog(\"": "settings:\", setting);\n          if (!this.settings.autoRenameAttachment) {\n            debugLog(\"",
    ".setButtonText(\"Save\")": ".setButtonText(\"Save\")",
    ".setButtonText(\"Add extension overrides\")": ".setButtonText(\"Add extension overrides\")",
    ".setButtonText(\"Reset\")": ".setButtonText(\"Reset\")",
    ".setButtonText(\"Submit\")": ".setButtonText(\"Submit\")",
    ".setButtonText(\"Cancel\")": ".setButtonText(\"Cancel\")",
    ".setButtonText(\"Continue\")": ".setButtonText(\"Continue\")"
  }
}