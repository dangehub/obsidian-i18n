{
  "manifest": {
    "translationVersion": 1730968983970,
    "pluginVersion": "2.27.0"
  },
  "description": {
    "original": "Integrate Git version control with automatic backup and other advanced features.",
    "translation": "Integrate Git version control with automatic backup and other advanced features."
  },
  "dict": {
    "Notice(\"ObsidianGit: Base path does not exist\")": "Notice(\"ObsidianGit: Base path does not exist\")",
    "Notice(\"Authentication failed. Please try with different credentials\")": "Notice(\"Authentication failed. Please try with different credentials\")",
    "Notice(\"This takes longer: Getting status\",this.noticeLength)": "Notice(\"This takes longer: Getting status\",this.noticeLength)",
    "Notice(\"Initializing pull\")": "Notice(\"Initializing pull\")",
    "Notice(\"Finished pull\",!1)": "Notice(\"Finished pull\",!1)",
    "Notice(\"Initializing push\")": "Notice(\"Initializing push\")",
    "Notice(\"Initializing clone\")": "Notice(\"Initializing clone\")",
    "Notice(\"Please specify a valid number.\")": "Notice(\"Please specify a valid number.\")",
    "Notice(\"Automatic push disabled!\")": "Notice(\"Automatic push disabled!\")",
    "Notice(\"Obsidian must be restarted for the changes to take affect.\")": "Notice(\"Obsidian must be restarted for the changes to take affect.\")",
    "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")": "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")",
    "Notice(\"It seems like you are not using GitHub\")": "Notice(\"It seems like you are not using GitHub\")",
    "Notice(\"Successfully deleted repository. Reloading plugin...\")": "Notice(\"Successfully deleted repository. Reloading plugin...\")",
    "Notice(\"No repository found\")": "Notice(\"No repository found\")",
    "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)": "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)",
    "Notice(\"Initialized new repo\")": "Notice(\"Initialized new repo\")",
    "Notice(\"Aborted clone\")": "Notice(\"Aborted clone\")",
    "Notice(\"Invalid depth. Aborting clone.\")": "Notice(\"Invalid depth. Aborting clone.\")",
    "Notice(`Cloning new repo into \"${a}\"`)": "Notice(`Cloning new repo into \"${a}\"`)",
    "Notice(\"Cloned new repo.\")": "Notice(\"Cloned new repo.\")",
    "Notice(\"Please restart Obsidian\")": "Notice(\"Please restart Obsidian\")",
    "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")": "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")",
    "Notice(\"No upstream branch is set. Please select one.\")": "Notice(\"No upstream branch is set. Please select one.\")",
    "Notice(\"All local changes have been discarded. New files remain untouched.\")": "Notice(\"All local changes have been discarded. New files remain untouched.\")",
    ".log(`Did not delete ${y} because directory is not empty`)": ".log(`Did not delete ${y} because directory is not empty`)",
    ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")": ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")",
    ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")": ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")",
    ".log(\"Something weird happened:\")": ".log(\"Something weird happened:\")",
    ".log(this.plg.manifest.name+\": Enabled line authoring.\")": ".log(this.plg.manifest.name+\": Enabled line authoring.\")",
    ".log(this.plg.manifest.name+\": Disabled line authoring.\")": ".log(this.plg.manifest.name+\": Disabled line authoring.\")",
    ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)": ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)",
    ".error(\"Failed to parse lines, starting in 0!\")": ".error(\"Failed to parse lines, starting in 0!\")",
    ".error(\"Unknown state reached while processing groups of lines\",a,s,o)": ".error(\"Unknown state reached while processing groups of lines\",a,s,o)",
    "name:\"History\"": "name:\"History\"",
    "name:\"Open history view\"": "name:\"Open history view\"",
    "name:\"Open diff view\"": "name:\"Open diff view\"",
    "name:\"Open file on GitHub\"": "name:\"Open file on GitHub\"",
    "name:\"Commit-and-sync\"": "name:\"Commit-and-sync\"",
    "name:\"Commit all changes\"": "name:\"Commit all changes\"",
    "name:\"Commit Amend\"": "name:\"Commit Amend\"",
    "name:\"Stage current file\"": "name:\"Stage current file\"",
    "name:\"Set upstream branch\"": "name:\"Set upstream branch\"",
    "name:\"Initialize a new repo\"": "name:\"Initialize a new repo\"",
    "name:\"Clone an existing remote repo\"": "name:\"Clone an existing remote repo\"",
    "name:\"List changed files\"": "name:\"List changed files\"",
    "name:\"Create new branch\"": "name:\"Create new branch\"",
    "name:\"Delete branch\"": "name:\"Delete branch\"",
    "name:\"Toggle line author information\"": "name:\"Toggle line author information\"",
    "text:\"Save\"": "text:\"Save\"",
    "text:\"File not found: \"": "text:\"File not found: \"",
    "text:\"Cancel\"": "text:\"Cancel\"",
    ".setText(\"Copy Debug Information\")": ".setText(\"Copy Debug Information\")",
    ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)": ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)",
    ".setText(\"Edit .gitignore\")": ".setText(\"Edit .gitignore\")",
    ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)": ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)",
    ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)": ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)",
    ".setName(\"Automatic\")": ".setName(\"Automatic\")",
    ".setName(\"Split timers for automatic commit and sync\")": ".setName(\"Split timers for automatic commit and sync\")",
    ".setName(`Auto ${i} after stopping file edits`)": ".setName(`Auto ${i} after stopping file edits`)",
    ".setName(`Auto ${i} after latest commit`)": ".setName(`Auto ${i} after latest commit`)",
    ".setName(\"Auto push interval (minutes)\")": ".setName(\"Auto push interval (minutes)\")",
    ".setName(\"Auto pull interval (minutes)\")": ".setName(\"Auto pull interval (minutes)\")",
    ".setName(`Specify custom commit message on auto ${i}`)": ".setName(`Specify custom commit message on auto ${i}`)",
    ".setName(`Commit message on auto ${i}`)": ".setName(`Commit message on auto ${i}`)",
    ".setName(\"Commit message\")": ".setName(\"Commit message\")",
    ".setName(\"Commit message on manual commit\")": ".setName(\"Commit message on manual commit\")",
    ".setName(\"{{date}} placeholder format\")": ".setName(\"{{date}} placeholder format\")",
    ".setName(\"{{hostname}} placeholder replacement\")": ".setName(\"{{hostname}} placeholder replacement\")",
    ".setName(\"Merge strategy\")": ".setName(\"Merge strategy\")",
    ".setName(\"Pull on startup\")": ".setName(\"Pull on startup\")",
    ".setName(\"Line author information\")": ".setName(\"Line author information\")",
    ".setName(\"Commit-and-sync\")": ".setName(\"Commit-and-sync\")",
    ".setName(\"Push on commit-and-sync\")": ".setName(\"Push on commit-and-sync\")",
    ".setName(\"Pull on commit-and-sync\")": ".setName(\"Pull on commit-and-sync\")",
    ".setName(\"History view\")": ".setName(\"History view\")",
    ".setName(\"Show Author\")": ".setName(\"Show Author\")",
    ".setName(\"Show Date\")": ".setName(\"Show Date\")",
    ".setName(\"Source control view\")": ".setName(\"Source control view\")",
    ".setName(\"Automatically refresh source control view on file changes\")": ".setName(\"Automatically refresh source control view on file changes\")",
    ".setName(\"Source control view refresh interval\")": ".setName(\"Source control view refresh interval\")",
    ".setName(\"Miscellaneous\")": ".setName(\"Miscellaneous\")",
    ".setName(\"Disable notifications\")": ".setName(\"Disable notifications\")",
    ".setName(\"Hide notifications for no changes\")": ".setName(\"Hide notifications for no changes\")",
    ".setName(\"Show status bar\")": ".setName(\"Show status bar\")",
    ".setName(\"Show stage/unstage button in file menu\")": ".setName(\"Show stage/unstage button in file menu\")",
    ".setName(\"Show branch status bar\")": ".setName(\"Show branch status bar\")",
    ".setName(\"Show the count of modified files in the status bar\")": ".setName(\"Show the count of modified files in the status bar\")",
    ".setName(\"Authentication/commit author\")": ".setName(\"Authentication/commit author\")",
    ".setName(\"Commit author\")": ".setName(\"Commit author\")",
    ".setName(\"Username on your git server. E.g. your username on GitHub\")": ".setName(\"Username on your git server. E.g. your username on GitHub\")",
    ".setName(\"Password/Personal access token\")": ".setName(\"Password/Personal access token\")",
    ".setName(\"Author name for commit\")": ".setName(\"Author name for commit\")",
    ".setName(\"Author email for commit\")": ".setName(\"Author email for commit\")",
    ".setName(\"Advanced\")": ".setName(\"Advanced\")",
    ".setName(\"Update submodules\")": ".setName(\"Update submodules\")",
    ".setName(\"Submodule recurse checkout/switch\")": ".setName(\"Submodule recurse checkout/switch\")",
    ".setName(\"Custom Git binary path\")": ".setName(\"Custom Git binary path\")",
    ".setName(\"Additional environment variables\")": ".setName(\"Additional environment variables\")",
    ".setName(\"Additional PATH environment variable paths\")": ".setName(\"Additional PATH environment variable paths\")",
    ".setName(\"Reload with new environment variables\")": ".setName(\"Reload with new environment variables\")",
    ".setName(\"Custom base path (Git repository path)\")": ".setName(\"Custom base path (Git repository path)\")",
    ".setName(\"Custom Git directory path (Instead of '.git')\")": ".setName(\"Custom Git directory path (Instead of '.git')\")",
    ".setName(\"Disable on this device\")": ".setName(\"Disable on this device\")",
    ".setName(\"Support\")": ".setName(\"Support\")",
    ".setName(\"Show commit authoring information next to each line\")": ".setName(\"Show commit authoring information next to each line\")",
    ".setName(\"Follow movement and copies across files and commits\")": ".setName(\"Follow movement and copies across files and commits\")",
    ".setName(\"Show commit hash\")": ".setName(\"Show commit hash\")",
    ".setName(\"Author name display\")": ".setName(\"Author name display\")",
    ".setName(\"Authoring date display\")": ".setName(\"Authoring date display\")",
    ".setName(\"Custom authoring date format\")": ".setName(\"Custom authoring date format\")",
    ".setName(\"Authoring date display timezone\")": ".setName(\"Authoring date display timezone\")",
    ".setName(\"Oldest age in coloring\")": ".setName(\"Oldest age in coloring\")",
    ".setName(\"Text color\")": ".setName(\"Text color\")",
    ".setName(\"Ignore whitespace and newlines in changes\")": ".setName(\"Ignore whitespace and newlines in changes\")",
    ".setDesc(\"Enable to use one interval for commit and another for sync.\")": ".setDesc(\"Enable to use one interval for commit and another for sync.\")",
    ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)": ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)",
    ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)": ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)",
    ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")",
    ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")",
    ".setDesc(\"You will get a pop up to specify your message.\")": ".setDesc(\"You will get a pop up to specify your message.\")",
    ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")": ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")",
    ".setDesc(\"Specify custom hostname for every device.\")": ".setDesc(\"Specify custom hostname for every device.\")",
    ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")": ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")",
    ".setDesc(\"Automatically pull commits when Obsidian starts.\")": ".setDesc(\"Automatically pull commits when Obsidian starts.\")",
    ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")": ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")",
    ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")": ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")",
    ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")": ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")",
    ".setDesc(\"Show the author of the commit in the history view.\")": ".setDesc(\"Show the author of the commit in the history view.\")",
    ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")": ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")",
    ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")": ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")",
    ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")": ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")",
    ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")": ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")",
    ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")": ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")",
    ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")": ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")",
    ".setDesc(\"Type in your password. You won't be able to see it again.\")": ".setDesc(\"Type in your password. You won't be able to see it again.\")",
    ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")": ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")",
    ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')": ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')",
    ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")": ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")",
    ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")": ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")",
    ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")": ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")",
    ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)": ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)",
    ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')": ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')",
    ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")": ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")",
    ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")": ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")",
    ".setDesc(\"If and how the date and time of authoring the line is displayed\")": ".setDesc(\"If and how the date and time of authoring the line is displayed\")",
    ".setPlaceholder(\"Type your message and select optional the version with the added date.\")": ".setPlaceholder(\"Type your message and select optional the version with the added date.\")",
    ".setPlaceholder(\"Not supported files will be opened by default app!\")": ".setPlaceholder(\"Not supported files will be opened by default app!\")",
    ".setPlaceholder(\"Select branch to checkout\")": ".setPlaceholder(\"Select branch to checkout\")",
    ".setTitle(\"Copy commit hash\")": ".setTitle(\"Copy commit hash\")",
    ".setTitle(\"Git: Stage\")": ".setTitle(\"Git: Stage\")",
    ".setTitle(\"Git: Unstage\")": ".setTitle(\"Git: Unstage\")",
    ".setTitle(\"Git: Add to .gitignore\")": ".setTitle(\"Git: Add to .gitignore\")",
    ".innerText=`Color for ${i} commits`": ".innerText=`Color for ${i} commits`",
    "name:\"Source Control\"": "name:\"Source Control\"",
    "name:\"Diff View\"": "name:\"Diff View\"",
    "name:\"Edit .gitignore\"": "name:\"Edit .gitignore\"",
    "name:\"Open source control view\"": "name:\"Open source control view\"",
    "name:\"Open file history on GitHub\"": "name:\"Open file history on GitHub\"",
    "name:\"Pull\"": "name:\"Pull\"",
    "name:\"Fetch\"": "name:\"Fetch\"",
    "name:\"Switch to remote branch\"": "name:\"Switch to remote branch\"",
    "name:\"Add file to gitignore\"": "name:\"Add file to gitignore\"",
    "name:\"Commit-and-sync and then close Obsidian\"": "name:\"Commit-and-sync and then close Obsidian\"",
    "name:\"Commit-and-sync with specific message\"": "name:\"Commit-and-sync with specific message\"",
    "name:\"Commit all changes with specific message\"": "name:\"Commit all changes with specific message\"",
    "name:\"Commit staged\"": "name:\"Commit staged\"",
    "name:\"Commit staged with specific message\"": "name:\"Commit staged with specific message\"",
    "name:\"Push\"": "name:\"Push\"",
    "name:\"Unstage current file\"": "name:\"Unstage current file\"",
    "name:\"Edit remotes\"": "name:\"Edit remotes\"",
    "name:\"Remove remote\"": "name:\"Remove remote\"",
    "name:\"CAUTION: Delete repository\"": "name:\"CAUTION: Delete repository\"",
    "name:\"Switch branch\"": "name:\"Switch branch\"",
    "name:\"CAUTION: Discard all changes\"": "name:\"CAUTION: Discard all changes\"",
    "name:\"fileIcon\"": "name:\"fileIcon\"",
    "name:\"fileTag\"": "name:\"fileTag\"",
    "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"": "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"",
    ".setButtonText(\"Preview\")": ".setButtonText(\"Preview\")",
    ".setButtonText(\"Reload\")": ".setButtonText(\"Reload\")",
    ".setName(\"Preview commit message\")": ".setName(\"Preview commit message\")",
    ".setName(\"List filenames affected by commit in the commit body\")": ".setName(\"List filenames affected by commit in the commit body\")",
    ".setName(\"Donate\")": ".setName(\"Donate\")",
    ".setDesc(\"Use each line for one path\")": ".setDesc(\"Use each line for one path\")",
    ".setDesc(\"Only available on desktop currently.\")": ".setDesc(\"Only available on desktop currently.\")",
    ".setDesc(\"If and how the author is displayed\")": ".setDesc(\"If and how the author is displayed\")",
    ".setPlaceholder(\"vault backup: {{date}}\")": ".setPlaceholder(\"vault backup: {{date}}\")",
    ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")": ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")",
    ".setPlaceholder(\"directory/directory-with-git-repo\")": ".setPlaceholder(\"directory/directory-with-git-repo\")",
    ".setName(\"Split automatic commit and push\")": ".setName(\"Split automatic commit and push\")",
    ".setName(`Vault ${commitOrBackup} interval (minutes)`)": ".setName(`Vault ${commitOrBackup} interval (minutes)`)",
    ".setName(`Auto Backup after stopping file edits`)": ".setName(`Auto Backup after stopping file edits`)",
    ".setName(`Auto ${commitOrBackup} after latest commit`)": ".setName(`Auto ${commitOrBackup} after latest commit`)",
    ".setName(`Vault push interval (minutes)`)": ".setName(`Vault push interval (minutes)`)",
    ".setName(\"Specify custom commit message on auto backup\")": ".setName(\"Specify custom commit message on auto backup\")",
    ".setName(\"Commit message on auto backup/commit\")": ".setName(\"Commit message on auto backup/commit\")",
    ".setName(\"Commit message on manual backup/commit\")": ".setName(\"Commit message on manual backup/commit\")",
    ".setName(\"Backup\")": ".setName(\"Backup\")",
    ".setName(\"Sync Method\")": ".setName(\"Sync Method\")",
    ".setName(\"Pull updates on startup\")": ".setName(\"Pull updates on startup\")",
    ".setName(\"Push on backup\")": ".setName(\"Push on backup\")",
    ".setName(\"Pull changes before push\")": ".setName(\"Pull changes before push\")",
    ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )": ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )",
    ".setDesc(\"Automatically pull updates when Obsidian starts\")": ".setDesc(\"Automatically pull updates when Obsidian starts\")",
    ".setDesc(\"Disable to only commit changes\")": ".setDesc(\"Disable to only commit changes\")",
    ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")": ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")",
    ".setDesc(\"Show the author of the commit in the history view\")": ".setDesc(\"Show the author of the commit in the history view\")",
    ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )": ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )",
    ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )": ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )",
    ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )": ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )",
    ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )": ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )",
    ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )": ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )",
    ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )": ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )",
    ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )": ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )",
    ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )": ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )",
    ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )": ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )",
    ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )": ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )",
    ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )": ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )",
    ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )": ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )",
    ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )": ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )",
    ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )": ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )",
    ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )": ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )",
    ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )": ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )",
    ".createEl(\"button\", {\n      text: \"Cancel\"\n    })": ".createEl(\"button\", {\n      text: \"Cancel\"\n    })",
    "name:\"Amend staged\"": "name:\"Amend staged\"",
    ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"": ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"",
    "T(s,\"aria-label\",\"Commit\")": "T(s,\"aria-label\",\"Commit\")",
    "T(b,\"aria-label\",\"Refresh\")": "T(b,\"aria-label\",\"Refresh\")",
    "T(p,\"aria-label\",\"Pull\")": "T(p,\"aria-label\",\"Pull\")",
    "T(h,\"aria-label\",\"Push\")": "T(h,\"aria-label\",\"Push\")",
    "T(m,\"aria-label\",\"Change Layout\")": "T(m,\"aria-label\",\"Change Layout\")",
    "T(u,\"aria-label\",\"Unstage all\")": "T(u,\"aria-label\",\"Unstage all\")",
    "T(d,\"aria-label\",\"Stage\")": "T(d,\"aria-label\",\"Stage\")",
    "T(i,\"aria-label\",\"Commit-and-sync\")": "T(i,\"aria-label\",\"Commit-and-sync\")",
    "T(l,\"aria-label\",\"Stage all\")": "T(l,\"aria-label\",\"Stage all\")",
    ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)": ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)"
  }
}