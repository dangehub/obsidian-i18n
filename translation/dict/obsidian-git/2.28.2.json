{
  "manifest": {
    "translationVersion": 1731497952199,
    "pluginVersion": "2.28.2"
  },
  "description": {
    "original": "Integrate Git version control with automatic backup and other advanced features.",
    "translation": "Integrate Git version control with automatic backup and other advanced features."
  },
  "dict": {
    "Notice(\"ObsidianGit: Base path does not exist\")": "Notice(\"ObsidianGit: Base path does not exist\")",
    "Notice(\"Authentication failed. Please try with different credentials\")": "Notice(\"Authentication failed. Please try with different credentials\")",
    "Notice(\"This takes longer: Getting status\",this.noticeLength)": "Notice(\"This takes longer: Getting status\",this.noticeLength)",
    "Notice(\"Initializing pull\")": "Notice(\"Initializing pull\")",
    "Notice(\"Finished pull\",!1)": "Notice(\"Finished pull\",!1)",
    "Notice(\"Initializing push\")": "Notice(\"Initializing push\")",
    "Notice(\"Initializing clone\")": "Notice(\"Initializing clone\")",
    "Notice(\"Initializing fetch\")": "Notice(\"Initializing fetch\")",
    "Notice(\"Please specify a valid number.\")": "Notice(\"Please specify a valid number.\")",
    "Notice(`Automatic ${i} enabled! Every ${$s(r.settings.autoSaveInterval)": "Notice(`Automatic ${i} enabled! Every ${$s(r.settings.autoSaveInterval)",
    "Notice(`Automatic ${i} disabled!`)": "Notice(`Automatic ${i} disabled!`)",
    "Notice(`Automatic push enabled! Every ${$s(r.settings.autoPushInterval)": "Notice(`Automatic push enabled! Every ${$s(r.settings.autoPushInterval)",
    "Notice(\"Automatic push disabled!\")": "Notice(\"Automatic push disabled!\")",
    "Notice(`Automatic pull enabled! Every ${$s(r.settings.autoPullInterval)": "Notice(`Automatic pull enabled! Every ${$s(r.settings.autoPullInterval)",
    "Notice(\"Automatic pull disabled!\")": "Notice(\"Automatic pull disabled!\")",
    "Notice(\"Obsidian must be restarted for the changes to take affect.\")": "Notice(\"Obsidian must be restarted for the changes to take affect.\")",
    "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")": "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")",
    "Notice(\"It seems like you are not using GitHub\")": "Notice(\"It seems like you are not using GitHub\")",
    "Notice(\"Successfully deleted repository. Reloading plugin...\")": "Notice(\"Successfully deleted repository. Reloading plugin...\")",
    "Notice(\"No repository found\")": "Notice(\"No repository found\")",
    "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)": "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)",
    "Notice(\"Initialized new repo\")": "Notice(\"Initialized new repo\")",
    "Notice(\"Aborted clone\")": "Notice(\"Aborted clone\")",
    "Notice(\"Invalid depth. Aborting clone.\")": "Notice(\"Invalid depth. Aborting clone.\")",
    "Notice(`Cloning new repo into \"${a}\"`)": "Notice(`Cloning new repo into \"${a}\"`)",
    "Notice(\"Cloned new repo.\")": "Notice(\"Cloned new repo.\")",
    "Notice(\"Please restart Obsidian\")": "Notice(\"Please restart Obsidian\")",
    "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")": "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")",
    "Notice(\"No upstream branch is set. Please select one.\")": "Notice(\"No upstream branch is set. Please select one.\")",
    "Notice(\"All local changes have been discarded. New files remain untouched.\")": "Notice(\"All local changes have been discarded. New files remain untouched.\")",
    "Notice(\"Aborted\")": "Notice(\"Aborted\")",
    ".log(`Did not delete ${y} because directory is not empty`)": ".log(`Did not delete ${y} because directory is not empty`)",
    ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")": ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")",
    ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")": ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")",
    ".log(\"Something weird happened:\")": ".log(\"Something weird happened:\")",
    ".log(this.plg.manifest.name+\": Enabled line authoring.\")": ".log(this.plg.manifest.name+\": Enabled line authoring.\")",
    ".log(this.plg.manifest.name+\": Disabled line authoring.\")": ".log(this.plg.manifest.name+\": Disabled line authoring.\")",
    ".log(\"loading \"+this.manifest.name+\" plugin: v\"+this.manifest.version)": ".log(\"loading \"+this.manifest.name+\" plugin: v\"+this.manifest.version)",
    ".log(\"Reloading settings\")": ".log(\"Reloading settings\")",
    ".log(\"unloading \"+this.manifest.name+\" plugin\")": ".log(\"unloading \"+this.manifest.name+\" plugin\")",
    ".log(\"Something weird happened. The 'checkRequirements' result is \"+i)": ".log(\"Something weird happened. The 'checkRequirements' result is \"+i)",
    ".log(\"Pushing....\")": ".log(\"Pushing....\")",
    ".log(\"Pulling....\")": ".log(\"Pulling....\")",
    ".log(\"Encountered network error, but already in offline mode\")": ".log(\"Encountered network error, but already in offline mode\")",
    ".error(\"This browser lacks typed array (Uint8Array)": ".error(\"This browser lacks typed array (Uint8Array)",
    ".error(\"Failed to parse lines, starting in 0!\")": ".error(\"Failed to parse lines, starting in 0!\")",
    ".error(\"Unknown state reached while processing groups of lines\",a,s,o)": ".error(\"Unknown state reached while processing groups of lines\",a,s,o)",
    "name:\"\",email:\"": "name:\"\",email:\"",
    "name:\"Source Control\"": "name:\"Source Control\"",
    "name:\"History\"": "name:\"History\"",
    "name:\"Diff View\"": "name:\"Diff View\"",
    "name:\"Edit .gitignore\"": "name:\"Edit .gitignore\"",
    "name:\"Open source control view\"": "name:\"Open source control view\"",
    "name:\"Open history view\"": "name:\"Open history view\"",
    "name:\"Open diff view\"": "name:\"Open diff view\"",
    "name:\"Open file on GitHub\"": "name:\"Open file on GitHub\"",
    "name:\"Open file history on GitHub\"": "name:\"Open file history on GitHub\"",
    "name:\"Pull\"": "name:\"Pull\"",
    "name:\"Fetch\"": "name:\"Fetch\"",
    "name:\"Switch to remote branch\"": "name:\"Switch to remote branch\"",
    "name:\"Add file to gitignore\"": "name:\"Add file to gitignore\"",
    "name:\"Commit-and-sync\"": "name:\"Commit-and-sync\"",
    "name:\"Commit-and-sync and then close Obsidian\"": "name:\"Commit-and-sync and then close Obsidian\"",
    "name:\"Commit-and-sync with specific message\"": "name:\"Commit-and-sync with specific message\"",
    "name:\"Commit all changes\"": "name:\"Commit all changes\"",
    "name:\"Commit all changes with specific message\"": "name:\"Commit all changes with specific message\"",
    "name:\"Commit staged\"": "name:\"Commit staged\"",
    "name:\"Amend staged\"": "name:\"Amend staged\"",
    "name:\"Commit staged with specific message\"": "name:\"Commit staged with specific message\"",
    "name:\"Push\"": "name:\"Push\"",
    "name:\"Stage current file\"": "name:\"Stage current file\"",
    "name:\"Unstage current file\"": "name:\"Unstage current file\"",
    "name:\"Edit remotes\"": "name:\"Edit remotes\"",
    "name:\"Remove remote\"": "name:\"Remove remote\"",
    "name:\"Set upstream branch\"": "name:\"Set upstream branch\"",
    "name:\"CAUTION: Delete repository\"": "name:\"CAUTION: Delete repository\"",
    "name:\"Initialize a new repo\"": "name:\"Initialize a new repo\"",
    "name:\"Clone an existing remote repo\"": "name:\"Clone an existing remote repo\"",
    "name:\"List changed files\"": "name:\"List changed files\"",
    "name:\"Switch branch\"": "name:\"Switch branch\"",
    "name:\"Create new branch\"": "name:\"Create new branch\"",
    "name:\"Delete branch\"": "name:\"Delete branch\"",
    "name:\"CAUTION: Discard all changes\"": "name:\"CAUTION: Discard all changes\"",
    "name:\"Toggle line author information\"": "name:\"Toggle line author information\"",
    "name:\"fileIcon\"": "name:\"fileIcon\"",
    "name:\"fileTag\"": "name:\"fileTag\"",
    "name:\"Commit Amend\"": "name:\"Commit Amend\"",
    "description:`${st} '${Nr(he)}' of ${C}`": "description:`${st} '${Nr(he)}' of ${C}`",
    "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"": "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"",
    "text:\"Save\"": "text:\"Save\"",
    "text:\"File not found: \"": "text:\"File not found: \"",
    "text:\"Cancel\"": "text:\"Cancel\"",
    ".setText(\"Copy Debug Information\")": ".setText(\"Copy Debug Information\")",
    ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)": ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)",
    ".setText(\"Edit .gitignore\")": ".setText(\"Edit .gitignore\")",
    ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)": ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)",
    ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)": ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)",
    ".setButtonText(\"Preview\")": ".setButtonText(\"Preview\")",
    ".setButtonText(\"Reload\")": ".setButtonText(\"Reload\")",
    ".setName(\"Automatic\")": ".setName(\"Automatic\")",
    ".setName(\"Split timers for automatic commit and sync\")": ".setName(\"Split timers for automatic commit and sync\")",
    ".setName(`Auto ${i} interval (minutes)`)": ".setName(`Auto ${i} interval (minutes)`)",
    ".setName(`Auto ${i} after stopping file edits`)": ".setName(`Auto ${i} after stopping file edits`)",
    ".setName(`Auto ${i} after latest commit`)": ".setName(`Auto ${i} after latest commit`)",
    ".setName(\"Auto push interval (minutes)\")": ".setName(\"Auto push interval (minutes)\")",
    ".setName(\"Auto pull interval (minutes)\")": ".setName(\"Auto pull interval (minutes)\")",
    ".setName(`Specify custom commit message on auto ${i}`)": ".setName(`Specify custom commit message on auto ${i}`)",
    ".setName(`Commit message on auto ${i}`)": ".setName(`Commit message on auto ${i}`)",
    ".setName(\"Commit message\")": ".setName(\"Commit message\")",
    ".setName(\"Commit message on manual commit\")": ".setName(\"Commit message on manual commit\")",
    ".setName(\"{{date}} placeholder format\")": ".setName(\"{{date}} placeholder format\")",
    ".setName(\"{{hostname}} placeholder replacement\")": ".setName(\"{{hostname}} placeholder replacement\")",
    ".setName(\"Preview commit message\")": ".setName(\"Preview commit message\")",
    ".setName(\"List filenames affected by commit in the commit body\")": ".setName(\"List filenames affected by commit in the commit body\")",
    ".setName(\"Pull\")": ".setName(\"Pull\")",
    ".setName(\"Merge strategy\")": ".setName(\"Merge strategy\")",
    ".setName(\"Pull on startup\")": ".setName(\"Pull on startup\")",
    ".setName(\"Commit-and-sync\")": ".setName(\"Commit-and-sync\")",
    ".setName(\"Push on commit-and-sync\")": ".setName(\"Push on commit-and-sync\")",
    ".setName(\"Pull on commit-and-sync\")": ".setName(\"Pull on commit-and-sync\")",
    ".setName(\"Line author information\")": ".setName(\"Line author information\")",
    ".setName(\"History view\")": ".setName(\"History view\")",
    ".setName(\"Show Author\")": ".setName(\"Show Author\")",
    ".setName(\"Show Date\")": ".setName(\"Show Date\")",
    ".setName(\"Source control view\")": ".setName(\"Source control view\")",
    ".setName(\"Automatically refresh source control view on file changes\")": ".setName(\"Automatically refresh source control view on file changes\")",
    ".setName(\"Source control view refresh interval\")": ".setName(\"Source control view refresh interval\")",
    ".setName(\"Miscellaneous\")": ".setName(\"Miscellaneous\")",
    ".setName(\"Disable notifications\")": ".setName(\"Disable notifications\")",
    ".setName(\"Hide notifications for no changes\")": ".setName(\"Hide notifications for no changes\")",
    ".setName(\"Show status bar\")": ".setName(\"Show status bar\")",
    ".setName(\"Show stage/unstage button in file menu\")": ".setName(\"Show stage/unstage button in file menu\")",
    ".setName(\"Show branch status bar\")": ".setName(\"Show branch status bar\")",
    ".setName(\"Show the count of modified files in the status bar\")": ".setName(\"Show the count of modified files in the status bar\")",
    ".setName(\"Authentication/commit author\")": ".setName(\"Authentication/commit author\")",
    ".setName(\"Commit author\")": ".setName(\"Commit author\")",
    ".setName(\"Username on your git server. E.g. your username on GitHub\")": ".setName(\"Username on your git server. E.g. your username on GitHub\")",
    ".setName(\"Password/Personal access token\")": ".setName(\"Password/Personal access token\")",
    ".setName(\"Author name for commit\")": ".setName(\"Author name for commit\")",
    ".setName(\"Author email for commit\")": ".setName(\"Author email for commit\")",
    ".setName(\"Advanced\")": ".setName(\"Advanced\")",
    ".setName(\"Update submodules\")": ".setName(\"Update submodules\")",
    ".setName(\"Submodule recurse checkout/switch\")": ".setName(\"Submodule recurse checkout/switch\")",
    ".setName(\"Custom Git binary path\")": ".setName(\"Custom Git binary path\")",
    ".setName(\"Additional environment variables\")": ".setName(\"Additional environment variables\")",
    ".setName(\"Additional PATH environment variable paths\")": ".setName(\"Additional PATH environment variable paths\")",
    ".setName(\"Reload with new environment variables\")": ".setName(\"Reload with new environment variables\")",
    ".setName(\"Custom base path (Git repository path)\")": ".setName(\"Custom base path (Git repository path)\")",
    ".setName(\"Custom Git directory path (Instead of '.git')\")": ".setName(\"Custom Git directory path (Instead of '.git')\")",
    ".setName(\"Disable on this device\")": ".setName(\"Disable on this device\")",
    ".setName(\"Support\")": ".setName(\"Support\")",
    ".setName(\"Donate\")": ".setName(\"Donate\")",
    ".setName(\"Show commit authoring information next to each line\")": ".setName(\"Show commit authoring information next to each line\")",
    ".setName(\"Follow movement and copies across files and commits\")": ".setName(\"Follow movement and copies across files and commits\")",
    ".setName(\"Show commit hash\")": ".setName(\"Show commit hash\")",
    ".setName(\"Author name display\")": ".setName(\"Author name display\")",
    ".setName(\"Authoring date display\")": ".setName(\"Authoring date display\")",
    ".setName(\"Custom authoring date format\")": ".setName(\"Custom authoring date format\")",
    ".setName(\"Authoring date display timezone\")": ".setName(\"Authoring date display timezone\")",
    ".setName(\"Oldest age in coloring\")": ".setName(\"Oldest age in coloring\")",
    ".setName(\"Text color\")": ".setName(\"Text color\")",
    ".setName(\"Ignore whitespace and newlines in changes\")": ".setName(\"Ignore whitespace and newlines in changes\")",
    ".setName(\"Split automatic commit and push\")": ".setName(\"Split automatic commit and push\")",
    ".setName(`Vault ${commitOrBackup} interval (minutes)`)": ".setName(`Vault ${commitOrBackup} interval (minutes)`)",
    ".setName(`Auto Backup after stopping file edits`)": ".setName(`Auto Backup after stopping file edits`)",
    ".setName(`Auto ${commitOrBackup} after latest commit`)": ".setName(`Auto ${commitOrBackup} after latest commit`)",
    ".setName(`Vault push interval (minutes)`)": ".setName(`Vault push interval (minutes)`)",
    ".setName(\"Specify custom commit message on auto backup\")": ".setName(\"Specify custom commit message on auto backup\")",
    ".setName(\"Commit message on auto backup/commit\")": ".setName(\"Commit message on auto backup/commit\")",
    ".setName(\"Commit message on manual backup/commit\")": ".setName(\"Commit message on manual backup/commit\")",
    ".setName(\"Backup\")": ".setName(\"Backup\")",
    ".setName(\"Sync Method\")": ".setName(\"Sync Method\")",
    ".setName(\"Pull updates on startup\")": ".setName(\"Pull updates on startup\")",
    ".setName(\"Push on backup\")": ".setName(\"Push on backup\")",
    ".setName(\"Pull changes before push\")": ".setName(\"Pull changes before push\")",
    ".setDesc(\"Enable to use one interval for commit and another for sync.\")": ".setDesc(\"Enable to use one interval for commit and another for sync.\")",
    ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)": ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)",
    ".setDesc(`Requires the ${i} interval not to be 0.\n                        If turned on, do auto ${i} every ${$s(r.settings.autoSaveInterval)} after stopping file edits.\n                        This also prevents auto ${i} while editing a file. If turned off, it's independent from the last file edit.`)": ".setDesc(`Requires the ${i} interval not to be 0.\n                        If turned on, do auto ${i} every ${$s(r.settings.autoSaveInterval)} after stopping file edits.\n                        This also prevents auto ${i} while editing a file. If turned off, it's independent from the last file edit.`)",
    ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)": ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)",
    ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")",
    ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")",
    ".setDesc(\"You will get a pop up to specify your message.\")": ".setDesc(\"You will get a pop up to specify your message.\")",
    ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")": ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")",
    ".setDesc(\"Specify custom hostname for every device.\")": ".setDesc(\"Specify custom hostname for every device.\")",
    ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")": ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")",
    ".setDesc(\"Automatically pull commits when Obsidian starts.\")": ".setDesc(\"Automatically pull commits when Obsidian starts.\")",
    ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")": ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")",
    ".setDesc(`Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit ${r.settings.pullBeforePush?\"and pull \":\"\"}only. It will still be called commit-and-sync.`)": ".setDesc(`Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit ${r.settings.pullBeforePush?\"and pull \":\"\"}only. It will still be called commit-and-sync.`)",
    ".setDesc(`On commit-and-sync, pull commits as well. Turning this off turns a commit-and-sync action into commit ${r.settings.disablePush?\"\":\"and push \"}only.`)": ".setDesc(`On commit-and-sync, pull commits as well. Turning this off turns a commit-and-sync action into commit ${r.settings.disablePush?\"\":\"and push \"}only.`)",
    ".setDesc(\"Show the author of the commit in the history view.\")": ".setDesc(\"Show the author of the commit in the history view.\")",
    ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")": ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")",
    ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")": ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")",
    ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")": ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")",
    ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")": ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")",
    ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")": ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")",
    ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")": ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")",
    ".setDesc(\"Type in your password. You won't be able to see it again.\")": ".setDesc(\"Type in your password. You won't be able to see it again.\")",
    ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")": ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")",
    ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')": ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')",
    ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")": ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")",
    ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")": ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")",
    ".setDesc(\"Use each line for one path\")": ".setDesc(\"Use each line for one path\")",
    ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")": ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")",
    ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)": ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)",
    ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')": ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')",
    ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")": ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")",
    ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")": ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")",
    ".setDesc(\"Only available on desktop currently.\")": ".setDesc(\"Only available on desktop currently.\")",
    ".setDesc(\"If and how the author is displayed\")": ".setDesc(\"If and how the author is displayed\")",
    ".setDesc(\"If and how the date and time of authoring the line is displayed\")": ".setDesc(\"If and how the date and time of authoring the line is displayed\")",
    ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")": ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")",
    ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")": ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")",
    ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )": ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )",
    ".setDesc(\"Automatically pull updates when Obsidian starts\")": ".setDesc(\"Automatically pull updates when Obsidian starts\")",
    ".setDesc(\"Disable to only commit changes\")": ".setDesc(\"Disable to only commit changes\")",
    ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")": ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")",
    ".setDesc(\"Show the author of the commit in the history view\")": ".setDesc(\"Show the author of the commit in the history view\")",
    ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )": ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )",
    ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )": ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )",
    ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )": ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )",
    ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )": ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )",
    ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )": ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )",
    ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )": ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )",
    ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )": ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )",
    ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )": ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )",
    ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )": ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )",
    ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )": ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )",
    ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )": ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )",
    ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )": ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )",
    ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )": ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )",
    ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )": ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )",
    ".setPlaceholder(\"vault backup: {{date}}\")": ".setPlaceholder(\"vault backup: {{date}}\")",
    ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")": ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")",
    ".setPlaceholder(\"directory/directory-with-git-repo\")": ".setPlaceholder(\"directory/directory-with-git-repo\")",
    ".setPlaceholder(\"Type your message and select optional the version with the added date.\")": ".setPlaceholder(\"Type your message and select optional the version with the added date.\")",
    ".setPlaceholder(\"Not supported files will be opened by default app!\")": ".setPlaceholder(\"Not supported files will be opened by default app!\")",
    ".setPlaceholder(\"Select branch to checkout\")": ".setPlaceholder(\"Select branch to checkout\")",
    ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )": ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )",
    ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )": ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )",
    ".setTitle(\"Copy commit hash\")": ".setTitle(\"Copy commit hash\")",
    ".setTitle(\"Git: Stage\")": ".setTitle(\"Git: Stage\")",
    ".setTitle(\"Git: Unstage\")": ".setTitle(\"Git: Unstage\")",
    ".setTitle(\"Git: Add to .gitignore\")": ".setTitle(\"Git: Add to .gitignore\")",
    ".innerText=`Color for ${i} commits`": ".innerText=`Color for ${i} commits`",
    "super(`Modifying the index is not possible because you have unmerged files: ${e.toString}. Fix them up in the work tree, and then use 'git add/rm as appropriate to mark resolution and make a commit.`)": "super(`Modifying the index is not possible because you have unmerged files: ${e.toString}. Fix them up in the work tree, and then use 'git add/rm as appropriate to mark resolution and make a commit.`)",
    "super(`An internal error caused this command to fail. Please file a bug report at https://github.com/isomorphic-git/isomorphic-git/issues with this error message: ${e}`)": "super(`An internal error caused this command to fail. Please file a bug report at https://github.com/isomorphic-git/isomorphic-git/issues with this error message: ${e}`)",
    "super(`The filepath \"${e}\" contains unsafe character sequences`)": "super(`The filepath \"${e}\" contains unsafe character sequences`)",
    "super(`Could not find ${e}.`)": "super(`Could not find ${e}.`)",
    "super(`Object ${e} ${i?`at ${i}`:\"\"}was anticipated to be a ${r} but it is a ${n}.`)": "super(`Object ${e} ${i?`at ${i}`:\"\"}was anticipated to be a ${r} but it is a ${n}.`)",
    "super(`Expected a 40-char hex object id but saw \"${e}\".`)": "super(`Expected a 40-char hex object id but saw \"${e}\".`)",
    "super(`Could not find a fetch refspec for remote \"${e}\". Make sure the config file has an entry like the following:\n[remote \"${e}\"]\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n`)": "super(`Could not find a fetch refspec for remote \"${e}\". Make sure the config file has an entry like the following:\n[remote \"${e}\"]\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n`)",
    "super(`Failed to create ${e} at ${n} because it already exists.${r?` (Hint: use 'force: true' parameter to overwrite existing ${e}.)`:\"\"}`)": "super(`Failed to create ${e} at ${n} because it already exists.${r?` (Hint: use 'force: true' parameter to overwrite existing ${e}.)`:\"\"}`)",
    "super(`Found multiple ${e} matching \"${n}\" (${r.join(\", \")}). Use a longer abbreviation length to disambiguate them.`)": "super(`Found multiple ${e} matching \"${n}\" (${r.join(\", \")}). Use a longer abbreviation length to disambiguate them.`)",
    "super(`Your local changes to the following files would be overwritten by checkout: ${e.join(\", \")}`)": "super(`Your local changes to the following files would be overwritten by checkout: ${e.join(\", \")}`)",
    "super(`Failed to checkout \"${e}\" because commit ${n} is not available locally. Do a git fetch to make the branch available locally.`)": "super(`Failed to checkout \"${e}\" because commit ${n} is not available locally. Do a git fetch to make the branch available locally.`)",
    "super(\"Empty response from git server.\")": "super(\"Empty response from git server.\")",
    "super(\"A simple fast-forward merge was not possible.\")": "super(\"A simple fast-forward merge was not possible.\")",
    "super(`One or more branches were not updated: ${e}`)": "super(`One or more branches were not updated: ${e}`)",
    "super(`HTTP Error: ${e} ${n}`)": "super(`HTTP Error: ${e} ${n}`)",
    "super(`\"${e}\" would be an invalid git reference. (Hint: a valid alternative would be \"${n}\".)`)": "super(`\"${e}\" would be an invalid git reference. (Hint: a valid alternative would be \"${n}\".)`)",
    "super(`Maximum search depth of ${e} exceeded.`)": "super(`Maximum search depth of ${e} exceeded.`)",
    "super(\"Merges with conflicts are not supported yet.\")": "super(\"Merges with conflicts are not supported yet.\")",
    "super(`Automatic merge failed with one or more merge conflicts in the following files: ${e.toString()}. Fix conflicts then commit the result.`)": "super(`Automatic merge failed with one or more merge conflicts in the following files: ${e.toString()}. Fix conflicts then commit the result.`)",
    "super(`No name was provided for ${e} in the argument or in the .git/config file.`)": "super(`No name was provided for ${e} in the argument or in the .git/config file.`)",
    "super(`The function requires a \"${e}\" parameter but none was provided.`)": "super(`The function requires a \"${e}\" parameter but none was provided.`)",
    "super('There are multiple errors that were thrown by the method. Please refer to the \"errors\" property to see more')": "super('There are multiple errors that were thrown by the method. Please refer to the \"errors\" property to see more')",
    "super(`Expected \"${e}\" but received \"${n}\".`)": "super(`Expected \"${e}\" but received \"${n}\".`)",
    "super(`Push rejected${n}. Use \"force: true\" to override.`)": "super(`Push rejected${n}. Use \"force: true\" to override.`)",
    "super(`Remote does not support the \"${e}\" so the \"${n}\" parameter cannot be used.`)": "super(`Remote does not support the \"${e}\" so the \"${n}\" parameter cannot be used.`)",
    "super(`Remote did not reply using the \"smart\" HTTP protocol. Expected \"001e# service=git-upload-pack\" but received: ${e}`)": "super(`Remote did not reply using the \"smart\" HTTP protocol. Expected \"001e# service=git-upload-pack\" but received: ${e}`)",
    "super(`Git remote \"${e}\" uses an unrecognized transport protocol: \"${n}\"`)": "super(`Git remote \"${e}\" uses an unrecognized transport protocol: \"${n}\"`)",
    "super(`Cannot parse remote URL: \"${e}\"`)": "super(`Cannot parse remote URL: \"${e}\"`)",
    "super(\"The operation was canceled.\")": "super(\"The operation was canceled.\")",
    "super(`Could not merge index: Entry for '${e}' is not up to date. Either reset the index entry to HEAD, or stage your unstaged changes.`)": "super(`Could not merge index: Entry for '${e}' is not up to date. Either reset the index entry to HEAD, or stage your unstaged changes.`)",
    "super(`\"${e}\" does not point to any commit. You're maybe working on a repository with no commits yet. `)": "super(`\"${e}\" does not point to any commit. You're maybe working on a repository with no commits yet. `)",
    "super(\"No network connection available\")": "super(\"No network connection available\")",
    "ue(\"invalid type passed to GitIndex.from\")": "ue(\"invalid type passed to GitIndex.from\")",
    "ue(\"Index file is empty (.git/index)\")": "ue(\"Index file is empty (.git/index)\")",
    "ue(`Invalid dircache magic file number: ${i}`)": "ue(`Invalid dircache magic file number: ${i}`)",
    "ue(`Invalid checksum in GitIndex buffer: expected ${s} but saw ${a}`)": "ue(`Invalid checksum in GitIndex buffer: expected ${s} but saw ${a}`)",
    "ue(`Unsupported dircache version: ${o}`)": "ue(`Unsupported dircache version: ${o}`)",
    "ue(`Got a path length of: ${h}`)": "ue(`Got a path length of: ${h}`)",
    "ue(`Expected 1-8 null characters but got '${p}' after ${u.path}`)": "ue(`Expected 1-8 null characters but got '${p}' after ${u.path}`)",
    "ue(\"Unexpected end of file\")": "ue(\"Unexpected end of file\")",
    "ue(`Unexpected GitTree entry mode: ${t.toString(8)`)": "ue(`Unexpected GitTree entry mode: ${t.toString(8)`)",
    "ue(\"Invalid refspec\")": "ue(\"Invalid refspec\")",
    "ue(`Unexpected GitTree entry mode: ${t}`)": "ue(`Unexpected GitTree entry mode: ${t}`)",
    "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next space character.`)": "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next space character.`)",
    "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next null character.`)": "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next null character.`)",
    "ue(`Could not understand file mode: ${t}`)": "ue(`Could not understand file mode: ${t}`)",
    "ue(\"invalid type passed to GitTree constructor\")": "ue(\"invalid type passed to GitTree constructor\")",
    "ue(`Length mismatch: expected ${a} bytes but got ${s} instead.`)": "ue(`Length mismatch: expected ${a} bytes but got ${s} instead.`)",
    "ue(`applyDelta expected source buffer to be ${r} bytes but the provided buffer was ${e.length} bytes`)": "ue(`applyDelta expected source buffer to be ${r} bytes but the provided buffer was ${e.length} bytes`)",
    "ue(`applyDelta expected target buffer to be ${i} bytes but the resulting buffer was ${l} bytes`)": "ue(`applyDelta expected target buffer to be ${i} bytes but the resulting buffer was ${l} bytes`)",
    "ue(`Invalid PACK header '${r}'`)": "ue(`Invalid PACK header '${r}'`)",
    "ue(`Invalid packfile version: ${i}`)": "ue(`Invalid packfile version: ${i}`)",
    "ue(`Pako error: ${f.msg}`)": "ue(`Pako error: ${f.msg}`)",
    "ue(\"Inflated object size is different from that stated in packfile.\")": "ue(\"Inflated object size is different from that stated in packfile.\")",
    "ue(`Unable to read version ${a} packfile IDX. (Only version 2 supported)`)": "ue(`Unable to read version ${a} packfile IDX. (Only version 2 supported)`)",
    "ue(\"To keep implementation simple, I haven't implemented the layer 5 feature needed to support packfiles > 2GB in size.\")": "ue(\"To keep implementation simple, I haven't implemented the layer 5 feature needed to support packfiles > 2GB in size.\")",
    "ue(`Could not read object ${e} from packfile`)": "ue(`Could not read object ${e} from packfile`)",
    "ue(\"Tried to read from a GitPackIndex with no packfile loaded into memory\")": "ue(\"Tried to read from a GitPackIndex with no packfile loaded into memory\")",
    "ue(\"Unrecognized type: 0b\"+s.toString(2))": "ue(\"Unrecognized type: 0b\"+s.toString(2))",
    "ue(`Packfile told us object would have length ${c} but it had length ${h.byteLength}`)": "ue(`Packfile told us object would have length ${c} but it had length ${h.byteLength}`)",
    "ue(`SHA check failed! Expected ${r}, computed ${o}`)": "ue(`SHA check failed! Expected ${r}, computed ${o}`)",
    "ue(`invalid requested format \"${i}\"`)": "ue(`invalid requested format \"${i}\"`)",
    "ue(\"invalid type passed to GitAnnotatedTag constructor\")": "ue(\"invalid type passed to GitAnnotatedTag constructor\")",
    "ue(\"invalid type passed to GitCommit constructor\")": "ue(\"invalid type passed to GitCommit constructor\")",
    "ue(\"commit 'parent' property should be an array\")": "ue(\"commit 'parent' property should be an array\")",
    "ue(\"GitObjectStoreLoose expects objects to write to be in deflated format\")": "ue(\"GitObjectStoreLoose expects objects to write to be in deflated format\")",
    "ue(`Invalid mode 0o${_.toString(8)`)": "ue(`Invalid mode 0o${_.toString(8)`)",
    ".displayMessage(`Staged ${r.path}`)": ".displayMessage(`Staged ${r.path}`)",
    ".displayMessage(`Unstaged ${r.path}`)": ".displayMessage(`Unstaged ${r.path}`)",
    ".displayMessage(\"Everything is up-to-date\")": ".displayMessage(\"Everything is up-to-date\")",
    ".displayMessage(\"No commits to push\")": ".displayMessage(\"No commits to push\")",
    ".displayMessage(`Committed${d?\" approx.\":\"\"} ${h} ${h==1?\"file\":\"files\"}`)": ".displayMessage(`Committed${d?\" approx.\":\"\"} ${h} ${h==1?\"file\":\"files\"}`)",
    ".displayMessage(\"No changes to commit\")": ".displayMessage(\"No changes to commit\")",
    ".displayMessage(`Pushed ${i} ${i==1?\"file\":\"files\"} to remote`)": ".displayMessage(`Pushed ${i} ${i==1?\"file\":\"files\"} to remote`)",
    ".displayMessage(`Pulled ${n.length} ${n.length==1?\"file\":\"files\"} from remote`)": ".displayMessage(`Pulled ${n.length} ${n.length==1?\"file\":\"files\"} from remote`)",
    ".displayMessage(\"Fetched from remote\")": ".displayMessage(\"Fetched from remote\")",
    ".displayMessage(`Staged ${n.path}`)": ".displayMessage(`Staged ${n.path}`)",
    ".displayMessage(`Unstaged ${n.path}`)": ".displayMessage(`Unstaged ${n.path}`)",
    ".displayMessage(`Switched to ${r}`)": ".displayMessage(`Switched to ${r}`)",
    ".displayMessage(`Switched to ${n}`)": ".displayMessage(`Switched to ${n}`)",
    ".displayMessage(`Created new branch ${n}`)": ".displayMessage(`Created new branch ${n}`)",
    ".displayMessage(`Deleted branch ${r}`)": ".displayMessage(`Deleted branch ${r}`)",
    ".displayMessage(`Set upstream branch to ${n}`)": ".displayMessage(`Set upstream branch to ${n}`)",
    ".displayMessage(\"Fetching remote branches\")": ".displayMessage(\"Fetching remote branches\")",
    ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)": ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)",
    ".displayError(\"Aborted. No upstream-branch is set!\",1e4)": ".displayError(\"Aborted. No upstream-branch is set!\",1e4)",
    ".displayError(\"Too many changes to display\")": ".displayError(\"Too many changes to display\")",
    ".displayError(`Did not commit, because following files are too big: ${a.map(s=>s.vault_path).join(` `)}. Please remove them.`)": ".displayError(`Did not commit, because following files are too big: ${a.map(s=>s.vault_path).join(` `)}. Please remove them.`)",
    ".displayError(`You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)": ".displayError(`You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)",
    ".displayError(`Did not commit, because you have conflicts in ${c.conflicted.length} ${c.conflicted.length==1?\"file\":\"files\"}. Please resolve them and commit per command.`)": ".displayError(`Did not commit, because you have conflicts in ${c.conflicted.length} ${c.conflicted.length==1?\"file\":\"files\"}. Please resolve them and commit per command.`)",
    ".displayError(\"Did not commit, because you have conflicts. Please resolve them and commit per command.\")": ".displayError(\"Did not commit, because you have conflicts. Please resolve them and commit per command.\")",
    ".displayError(`Cannot push. You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)": ".displayError(`Cannot push. You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)",
    ".displayError(\"Cannot push. You have conflicts\")": ".displayError(\"Cannot push. You have conflicts\")",
    ".displayError(\"Git: Going into offline mode. Future network errors will no longer be displayed.\",2e3)": ".displayError(\"Git: Going into offline mode. Future network errors will no longer be displayed.\",2e3)",
    ".displayError(`Pull failed (${this.plugin.settings.syncMethod})": ".displayError(`Pull failed (${this.plugin.settings.syncMethod})",
    ".displayError(`Sync failed (${this.plugin.settings.syncMethod})": ".displayError(`Sync failed (${this.plugin.settings.syncMethod})",
    "\"aria-label\",\"Open File\"": "\"aria-label\",\"Open File\"",
    "\"aria-label\",\"Change Layout\"": "\"aria-label\",\"Change Layout\"",
    "\"aria-label\",\"Refresh\"": "\"aria-label\",\"Refresh\"",
    "\"aria-label\",\"Discard\"": "\"aria-label\",\"Discard\"",
    "\"aria-label\",\"Stage\"": "\"aria-label\",\"Stage\"",
    "\"aria-label\",\"Unstage\"": "\"aria-label\",\"Unstage\"",
    "\"aria-label\",\"Commit-and-sync\"": "\"aria-label\",\"Commit-and-sync\"",
    "\"aria-label\",\"Commit\"": "\"aria-label\",\"Commit\"",
    "\"aria-label\",\"Stage all\"": "\"aria-label\",\"Stage all\"",
    "\"aria-label\",\"Unstage all\"": "\"aria-label\",\"Unstage all\"",
    "\"aria-label\",\"Push\"": "\"aria-label\",\"Push\"",
    "\"aria-label\",\"Pull\"": "\"aria-label\",\"Pull\"",
    "\"aria-label\",s=\"And \"+(t[0].length-500)+\" more files\"": "\"aria-label\",s=\"And \"+(t[0].length-500)+\" more files\"",
    "\"aria-label\",n=\"Clear\"": "\"aria-label\",n=\"Clear\"",
    ".ariaLabel=\"You have merge conflicts. Resolve them and commit afterwards.\"": ".ariaLabel=\"You have merge conflicts. Resolve them and commit afterwards.\"",
    ".ariaLabel=\"Checking repository status...\"": ".ariaLabel=\"Checking repository status...\"",
    ".ariaLabel=\"Adding files...\"": ".ariaLabel=\"Adding files...\"",
    ".ariaLabel=\"Committing changes...\"": ".ariaLabel=\"Committing changes...\"",
    ".ariaLabel=\"Pushing changes...\"": ".ariaLabel=\"Pushing changes...\"",
    ".ariaLabel=\"Pulling changes...\"": ".ariaLabel=\"Pulling changes...\"",
    ".ariaLabel=\"Failed on initialization!\"": ".ariaLabel=\"Failed on initialization!\"",
    ".ariaLabel=`${n?\"Offline: \":\"\"}Last Commit: ${i}`": ".ariaLabel=`${n?\"Offline: \":\"\"}Last Commit: ${i}`",
    ".ariaLabel=n?\"Git is offline\":\"Git is ready\"": ".ariaLabel=n?\"Git is offline\":\"Git is ready\"",
    "placeholder:\"Specify your username\"": "placeholder:\"Specify your username\"",
    "placeholder:\"Specify your password/personal access token\"": "placeholder:\"Specify your password/personal access token\"",
    "placeholder:\"Do you really want to delete the repository (.git directory)? plugin action cannot be undone.\"": "placeholder:\"Do you really want to delete the repository (.git directory)? plugin action cannot be undone.\"",
    "placeholder:\"Do you want to discard all changes to tracked files? plugin action cannot be undone.\"": "placeholder:\"Do you want to discard all changes to tracked files? plugin action cannot be undone.\"",
    "placeholder:\"Enter remote URL\"": "placeholder:\"Enter remote URL\"",
    "placeholder:\"Enter directory for clone. It needs to be empty or not existent.\"": "placeholder:\"Enter directory for clone. It needs to be empty or not existent.\"",
    "placeholder:\"Specify depth of clone. Leave empty for full clone.\"": "placeholder:\"Specify depth of clone. Leave empty for full clone.\"",
    "placeholder:\"Create new branch\"": "placeholder:\"Create new branch\"",
    "placeholder:\"Delete branch\"": "placeholder:\"Delete branch\"",
    "placeholder:\"This branch isn't merged into HEAD. Force delete?\"": "placeholder:\"This branch isn't merged into HEAD. Force delete?\"",
    "placeholder:\"Select or create a new remote by typing its name and selecting it\"": "placeholder:\"Select or create a new remote by typing its name and selecting it\"",
    "placeholder:\"Select or create a new remote branch by typing its name and selecting it\"": "placeholder:\"Select or create a new remote branch by typing its name and selecting it\"",
    "placeholder:\"Select a remote\"": "placeholder:\"Select a remote\"",
    "reason:\"Failed to get remote url of submodule\"": "reason:\"Failed to get remote url of submodule\"",
    "reason:\"Remote branch is not configured\"": "reason:\"Remote branch is not configured\"",
    "reason:\"Failed to get current branch name\"": "reason:\"Failed to get current branch name\"",
    "reason:\"Failed to get remote url\"": "reason:\"Failed to get remote url\"",
    "reason:\"Could not parse remote url\"": "reason:\"Could not parse remote url\"",
    "-------------------------下拉列表-------------------------": "-------------------------下拉列表-------------------------",
    "hide:\"Hide\",full:\"Full\",initials:\"Initials\"": "hide:\"Hide\",full:\"Full\",initials:\"Initials\"",
    "\"viewer-local\":\"My local (default)\",\"author-local\":\"Author's local\",utc0000:\"UTC+0000/Z\"": "\"viewer-local\":\"My local (default)\",\"author-local\":\"Author's local\",utc0000:\"UTC+0000/Z\"",
    "merge:\"Merge\",rebase:\"Rebase\",reset:\"Other sync service (Only updates the HEAD without touching the working directory)\"": "merge:\"Merge\",rebase:\"Rebase\",reset:\"Other sync service (Only updates the HEAD without touching the working directory)\"",
    "hide:\"Hide\",initials:\"Initials (default)\",\"first name\":\"First name\",\"last name\":\"Last name\",full:\"Full name\"": "hide:\"Hide\",initials:\"Initials (default)\",\"first name\":\"First name\",\"last name\":\"Last name\",full:\"Full name\"",
    "hide:\"Hide\",date:\"Date (default)\",datetime:\"Date and time\",\"natural language\":\"Natural language\",custom:\"Custom\"": "hide:\"Hide\",date:\"Date (default)\",datetime:\"Date and time\",\"natural language\":\"Natural language\",custom:\"Custom\"",
    "inactive:\"Do not follow (default)\",\"same-commit\":\"Follow within same commit\",\"all-commits\":\"Follow within all commits (maybe slow)\"": "inactive:\"Do not follow (default)\",\"same-commit\":\"Follow within same commit\",\"all-commits\":\"Follow within all commits (maybe slow)\"",
    "---------------------------------------------------------": "---------------------------------------------------------",
    ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)": ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)",
    ".createEl(\"button\", {\n      text: \"Cancel\"\n    })": ".createEl(\"button\", {\n      text: \"Cancel\"\n    })",
    ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"": ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"",
    "i=\"commit\"": "i=\"commit\"",
    "\"commit-and-sync\"": "\"commit-and-sync\"",
    "\"Changes\"": "\"Changes\"",
    "\"Staged Changes\"": "\"Staged Changes\"",
    "\"Recently Pulled Files\"": "\"Recently Pulled Files\"",
    "`\n            Specify custom date format. E.g. \"${Dh}. See <a href=\"https://momentjs.com\">Moment.js</a> for more formats.`": "`\n            Specify custom date format. E.g. \"${Dh}. See <a href=\"https://momentjs.com\">Moment.js</a> for more formats.`",
    "`\n            <a href=\"${cL}\">Feature guide and quick examples</a></br>\n            The commit hash, author name and authoring date can all be individually toggled.</br>Hide everything, to only show the age-colored sidebar.`": "`\n            <a href=\"${cL}\">Feature guide and quick examples</a></br>\n            The commit hash, author name and authoring date can all be individually toggled.</br>Hide everything, to only show the age-colored sidebar.`",
    "`\n                By default (deactivated), each line only shows the newest commit where it was changed.\n                <br/>\n                With <i>same commit</i>, cut-copy-paste-ing of text is followed within the same commit and the original commit of authoring will be shown.\n                <br/>\n                With <i>all commits</i>, cut-copy-paste-ing text inbetween multiple commits will be detected.\n                <br/>\n                It uses <a href=\"https://git-scm.com/docs/git-blame\">git-blame</a> and\n                for matches (at least ${Sl} characters) within the same (or all) commit(s), <em>the originating</em> commit's information is shown.`": "`\n                By default (deactivated), each line only shows the newest commit where it was changed.\n                <br/>\n                With <i>same commit</i>, cut-copy-paste-ing of text is followed within the same commit and the original commit of authoring will be shown.\n                <br/>\n                With <i>all commits</i>, cut-copy-paste-ing text inbetween multiple commits will be detected.\n                <br/>\n                It uses <a href=\"https://git-scm.com/docs/git-blame\">git-blame</a> and\n                for matches (at least ${Sl} characters) within the same (or all) commit(s), <em>the originating</em> commit's information is shown.`",
    "`\n                    The time-zone in which the authoring date should be shown.\n                    Either your local time-zone (default),\n                    the author's time-zone during commit creation or\n                    <a href=\"https://en.wikipedia.org/wiki/UTC%C2%B100:00\">UTC\\xB100:00</a>.\n            `": "`\n                    The time-zone in which the authoring date should be shown.\n                    Either your local time-zone (default),\n                    the author's time-zone during commit creation or\n                    <a href=\"https://en.wikipedia.org/wiki/UTC%C2%B100:00\">UTC\\xB100:00</a>.\n            `",
    "`\n                    Whitespace and newlines are interpreted as\n                    part of the document and in changes\n                    by default (hence not ignored).\n                    This makes the last line being shown as 'changed'\n                    when a new subsequent line is added,\n                    even if the previously last line's text is the same.\n                    <br>\n                    If you don't care about purely-whitespace changes\n                    (e.g. list nesting / quote indentation changes),\n                    then activating this will provide more meaningful change detection.\n                `": "`\n                    Whitespace and newlines are interpreted as\n                    part of the document and in changes\n                    by default (hence not ignored).\n                    This makes the last line being shown as 'changed'\n                    when a new subsequent line is added,\n                    even if the previously last line's text is the same.\n                    <br>\n                    If you don't care about purely-whitespace changes\n                    (e.g. list nesting / quote indentation changes),\n                    then activating this will provide more meaningful change detection.\n                `",
    "'Unhandled error in \"FileSystem.exists()\" function'": "'Unhandled error in \"FileSystem.exists()\" function'",
    "` (${this.unPushedCommits} unpushed commits)`": "` (${this.unPushedCommits} unpushed commits)`",
    "            File without changes": "            File without changes",
    "<a href=\"${lL}\">Format string</a> to display the authoring date.</br>Currently: ${r}": "<a href=\"${lL}\">Format string</a> to display the authoring date.</br>Currently: ${r}",
    "`The oldest age in the line author coloring. Everything older will have the same color.\n            </br>Smallest valid age is \"1d\". Currently: ${r!==void 0?`${r.asDays()} days`:\"invalid!\"}`": "`The oldest age in the line author coloring. Everything older will have the same color.\n            </br>Smallest valid age is \"1d\". Currently: ${r!==void 0?`${r.asDays()} days`:\"invalid!\"}`",
    "The CSS color of the gutter text": "The CSS color of the gutter text",
    "It is higly recommended to use": "It is higly recommended to use",
    "CSS variables</a>": "CSS variables</a>",
    "defined by themes": "defined by themes",
    "</pre> or": "</pre> or",
    "because they automatically adapt to theme changes.<br/>": "because they automatically adapt to theme changes.<br/>",
    "See: <a href": "See: <a href",
    "List of available CSS variables in Obsidian": "List of available CSS variables in Obsidian",
    "`abcdef Author Name ${s}`": "`abcdef Author Name ${s}`",
    "Supports 'rgb(r,g,b)', 'hsl(h,s,l)', hex (#) and": "Supports 'rgb(r,g,b)', 'hsl(h,s,l)', hex (#) and",
    "named colors (e.g. 'black', 'purple'). Color preview:": "named colors (e.g. 'black', 'purple'). Color preview:",
    "oldest (${this.settings.lineAuthor.coloringMaxAge} or older)": "oldest (${this.settings.lineAuthor.coloringMaxAge} or older)",
    ":\"newest\"": ":\"newest\"",
    "Too many files to list": "Too many files to list",
    "Affected files:": "Affected files:",
    "\"1 minute\":`${t} minutes`": "\"1 minute\":`${t} minutes`"
  }
}