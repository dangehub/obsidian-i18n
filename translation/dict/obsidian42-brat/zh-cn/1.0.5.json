{
  "manifest": {
    "translationVersion": 1735725536401,
    "pluginVersion": "1.0.5"
  },
  "description": {
    "original": "Easily install a beta version of a plugin for testing.",
    "translation": "Easily install a beta version of a plugin for testing."
  },
  "dict": {
    "name:\"Plugins: Add a beta plugin for testing\"": "name:\"Plugins: Add a beta plugin for testing\"",
    "name:\"Plugins: Add a beta plugin with frozen version based on a release tag\"": "name:\"Plugins: Add a beta plugin with frozen version based on a release tag\"",
    "name:\"Plugins: Check for updates to all beta plugins and UPDATE\"": "name:\"Plugins: Check for updates to all beta plugins and UPDATE\"",
    "name:\"Plugins: Only check for updates to beta plugins, but don't Update\"": "name:\"Plugins: Only check for updates to beta plugins, but don't Update\"",
    "name:\"Plugins: Choose a single plugin version to update\"": "name:\"Plugins: Choose a single plugin version to update\"",
    "name:\"Plugins: Choose a single plugin to reinstall\"": "name:\"Plugins: Choose a single plugin to reinstall\"",
    "name:\"Plugins: Restart a plugin that is already installed\"": "name:\"Plugins: Restart a plugin that is already installed\"",
    "name:\"Plugins: Disable a plugin - toggle it off\"": "name:\"Plugins: Disable a plugin - toggle it off\"",
    "name:\"Plugins: Enable a plugin - toggle it on\"": "name:\"Plugins: Enable a plugin - toggle it on\"",
    "name:\"Plugins: Open the GitHub repository for a plugin\"": "name:\"Plugins: Open the GitHub repository for a plugin\"",
    "name:\"Themes: Open the GitHub repository for a theme (appearance)\"": "name:\"Themes: Open the GitHub repository for a theme (appearance)\"",
    "name:\"Plugins: Open Plugin Settings Tab\"": "name:\"Plugins: Open Plugin Settings Tab\"",
    "name:\"Themes: Grab a beta theme for testing from a Github repository\"": "name:\"Themes: Grab a beta theme for testing from a Github repository\"",
    "name:\"Themes: Update beta themes\"": "name:\"Themes: Update beta themes\"",
    "name:\"All Commands list\"": "name:\"All Commands list\"",
    "text:\"Github repository for beta plugin:\"": "text:\"Github repository for beta plugin:\"",
    "text:\"Never mind\"": "text:\"Never mind\"",
    "text:\"Add Plugin\"": "text:\"Add Plugin\"",
    "text:\"Github repository for beta theme:\"": "text:\"Github repository for beta theme:\"",
    "text:\"Add Theme\"": "text:\"Add Theme\"",
    "text:'The following is a list of beta plugins added via the command palette \"Add a beta plugin for testing\" or \"Add a beta plugin with frozen version for testing\". A frozen version is a specific release of a plugin based on its release tag. '": "text:'The following is a list of beta plugins added via the command palette \"Add a beta plugin for testing\" or \"Add a beta plugin with frozen version for testing\". A frozen version is a specific release of a plugin based on its release tag. '",
    "text:\"Click the x button next to a plugin to remove it from the list.\"": "text:\"Click the x button next to a plugin to remove it from the list.\"",
    "text:\"Note: \"": "text:\"Note: \"",
    "text:\"This does not delete the plugin, this should be done from the  Community Plugins tab in Settings.\"": "text:\"This does not delete the plugin, this should be done from the  Community Plugins tab in Settings.\"",
    ".setName(\"Beta plugin list\")": ".setName(\"Beta plugin list\")",
    ".setName(\"Beta themes list\")": ".setName(\"Beta themes list\")",
    ".setName(\"Monitoring\")": ".setName(\"Monitoring\")",
    ".setDesc('If enabled beta plugins will be automatically enabled after installtion by default. Note: you can toggle this on and off for each plugin in the \"Add Plugin\" form.')": ".setDesc('If enabled beta plugins will be automatically enabled after installtion by default. Note: you can toggle this on and off for each plugin in the \"Add Plugin\" form.')",
    ".setDesc(\"If enabled all beta plugins will be checked for updates each time Obsidian starts. Note: this does not update frozen version plugins.\")": ".setDesc(\"If enabled all beta plugins will be checked for updates each time Obsidian starts. Note: this does not update frozen version plugins.\")",
    ".setDesc(\"If enabled all beta themes will be checked for updates each time Obsidian starts.\")": ".setDesc(\"If enabled all beta themes will be checked for updates each time Obsidian starts.\")",
    ".setDesc(\"BRAT will provide popup notifications for its various activities. Turn this off means  no notifications from BRAT.\")": ".setDesc(\"BRAT will provide popup notifications for its various activities. Turn this off means  no notifications from BRAT.\")",
    ".setDesc(\"Atomic Bomb level console logging. Can be used for troubleshoting and development.\")": ".setDesc(\"Atomic Bomb level console logging. Can be used for troubleshoting and development.\")",
    ".innerText=\"Learn more about my work at:\"": ".innerText=\"Learn more about my work at:\"",
    ".innerText=\"https://tfthacker.com\"": ".innerText=\"https://tfthacker.com\"",
    ".setButtonText(\"Add Beta plugin\")": ".setButtonText(\"Add Beta plugin\")",
    ".setButtonText(\"Click once more to confirm removal\")": ".setButtonText(\"Click once more to confirm removal\")",
    ".setButtonText(\"Add Beta plugin with frozen version\")": ".setButtonText(\"Add Beta plugin with frozen version\")",
    ".setButtonText(\"Add Beta Theme\")": ".setButtonText(\"Add Beta Theme\")",
    ".setName(\"Auto-enable plugins after installation\")": ".setName(\"Auto-enable plugins after installation\")",
    ".setName(\"Auto-update plugins at startup\")": ".setName(\"Auto-update plugins at startup\")",
    ".setName(\"Auto-update themes at startup\")": ".setName(\"Auto-update themes at startup\")",
    ".setName(\"Enable Notifications\")": ".setName(\"Enable Notifications\")",
    ".setName(\"Enable Logging\")": ".setName(\"Enable Logging\")",
    ".setName(\"BRAT Log File Location\")": ".setName(\"BRAT Log File Location\")",
    ".setName(\"Enable Verbose Logging\")": ".setName(\"Enable Verbose Logging\")",
    ".setName(\"Debugging Mode\")": ".setName(\"Debugging Mode\")",
    ".setDesc(\n      'If enabled beta plugins will be automatically enabled after installtion by default. Note: you can toggle this on and off for each plugin in the \"Add Plugin\" form.'\n    )": ".setDesc(\n      'If enabled beta plugins will be automatically enabled after installtion by default. Note: you can toggle this on and off for each plugin in the \"Add Plugin\" form.'\n    )",
    ".setDesc(\n      \"If enabled all beta plugins will be checked for updates each time Obsidian starts. Note: this does not update frozen version plugins.\"\n    )": ".setDesc(\n      \"If enabled all beta plugins will be checked for updates each time Obsidian starts. Note: this does not update frozen version plugins.\"\n    )",
    ".setDesc(\n      \"If enabled all beta themes will be checked for updates each time Obsidian starts.\"\n    )": ".setDesc(\n      \"If enabled all beta themes will be checked for updates each time Obsidian starts.\"\n    )",
    ".setDesc(\n      \"BRAT will provide popup notifications for its various activities. Turn this off means  no notifications from BRAT.\"\n    )": ".setDesc(\n      \"BRAT will provide popup notifications for its various activities. Turn this off means  no notifications from BRAT.\"\n    )",
    ".setDesc(\"Plugin updates will be logged to a file in the log file.\")": ".setDesc(\"Plugin updates will be logged to a file in the log file.\")",
    ".setDesc(\"Logs will be saved to this file. Don't add .md to the file name.\")": ".setDesc(\"Logs will be saved to this file. Don't add .md to the file name.\")",
    ".setDesc(\"Get a lot  more information in  the log.\")": ".setDesc(\"Get a lot  more information in  the log.\")",
    ".setDesc(\n      \"Atomic Bomb level console logging. Can be used for troubleshoting and development.\"\n    )": ".setDesc(\n      \"Atomic Bomb level console logging. Can be used for troubleshoting and development.\"\n    )",
    ".setPlaceholder(\n          \"Repository (example: https://github.com/GitubUserName/repository-name\"\n        )": ".setPlaceholder(\n          \"Repository (example: https://github.com/GitubUserName/repository-name\"\n        )",
    ".setPlaceholder(\"Example: BRAT-log\")": ".setPlaceholder(\"Example: BRAT-log\")",
    ".setPlaceholder(\n          \"Repository (example: https://github.com/GitubUserName/repository-name)\"\n        )": ".setPlaceholder(\n          \"Repository (example: https://github.com/GitubUserName/repository-name)\"\n        )",
    ".setPlaceholder(\"Specify the release version tag (example: 1.0.0)\")": ".setPlaceholder(\"Specify the release version tag (example: 1.0.0)\")",
    ".setTooltip(\"Delete this beta plugin\")": ".setTooltip(\"Delete this beta plugin\")",
    ".setTooltip(\"Delete this beta theme\")": ".setTooltip(\"Delete this beta theme\")",
    ".appendText(\"Enable after installing the plugin\")": ".appendText(\"Enable after installing the plugin\")",
    ".createEl(\"h4\", { text: \"Github repository for beta theme:\" })": ".createEl(\"h4\", { text: \"Github repository for beta theme:\" })",
    ".createEl(\"h2\", { text: \"Beta Plugin List\" })": ".createEl(\"h2\", { text: \"Beta Plugin List\" })",
    ".createEl(\"div\", {\n      text: `The following is a list of beta plugins added via the command palette \"Add a beta plugin for testing\" or \"Add a beta plugin with frozen version for testing\". A frozen version is a specific release of a plugin based on its releease tag. `\n    })": ".createEl(\"div\", {\n      text: `The following is a list of beta plugins added via the command palette \"Add a beta plugin for testing\" or \"Add a beta plugin with frozen version for testing\". A frozen version is a specific release of a plugin based on its releease tag. `\n    })",
    ".createEl(\"div\", {\n      text: `Click the x button next to a plugin to remove it from the list.`\n    })": ".createEl(\"div\", {\n      text: `Click the x button next to a plugin to remove it from the list.`\n    })",
    ".createEl(\"b\", { text: \"Note: \" })": ".createEl(\"b\", { text: \"Note: \" })",
    ".createEl(\"h2\", { text: \"Beta Themes List\" })": ".createEl(\"h2\", { text: \"Beta Themes List\" })",
    ".createEl(\"h2\", { text: \"Monitoring\" })": ".createEl(\"h2\", { text: \"Monitoring\" })",
    ".createEl(\"h4\", { text: \"Github repository for beta plugin:\" })": ".createEl(\"h4\", { text: \"Github repository for beta plugin:\" })",
    ".innerText = \"Learn more about my work at:\"": ".innerText = \"Learn more about my work at:\"",
    "text: \"Add Plugin\"": "text: \"Add Plugin\"",
    "text: \"Add Theme\"": "text: \"Add Theme\"",
    "text: \"Never mind\"": "text: \"Never mind\"",
    "text: \"This does not delete the plugin, this should be done from the  Community Plugins tab in Settings.\"": "text: \"This does not delete the plugin, this should be done from the  Community Plugins tab in Settings.\"",
    ".Notice(\"Failed to read the daily note template\")": ".Notice(\"Failed to read the daily note template\")",
    ".Notice(\"Unable to create new file.\")": ".Notice(\"Unable to create new file.\")",
    "\"There is no theme.css or theme-beta.css file in the root path of this repository, so there is no theme to install.\"": "\"There is no theme.css or theme-beta.css file in the root path of this repository, so there is no theme to install.\"",
    "\"There is no manifest.json file in the root path of this repository, so theme cannot be installed.\"": "\"There is no manifest.json file in the root path of this repository, so theme cannot be installed.\"",
    "${manifestInfo.name} theme installed from ${cssGithubRepository}. ": "${manifestInfo.name} theme installed from ${cssGithubRepository}. ",
    "${manifestInfo.name} theme updated from ${cssGithubRepository}.": "${manifestInfo.name} theme updated from ${cssGithubRepository}.",
    "console.info(\"No custom daily note settings found!\", err);": "console.info(\"No custom daily note settings found!\", err);",
    "console.info(\"No custom weekly note settings found!\", err);": "console.info(\"No custom weekly note settings found!\", err);",
    "console.info(\"No custom monthly note settings found!\", err);": "console.info(\"No custom monthly note settings found!\", err);",
    "console.info(\"No custom quarterly note settings found!\", err);": "console.info(\"No custom quarterly note settings found!\", err);",
    "console.info(\"No custom yearly note settings found!\", err);": "console.info(\"No custom yearly note settings found!\", err);",
    "console.error(`Failed to read the daily note template '${templatePath}'`, err);": "console.error(`Failed to read the daily note template '${templatePath}'`, err);",
    "console.error(`Failed to create file: '${normalizedPath}'`, err);": "console.error(`Failed to create file: '${normalizedPath}'`, err);",
    "name: \"Plugins: Add a beta plugin for testing\"": "name: \"Plugins: Add a beta plugin for testing\"",
    "name: \"Plugins: Add a beta plugin with frozen version based on a release tag\"": "name: \"Plugins: Add a beta plugin with frozen version based on a release tag\"",
    "name: \"Plugins: Check for updates to all beta plugins and UPDATE\"": "name: \"Plugins: Check for updates to all beta plugins and UPDATE\"",
    "name: \"Plugins: Only check for updates to beta plugins, but don't Update\"": "name: \"Plugins: Only check for updates to beta plugins, but don't Update\"",
    "name: \"Plugins: Choose a single plugin version to update\"": "name: \"Plugins: Choose a single plugin version to update\"",
    "name: \"Plugins: Choose a single plugin to reinstall\"": "name: \"Plugins: Choose a single plugin to reinstall\"",
    "name: \"Plugins: Restart a plugin that is already installed\"": "name: \"Plugins: Restart a plugin that is already installed\"",
    "name: \"Plugins: Disable a plugin - toggle it off\"": "name: \"Plugins: Disable a plugin - toggle it off\"",
    "name: \"Plugins: Enable a plugin - toggle it on\"": "name: \"Plugins: Enable a plugin - toggle it on\"",
    "name: \"Plugins: Open the GitHub repository for a plugin\"": "name: \"Plugins: Open the GitHub repository for a plugin\"",
    "name: \"Themes: Open the GitHub repository for a theme (appearance)\"": "name: \"Themes: Open the GitHub repository for a theme (appearance)\"",
    "name: \"Plugins: Open Plugin Settings Tab\"": "name: \"Plugins: Open Plugin Settings Tab\"",
    "name: \"Themes: Grab a beta theme for testing from a Github repository\"": "name: \"Themes: Grab a beta theme for testing from a Github repository\"",
    "name: \"Themes: Update beta themes\"": "name: \"Themes: Update beta themes\"",
    "name: \"All Commands list\"": "name: \"All Commands list\"",
    "Checking for beta theme updates STARTED": "Checking for beta theme updates STARTED",
    "Checking for beta theme updates COMPLETED": "Checking for beta theme updates COMPLETED",
    "Removed ${cssGithubRepository} from BRAT themes list and will no longer be updated. However, the theme files still exist in the vault. To remove them, go into Settings > Appearance and remove the theme.": "Removed ${cssGithubRepository} from BRAT themes list and will no longer be updated. However, the theme files still exist in the vault. To remove them, go into Settings > Appearance and remove the theme.",
    "This theme is already in the list for beta testing": "This theme is already in the list for beta testing",
    "This does not seem to be an obsidian plugin, as there is no manifest.json file.": "This does not seem to be an obsidian plugin, as there is no manifest.json file.",
    "The plugin id attribute for the release is missing from the manifest file": "The plugin id attribute for the release is missing from the manifest file",
    "The version attribute for the release is missing from the manifest file": "The version attribute for the release is missing from the manifest file",
    "This plugin is already in the list for beta testing": "This plugin is already in the list for beta testing",
    "A manifest.json or manifest-beta.json file does not exist in the root directory of the repository. This plugin cannot be installed.": "A manifest.json or manifest-beta.json file does not exist in the root directory of the repository. This plugin cannot be installed.",
    "The manifest${usingBetaManifest ? \"-beta\" : \"\"}.json file in the root directory of the repository does not have a version number in the file. This plugin cannot be installed.": "The manifest${usingBetaManifest ? \"-beta\" : \"\"}.json file in the root directory of the repository does not have a version number in the file. This plugin cannot be installed.",
    "The manifest${usingBetaManifest ? \"-beta\" : \"\"}.json for this plugin indicates that the Obsidian version of the app needs to be ${primaryManifest.minAppVersion}, but this installation of Obsidian is ${import_obsidian7.apiVersion}.": "The manifest${usingBetaManifest ? \"-beta\" : \"\"}.json for this plugin indicates that the Obsidian version of the app needs to be ${primaryManifest.minAppVersion}, but this installation of Obsidian is ${import_obsidian7.apiVersion}.",
    "You will need to update your Obsidian to use this plugin or contact the plugin developer for more information.": "You will need to update your Obsidian to use this plugin or contact the plugin developer for more information.",
    "The release is not complete and cannot be download. main.js is missing from the Release": "The release is not complete and cannot be download. main.js is missing from the Release",
    "Plugin has been reinstalled and reloaded.": "Plugin has been reinstalled and reloaded.",
    "The plugin has been registered with BRAT.": "The plugin has been registered with BRAT.",
    "The version of ${repositoryPath} is frozen, not updating.": "The version of ${repositoryPath} is frozen, not updating.",
    "There is an update available for ${primaryManifest.id} from version ${localManifestJson.version} to ${primaryManifest.version}. ": "There is an update available for ${primaryManifest.id} from version ${localManifestJson.version} to ${primaryManifest.version}. ",
    "[Release Info]": "[Release Info]",
    "No update available for ${repositoryPath}": "No update available for ${repositoryPath}",
    "Update of plugin failed.": "Update of plugin failed.",
    "Checking for plugin updates STARTED": "Checking for plugin updates STARTED",
    "Checking for plugin updates COMPLETED": "Checking for plugin updates COMPLETED",
    "Removed ${repositoryPath} from BRAT plugin list": "Removed ${repositoryPath} from BRAT plugin list",
    "---- Core Plugin Settings ----": "---- Core Plugin Settings ----",
    "---- Plugin Settings ----": "---- Plugin Settings ----",
    "Could not locate the repository from the URL.": "Could not locate the repository from the URL.",
    "Checking for updates for ${results.info}": "Checking for updates for ${results.info}",
    "Reinstalling ${results.info}": "Reinstalling ${results.info}",
    "Plugin reloading .....": "Plugin reloading .....",
    "${results.display} plugin disabled": "${results.display} plugin disabled",
    "${results.display} plugin enabled": "${results.display} plugin enabled",
    ".setName(\"Personal Access Token\")": ".setName(\"Personal Access Token\")",
    "If you need to access private repositories, enter the personal access token here.": "If you need to access private repositories, enter the personal access token here.",
    ".setPlaceholder(\"Enter your personal access token\")": ".setPlaceholder(\"Enter your personal access token\")"
  }
}