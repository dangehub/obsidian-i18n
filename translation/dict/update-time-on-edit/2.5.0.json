{
  "manifest": {
    "translationVersion": -639075600000,
    "pluginVersion": "2.5.0"
  },
  "description": {
    "original": "Keep front matter in sync with the last edit time",
    "translation": "Keep front matter in sync with the last edit time"
  },
  "dict": {
    "Notice(\"Bulk update for header stopped.\", 2e3)": "Notice(\"Bulk update for header stopped.\", 2e3)",
    "Notice(errorMessage, 4e3)": "Notice(errorMessage, 4e3)",
    ".log(\"NAN DATE\", parsedDate)": ".log(\"NAN DATE\", parsedDate)",
    ".log(\"loading plugin IN DEV\")": ".log(\"loading plugin IN DEV\")",
    ".log(\"Ignoring file because, sha same\")": ".log(\"Ignoring file because, sha same\")",
    ".log(\"current metadata: \", frontmatter)": ".log(\"current metadata: \", frontmatter)",
    ".log(\"current stat: \", file.stat)": ".log(\"current stat: \", file.stat)",
    ".log(\"Something wrong happen, skipping\")": ".log(\"Something wrong happen, skipping\")",
    ".log(\"Update updatedKey\")": ".log(\"Update updatedKey\")",
    ".log(\"Skipping updateKey\")": ".log(\"Skipping updateKey\")",
    ".log(\"Setup handler\")": ".log(\"Setup handler\")",
    ".log(\"TRIGGER FROM MODIFY\")": ".log(\"TRIGGER FROM MODIFY\")",
    ".log(\"unloading Update time on edit plugin\")": ".log(\"unloading Update time on edit plugin\")",
    " log(...data)": " log(...data)",
    ".log(\"[UTOE]:\", ...data)": ".log(\"[UTOE]:\", ...data)",
    ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement)": ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement)",
    ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', \"element.\"].join(\" \")": ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', \"element.\"].join(\" \")",
    ".error([\"Popper: The `allowedAutoPlacements` option did not allow any\", \"placements. Ensure the `placement` option matches the variation\", \"of the allowed placements.\", 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(\" \")": ".error([\"Popper: The `allowedAutoPlacements` option did not allow any\", \"placements. Ensure the `placement` option matches the variation\", \"of the allowed placements.\", 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(\" \")",
    ".error(format2(INVALID_MODIFIER_ERROR, String(modifier.name)": ".error(format2(INVALID_MODIFIER_ERROR, String(modifier.name)",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \")": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \")",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)",
    ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)": ".error(format2(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)",
    ".error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s)": ".error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s)",
    ".error(format2(MISSING_DEPENDENCY_ERROR, String(modifier.name)": ".error(format2(MISSING_DEPENDENCY_ERROR, String(modifier.name)",
    ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', \"present and enabled to work.\"].join(\" \")": ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', \"present and enabled to work.\"].join(\" \")",
    ".error(INVALID_ELEMENT_ERROR)": ".error(INVALID_ELEMENT_ERROR)",
    ".error(INFINITE_LOOP_ERROR)": ".error(INFINITE_LOOP_ERROR)",
    ".error(e)": ".error(e)",
    ".error(errorMessage)": ".error(errorMessage)",
    "name: \"applyStyles\"": "name: \"applyStyles\"",
    "name: \"arrow\"": "name: \"arrow\"",
    "name: \"computeStyles\"": "name: \"computeStyles\"",
    "name: \"eventListeners\"": "name: \"eventListeners\"",
    "name: \"flip\"": "name: \"flip\"",
    "name: \"hide\"": "name: \"hide\"",
    "name: \"offset\"": "name: \"offset\"",
    "name: \"popperOffsets\"": "name: \"popperOffsets\"",
    "name: \"preventOverflow\"": "name: \"preventOverflow\"",
    "name: \"sameWidth\"": "name: \"sameWidth\"",
    "name: \"Date format\"": "name: \"Date format\"",
    "name: \"Folder(s) to exclude for updating the created property\"": "name: \"Folder(s) to exclude for updating the created property\"",
    "name: \"Folder to exclude of all updates\"": "name: \"Folder to exclude of all updates\"",
    "description: \"The date format for read and write\"": "description: \"The date format for read and write\"",
    "description: \"Any file updated in this folder will not trigger a created update.\"": "description: \"Any file updated in this folder will not trigger a created update.\"",
    "description: \"Any file updated in this folder will not trigger an updated and created update.\"": "description: \"Any file updated in this folder will not trigger an updated and created update.\"",
    "text: \"formatting\"": "text: \"formatting\"",
    "text: \"standalone\"": "text: \"standalone\"",
    "text: \"reference\"": "text: \"reference\"",
    "text: `Finding eligible files in the vault...`": "text: `Finding eligible files in the vault...`",
    "text: \"This will update all created and updated time on files affected by this plugin\"": "text: \"This will update all created and updated time on files affected by this plugin\"",
    "text: `WARNING: this action will affect ${allMdFiles.length} in your vault. Make sure you tuned the settings correctly, and make a backup.`": "text: `WARNING: this action will affect ${allMdFiles.length} in your vault. Make sure you tuned the settings correctly, and make a backup.`",
    "text: \"This will update all cache data on files affected by this plugin\"": "text: \"This will update all cache data on files affected by this plugin\"",
    "text: \"Global settings\"": "text: \"Global settings\"",
    "text: \"Updated at\"": "text: \"Updated at\"",
    "text: \"Created at\"": "text: \"Created at\"",
    "text: \"Experimental settings\"": "text: \"Experimental settings\"",
    "text: \"date-fns documentation\"": "text: \"date-fns documentation\"",
    ".setText(`${count}/${allMdFiles.length}`)": ".setText(`${count}/${allMdFiles.length}`)",
    ".setText(`Update all ${allMdFiles.length} files in the vault`)": ".setText(`Update all ${allMdFiles.length} files in the vault`)",
    ".setText(`Create all ${allMdFiles.length} files in the hash cache`)": ".setText(`Create all ${allMdFiles.length} files in the hash cache`)",
    ".setButtonText(\"Close\")": ".setButtonText(\"Close\")",
    ".setButtonText(\"Run\")": ".setButtonText(\"Run\")",
    ".setButtonText(\"Cancel\")": ".setButtonText(\"Cancel\")",
    ".setButtonText(\"Update all files\")": ".setButtonText(\"Update all files\")",
    ".setButtonText(\"Fill initial cache\")": ".setButtonText(\"Fill initial cache\")",
    ".setButtonText(\"Remove\")": ".setButtonText(\"Remove\")",
    ".setName(\"Update all files\")": ".setName(\"Update all files\")",
    ".setName(\"Enable hash matcher\")": ".setName(\"Enable hash matcher\")",
    ".setName(\"Enable number property type\")": ".setName(\"Enable number property type\")",
    ".setName(\"Minimum number of minutes between update\")": ".setName(\"Minimum number of minutes between update\")",
    ".setName(\"Enable the created front matter key update\")": ".setName(\"Enable the created front matter key update\")",
    ".setName(\"Front matter updated name\")": ".setName(\"Front matter updated name\")",
    ".setName(\"Front matter created name\")": ".setName(\"Front matter created name\")",
    ".setDesc(\n      \"This plugin will only work on new files, but if you want to update all files in your vault at once, you can do it here.\"\n    )": ".setDesc(\n      \"This plugin will only work on new files, but if you want to update all files in your vault at once, you can do it here.\"\n    )",
    ".setDesc(\n      \"Using a hash system to prevent too many updates happening, especially with sync.\"\n    )": ".setDesc(\n      \"Using a hash system to prevent too many updates happening, especially with sync.\"\n    )",
    ".setDesc(\n      \"Assigns numbers to date properties (instead of strings) when using numeric formats, like Unix timestamps.\"\n    )": ".setDesc(\n      \"Assigns numbers to date properties (instead of strings) when using numeric formats, like Unix timestamps.\"\n    )",
    ".setDesc(\"If your files are updating too often, increase this.\")": ".setDesc(\"If your files are updating too often, increase this.\")",
    ".setDesc(\"Currently, it is set to now if not present\")": ".setDesc(\"Currently, it is set to now if not present\")",
    ".setDesc(\"The key in the front matter yaml for the update time.\")": ".setDesc(\"The key in the front matter yaml for the update time.\")",
    ".setDesc(\"The key in the front matter yaml for the creation time\")": ".setDesc(\"The key in the front matter yaml for the creation time\")",
    ".setPlaceholder(\"updated\")": ".setPlaceholder(\"updated\")",
    ".setPlaceholder(\"Example: folder1/folder2\")": ".setPlaceholder(\"Example: folder1/folder2\")",
    ".setTooltip(\"Add folder\")": ".setTooltip(\"Add folder\")"
  }
}