{
  "manifest": {
    "translationVersion": 1730193069612,
    "pluginVersion": "0.3.7"
  },
  "description": {
    "original": "a REPL to digest your thoughts",
    "translation": "a REPL to digest your thoughts"
  },
  "dict": {
    "Notice(\n          \"Please check that Enzyme is set up properly (i.e. API Key, etc.)": "Notice(\n          \"Please check that Enzyme is set up properly (i.e. API Key, etc.)",
    "Notice(\"Enzyme encountered an error: \" + e2.message)": "Notice(\"Enzyme encountered an error: \" + e2.message)",
    "Notice(\"Please wait for Enzyme to finish.\")": "Notice(\"Please wait for Enzyme to finish.\")",
    "Notice() {\n    new import_obsidian4.Notice(\"Digesting content...\")": "Notice() {\n    new import_obsidian4.Notice(\"Digesting content...\")",
    "Notice(\"Dataview plugin is not installed\")": "Notice(\"Dataview plugin is not installed\")",
    "Notice(\"No graph view found. Please open the graph.\")": "Notice(\"No graph view found. Please open the graph.\")",
    "Notice(\"No paths \")": "Notice(\"No paths \")",
    "Notice(\"No API key provided for selected model\")": "Notice(\"No API key provided for selected model\")",
    ".log(\"%s - %s %s proxy to -> %s\", (/* @__PURE__ */ new Date()": ".log(\"%s - %s %s proxy to -> %s\", (/* @__PURE__ */ new Date()",
    ".log(`Server running on port ${this.basePort}`)": ".log(`Server running on port ${this.basePort}`)",
    "name: \"Build an Enzyme block from selection\"": "name: \"Build an Enzyme block from selection\"",
    "name: \"Truncate embed previews (across Obsidian)\"": "name: \"Truncate embed previews (across Obsidian)\"",
    "name: \"Unlock graph\"": "name: \"Unlock graph\"",
    "name: \"Trim digest output to highlighted content\"": "name: \"Trim digest output to highlighted content\"",
    "name: \"Refine selected digest\"": "name: \"Refine selected digest\"",
    "text: \"reference\"": "text: \"reference\"",
    "text: \"Models\"": "text: \"Models\"",
    "text: \"Custom Models\"": "text: \"Custom Models\"",
    ".setButtonText(\"Add Custom Model\")": ".setButtonText(\"Add Custom Model\")",
    ".setButtonText(\"Remove\")": ".setButtonText(\"Remove\")",
    ".setName(\"OpenAI API Key\")": ".setName(\"OpenAI API Key\")",
    ".setName(\"Anthropic API Key\")": ".setName(\"Anthropic API Key\")",
    ".setName(\"File exclusion patterns\")": ".setName(\"File exclusion patterns\")",
    ".setName(\"Exclude from Evergreen extraction strategy\")": ".setName(\"Exclude from Evergreen extraction strategy\")",
    ".setName(\"Trim contents\")": ".setName(\"Trim contents\")",
    ".setName(\"Visualize sources in graph\")": ".setName(\"Visualize sources in graph\")",
    ".setName(\"Debug output\")": ".setName(\"Debug output\")",
    ".setName(\"Select model\")": ".setName(\"Select model\")",
    ".setName(\"Model name\")": ".setName(\"Model name\")",
    ".setName(\"Base URL\")": ".setName(\"Base URL\")",
    ".setName(\"API Key\")": ".setName(\"API Key\")",
    ".setDesc(\"API Key for OpenAI models\")": ".setDesc(\"API Key for OpenAI models\")",
    ".setDesc(\"API Key for Anthropic models\")": ".setDesc(\"API Key for Anthropic models\")",
    ".setDesc(\n      \"Patterns to exclude from Dataview queries and synthesis - tags and paths. Separate patterns with newlines.\"\n    )": ".setDesc(\n      \"Patterns to exclude from Dataview queries and synthesis - tags and paths. Separate patterns with newlines.\"\n    )",
    ".setDesc(\n      \"By default, when a [[link]] is mentioned in an Enzyme block, Enzyme will treat mentions of [[link]] as source material (as an evergreen). Add paths to this list to exclude from this strategy. For any files in this list, Enzyme will extract their full contents. Separate paths with newlines.\"\n    )": ".setDesc(\n      \"By default, when a [[link]] is mentioned in an Enzyme block, Enzyme will treat mentions of [[link]] as source material (as an evergreen). Add paths to this list to exclude from this strategy. For any files in this list, Enzyme will extract their full contents. Separate paths with newlines.\"\n    )",
    ".setDesc(\n      \"Override for similar purposes as the previous setting, but rather than extract full contents, trim to the end of the file. Examples might be folders where files contain book highlights (long files).\"\n    )": ".setDesc(\n      \"Override for similar purposes as the previous setting, but rather than extract full contents, trim to the end of the file. Examples might be folders where files contain book highlights (long files).\"\n    )",
    ".setDesc(\n      \"Enable visualization of Dataview sources in Graph view. This is a togglable setting because it overrides the default Obsidian Graph behavior (with this enabled, to reset the Graph state you can use the `Enzyme: Unlock graph` command). The best way to use this is to have Graph view opened in a separate pane.\"\n    )": ".setDesc(\n      \"Enable visualization of Dataview sources in Graph view. This is a togglable setting because it overrides the default Obsidian Graph behavior (with this enabled, to reset the Graph state you can use the `Enzyme: Unlock graph` command). The best way to use this is to have Graph view opened in a separate pane.\"\n    )",
    ".setDesc(\"Enable debug output in the console\")": ".setDesc(\"Enable debug output in the console\")",
    ".setDesc(`${model.provider} model`)": ".setDesc(`${model.provider} model`)",
    ".setDesc(\"Select the model to use for the selected prompt\")": ".setDesc(\"Select the model to use for the selected prompt\")",
    ".setDesc(\"Name of the model from the provider\")": ".setDesc(\"Name of the model from the provider\")",
    ".setDesc(\"Base URL for the model provider; can be empty for OpenAI\")": ".setDesc(\"Base URL for the model provider; can be empty for OpenAI\")",
    ".setDesc(\n      \"API Key for this specific model (if different from global keys)\"\n    )": ".setDesc(\n      \"API Key for this specific model (if different from global keys)\"\n    )",
    ".setPlaceholder(\"OpenAI API Key\")": ".setPlaceholder(\"OpenAI API Key\")",
    ".setPlaceholder(\"Anthropic API Key\")": ".setPlaceholder(\"Anthropic API Key\")",
    ".setPlaceholder(\"Exclusion patterns\")": ".setPlaceholder(\"Exclusion patterns\")",
    ".setPlaceholder(\"Folders\")": ".setPlaceholder(\"Folders\")",
    ".setPlaceholder(\"Model name\")": ".setPlaceholder(\"Model name\")",
    ".setPlaceholder(\"Base URL\")": ".setPlaceholder(\"Base URL\")",
    ".setPlaceholder(\"API Key\")": ".setPlaceholder(\"API Key\")",
    ".append('Warning', '199 Miscellaneous warning')": ".append('Warning', '199 Miscellaneous warning')"
  }
}