{
  "manifest": {
    "translationVersion": 1737165751137,
    "pluginVersion": "2.8.0"
  },
  "description": {
    "original": "A ChatGPT Copilot in Obsidian.",
    "translation": "A ChatGPT Copilot in Obsidian."
  },
  "dict": {
    "Notice(\"Copilot vault index is up-to-date.\")": "Notice(\"Copilot vault index is up-to-date.\")",
    "Notice(\"Indexing is disabled on mobile devices\")": "Notice(\"Indexing is disabled on mobile devices\")",
    "Notice(`Error creating model: ${modelKey}`)": "Notice(`Error creating model: ${modelKey}`)",
    "Notice(\"Please select a language.\")": "Notice(\"Please select a language.\")",
    "Notice(\"Please select a tone.\")": "Notice(\"Please select a tone.\")",
    "Notice(`Total tokens in your vault: ${totalTokens}`)": "Notice(`Total tokens in your vault: ${totalTokens}`)",
    "Notice(\"No active note found.\")": "Notice(\"No active note found.\")",
    "Notice(\"No messages to save.\")": "Notice(\"No messages to save.\")",
    "Notice(`Chat updated in existing note: ${noteFileName}`)": "Notice(`Chat updated in existing note: ${noteFileName}`)",
    "Notice(`Chat saved as new note: ${noteFileName}`)": "Notice(`Chat saved as new note: ${noteFileName}`)",
    "Notice(\"Failed to save chat as note. Check console for details.\")": "Notice(\"Failed to save chat as note. Check console for details.\")",
    "Notice(\"Vault index refreshed.\")": "Notice(\"Vault index refreshed.\")",
    "Notice(\"Failed to refresh vault index. Check console for details.\")": "Notice(\"Failed to refresh vault index. Check console for details.\")",
    "Notice(\"Cannot regenerate the first message or a user message.\")": "Notice(\"Cannot regenerate the first message or a user message.\")",
    "Notice(\"Failed to regenerate message. Please try again.\")": "Notice(\"Failed to regenerate message. Please try again.\")",
    "Notice(\"No active leaf found.\")": "Notice(\"No active leaf found.\")",
    "Notice(\"Failed to open a markdown view.\")": "Notice(\"Failed to open a markdown view.\")",
    "Notice(\"Message inserted into the active note.\")": "Notice(\"Message inserted into the active note.\")",
    "Notice(\"Please fill in both fields: Title and Prompt.\")": "Notice(\"Please fill in both fields: Title and Prompt.\")",
    "Notice(\"Please fill in necessary fields!\")": "Notice(\"Please fill in necessary fields!\")",
    "Notice(\"Plugin reloaded successfully.\")": "Notice(\"Plugin reloaded successfully.\")",
    "Notice(\"Failed to reload the plugin. Please reload manually.\")": "Notice(\"Failed to reload the plugin. Please reload manually.\")",
    "Notice(\"Custom prompt saved successfully.\")": "Notice(\"Custom prompt saved successfully.\")",
    "Notice(\"Error saving custom prompt. Please check if the title already exists.\")": "Notice(\"Error saving custom prompt. Please check if the title already exists.\")",
    "Notice(\"Please select a prompt title.\")": "Notice(\"Please select a prompt title.\")",
    "Notice(`No prompt found with the title \"${promptTitle}\".`)": "Notice(`No prompt found with the title \"${promptTitle}\".`)",
    "Notice(\"An error occurred.\")": "Notice(\"An error occurred.\")",
    "Notice(`Prompt \"${promptTitle}\" has been deleted.`)": "Notice(`Prompt \"${promptTitle}\" has been deleted.`)",
    "Notice(\"An error occurred while deleting the prompt.\")": "Notice(\"An error occurred while deleting the prompt.\")",
    "Notice(`Prompt \"${title}\" has been updated.`)": "Notice(`Prompt \"${title}\" has been updated.`)",
    "Notice(\"No active file\")": "Notice(\"No active file\")",
    "Notice(\"No chat history found.\")": "Notice(\"No chat history found.\")",
    ".log(\"New LLM chain created.\")": ".log(\"New LLM chain created.\")",
    ".log(\"Failed to parse error response as JSON\")": ".log(\"Failed to parse error response as JSON\")",
    ".log(\"Getting text from response\")": ".log(\"Getting text from response\")",
    ".log(\"Failed to get text from error response\")": ".log(\"Failed to get text from error response\")",
    ".log(\"No previous embedding model found in the database.\")": ".log(\"No previous embedding model found in the database.\")",
    ".log(\"New Vault QA chain with hybrid retriever created for entire vault\")": ".log(\"New Vault QA chain with hybrid retriever created for entire vault\")",
    ".log(\"Message regenerated successfully\")": ".log(\"Message regenerated successfully\")",
    "name: \"Anno Domini\"": "name: \"Anno Domini\"",
    "name: \"Before Christ\"": "name: \"Before Christ\"",
    "name: \"Samsung Internet for Android\"": "name: \"Samsung Internet for Android\"",
    "name: \"NAVER Whale Browser\"": "name: \"NAVER Whale Browser\"",
    "name: \"MZ Browser\"": "name: \"MZ Browser\"",
    "name: \"Yandex Browser\"": "name: \"Yandex Browser\"",
    "name: \"UC Browser\"": "name: \"UC Browser\"",
    "name: \"WeChat\"": "name: \"WeChat\"",
    "name: \"Microsoft Edge\"": "name: \"Microsoft Edge\"",
    "name: \"Amazon Silk\"": "name: \"Amazon Silk\"",
    "name: \"WebOS Browser\"": "name: \"WebOS Browser\"",
    "name: \"Google Search\"": "name: \"Google Search\"",
    "name: \"Android Browser\"": "name: \"Android Browser\"",
    "name: \"Fix grammar and spelling of selection\"": "name: \"Fix grammar and spelling of selection\"",
    "name: \"Summarize selection\"": "name: \"Summarize selection\"",
    "name: \"Generate table of contents for selection\"": "name: \"Generate table of contents for selection\"",
    "name: \"Generate glossary for selection\"": "name: \"Generate glossary for selection\"",
    "name: \"Simplify selection\"": "name: \"Simplify selection\"",
    "name: \"Emojify selection\"": "name: \"Emojify selection\"",
    "name: \"Remove URLs from selection\"": "name: \"Remove URLs from selection\"",
    "name: \"Rewrite selection to a tweet\"": "name: \"Rewrite selection to a tweet\"",
    "name: \"Rewrite selection to a tweet thread\"": "name: \"Rewrite selection to a tweet thread\"",
    "name: \"Make selection shorter\"": "name: \"Make selection shorter\"",
    "name: \"Make selection longer\"": "name: \"Make selection longer\"",
    "name: \"Explain selection like I'm 5\"": "name: \"Explain selection like I'm 5\"",
    "name: \"Rewrite selection to a press release\"": "name: \"Rewrite selection to a press release\"",
    "name: \"Translate selection\"": "name: \"Translate selection\"",
    "name: \"Change tone of selection\"": "name: \"Change tone of selection\"",
    "name: \"English\"": "name: \"English\"",
    "name: \"Chinese\"": "name: \"Chinese\"",
    "name: \"Count words and tokens in selection\"": "name: \"Count words and tokens in selection\"",
    "name: \"Count total tokens in your vault\"": "name: \"Count total tokens in your vault\"",
    "name: \"Model Name\"": "name: \"Model Name\"",
    "name: \"Provider\"": "name: \"Provider\"",
    "name: \"Base URL (optional)\"": "name: \"Base URL (optional)\"",
    "name: \"API Key (optional)\"": "name: \"API Key (optional)\"",
    "name: \"User System Prompt\"": "name: \"User System Prompt\"",
    "name: \"Default Conversation Folder Name\"": "name: \"Default Conversation Folder Name\"",
    "name: \"Default Conversation Tag\"": "name: \"Default Conversation Tag\"",
    "name: \"Autosave Chat\"": "name: \"Autosave Chat\"",
    "name: \"Custom Prompts Folder Name\"": "name: \"Custom Prompts Folder Name\"",
    "name: \"Temperature\"": "name: \"Temperature\"",
    "name: \"Token limit\"": "name: \"Token limit\"",
    "name: \"Conversation turns in context\"": "name: \"Conversation turns in context\"",
    "name: \"Auto-index vault strategy\"": "name: \"Auto-index vault strategy\"",
    "name: \"Max Sources\"": "name: \"Max Sources\"",
    "name: \"Requests per second\"": "name: \"Requests per second\"",
    "name: \"Number of Partitions\"": "name: \"Number of Partitions\"",
    "name: \"Exclusions\"": "name: \"Exclusions\"",
    "name: \"Inclusions\"": "name: \"Inclusions\"",
    "name: \"Enable Obsidian Sync for Copilot index\"": "name: \"Enable Obsidian Sync for Copilot index\"",
    "name: \"Disable index loading on mobile\"": "name: \"Disable index loading on mobile\"",
    "name: \"Toggle Copilot Chat Window\"": "name: \"Toggle Copilot Chat Window\"",
    "name: \"Add custom prompt\"": "name: \"Add custom prompt\"",
    "name: \"Apply custom prompt\"": "name: \"Apply custom prompt\"",
    "name: \"Apply ad-hoc custom prompt\"": "name: \"Apply ad-hoc custom prompt\"",
    "name: \"Delete custom prompt\"": "name: \"Delete custom prompt\"",
    "name: \"Edit custom prompt\"": "name: \"Edit custom prompt\"",
    "name: \"Index (refresh) vault for QA\"": "name: \"Index (refresh) vault for QA\"",
    "name: \"Force re-index vault for QA\"": "name: \"Force re-index vault for QA\"",
    "name: \"Load Copilot Chat conversation\"": "name: \"Load Copilot Chat conversation\"",
    "description: `The name of the model, i.e. ${isEmbeddingModel ? \"text-embedding-3-small\" : \"gpt-4o-mini\"}`": "description: `The name of the model, i.e. ${isEmbeddingModel ? \"text-embedding-3-small\" : \"gpt-4o-mini\"}`",
    "description: \"For 3rd party OpenAI Format endpoints only. Leave blank for other providers.\"": "description: \"For 3rd party OpenAI Format endpoints only. Leave blank for other providers.\"",
    "description: \"API key for the 3rd party provider\"": "description: \"API key for the 3rd party provider\"",
    "description: \"Customize the system prompt for all messages, may result in unexpected behavior!\"": "description: \"Customize the system prompt for all messages, may result in unexpected behavior!\"",
    "description: \"This is your actual model, no need to pass a model name separately.\"": "description: \"This is your actual model, no need to pass a model name separately.\"",
    "description: \"(Optional) For embedding provider Azure OpenAI\"": "description: \"(Optional) For embedding provider Azure OpenAI\"",
    "description: \"The default folder name where chat conversations will be saved. Default is 'copilot-conversations'\"": "description: \"The default folder name where chat conversations will be saved. Default is 'copilot-conversations'\"",
    "description: \"The default tag to be used when saving a conversation. Default is 'ai-conversations'\"": "description: \"The default tag to be used when saving a conversation. Default is 'ai-conversations'\"",
    "description: \"Automatically save the chat when starting a new one or when the plugin reloads\"": "description: \"Automatically save the chat when starting a new one or when the plugin reloads\"",
    "description: \"The default folder name where custom prompts will be saved. Default is 'copilot-custom-prompts'\"": "description: \"The default folder name where custom prompts will be saved. Default is 'copilot-custom-prompts'\"",
    "description: \"Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.\"": "description: \"Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.\"",
    "description: \"The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages.\"": "description: \"The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages.\"",
    "description: \"Decide when you want the vault to be indexed.\"": "description: \"Decide when you want the vault to be indexed.\"",
    "description: \"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step. WARNING: more sources significantly degrades answer quality if the chat model is weak!\"": "description: \"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step. WARNING: more sources significantly degrades answer quality if the chat model is weak!\"",
    "description: \"Default is 10. Decrease if you are rate limited by your embedding provider.\"": "description: \"Default is 10. Decrease if you are rate limited by your embedding provider.\"",
    "description: \"Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!\"": "description: \"Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!\"",
    "description: \"If enabled, the index will be stored in the .obsidian folder and synced with Obsidian Sync by default. If disabled, it will be stored in .copilot-index folder at vault root.\"": "description: \"If enabled, the index will be stored in the .obsidian folder and synced with Obsidian Sync by default. If disabled, it will be stored in .copilot-index folder at vault root.\"",
    "text: \"User Custom Prompt\"": "text: \"User Custom Prompt\"",
    "text: \"Title\"": "text: \"Title\"",
    "text: \"The title of the prompt, must be unique.\"": "text: \"The title of the prompt, must be unique.\"",
    "text: \"Prompt\"": "text: \"Prompt\"",
    "text: \"- {} represents the selected text (not required). \"": "text: \"- {} represents the selected text (not required). \"",
    "text: \"- {[[Note Title]]} represents a note. \"": "text: \"- {[[Note Title]]} represents a note. \"",
    "text: \"- {activeNote} represents the active note. \"": "text: \"- {activeNote} represents the active note. \"",
    "text: \"- {FolderPath} represents a folder of notes. \"": "text: \"- {FolderPath} represents a folder of notes. \"",
    "text: \"- {#tag1, #tag2} represents ALL notes with ANY of the specified tags in their property (an OR operation). \"": "text: \"- {#tag1, #tag2} represents ALL notes with ANY of the specified tags in their property (an OR operation). \"",
    "text: \"Apply custom prompt to selection.\"": "text: \"Apply custom prompt to selection.\"",
    "text: \"awesome chatGPT prompts\"": "text: \"awesome chatGPT prompts\"",
    "text: \"Save\"": "text: \"Save\"",
    "text: \"Additional Settings\"": "text: \"Additional Settings\"",
    ".setName(\"Enable Encryption\")": ".setName(\"Enable Encryption\")",
    ".setName(\"Debug mode\")": ".setName(\"Debug mode\")",
    ".appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\")": ".appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\")",
    ".appendText(\n        \"Save the prompt to the local prompt library. You can then use it with the Copilot command: \"\n      )": ".appendText(\n        \"Save the prompt to the local prompt library. You can then use it with the Copilot command: \"\n      )",
    ".appendText(\" for inspiration.\")": ".appendText(\" for inspiration.\")",
    ".appendText(\"Enable encryption for the API keys.\")": ".appendText(\"Enable encryption for the API keys.\")",
    ".appendText(\"Debug mode will log all API requests and prompts to the console.\")": ".appendText(\"Debug mode will log all API requests and prompts to the console.\")",
    ".setTitle(\"Copilot: Summarize Selection\")": ".setTitle(\"Copilot: Summarize Selection\")",
    "Notice(\"Index does not exist, indexing vault for similarity search...\")": "Notice(\"Index does not exist, indexing vault for similarity search...\")",
    "name: \"Find similar notes to active note\"": "name: \"Find similar notes to active note\"",
    "text: \"Similar Note Blocks to Current Note\"": "text: \"Similar Note Blocks to Current Note\"",
    "Notice(`Indexing completed with errors. Check the console for details.`)": "Notice(`Indexing completed with errors. Check the console for details.`)",
    "Notice(\n          \"An unexpected error occurred while indexing the vault. Please check the console for details.\"\n        )": "Notice(\n          \"An unexpected error occurred while indexing the vault. Please check the console for details.\"\n        )",
    "Notice(\"No documents to remove during garbage collection.\")": "Notice(\"No documents to remove during garbage collection.\")",
    "Notice(`Removed stale documents during garbage collection.`)": "Notice(`Removed stale documents during garbage collection.`)",
    ".log(\"Copilot database initialized successfully.\")": ".log(\"Copilot database initialized successfully.\")",
    ".log(\"Copilot index is disabled on mobile devices.\")": ".log(\"Copilot index is disabled on mobile devices.\")",
    ".log(\"Index loading disabled on mobile device\")": ".log(\"Index loading disabled on mobile device\")",
    ".log(`Config directory does not exist. Creating: ${configDir}`)": ".log(`Config directory does not exist. Creating: ${configDir}`)",
    ".log(`Loaded existing Orama database for ${this.dbPath} from disk.`)": ".log(`Loaded existing Orama database for ${this.dbPath} from disk.`)",
    ".log(\n        `Schema mismatch detected. Rebuilding database with new vector length: ${currentVectorLength}`\n      )": ".log(\n        `Schema mismatch detected. Rebuilding database with new vector length: ${currentVectorLength}`\n      )",
    ".log(`Saved Orama database to ${this.dbPath}.`)": ".log(`Saved Orama database to ${this.dbPath}.`)",
    "description: \"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step.\"": "description: \"Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step.\"",
    "description: \"When specified, ONLY these paths, tags, or note titles will be indexed (comma separated). Files which were previously indexed will remain in the index unless you force re-index. If overlapping with exclusions, exclusions take precedence. Format: folder1, folder1/folder2, #tag1, #tag2, [[note1]], [[note2]]\"": "description: \"When specified, ONLY these paths, tags, or note titles will be indexed (comma separated). Files which were previously indexed will remain in the index unless you force re-index. If overlapping with exclusions, exclusions take precedence. Format: folder1, folder1/folder2, #tag1, #tag2, [[note1]], [[note2]]\"",
    "Notice(\n              `Embedding error: please check your embedding model context length, and consider switching to a model with a larger context length: ${error.message}`\n            )": "Notice(\n              `Embedding error: please check your embedding model context length, and consider switching to a model with a larger context length: ${error.message}`\n            )",
    "Notice(`Setting model: ${modelConfig.modelName}`)": "Notice(`Setting model: ${modelConfig.modelName}`)",
    "Notice(\"Error creating chain:\", error)": "Notice(\"Error creating chain:\", error)",
    "Notice(`LangChain error: ${errorCode}`)": "Notice(`LangChain error: ${errorCode}`)",
    "Notice(\"An error occurred while indexing vault to vector store.\")": "Notice(\"An error occurred while indexing vault to vector store.\")",
    "Notice(\"Detected change in embedding model. Rebuilding vector store from scratch.\")": "Notice(\"Detected change in embedding model. Rebuilding vector store from scratch.\")",
    "Notice(\"Local vector store cleared successfully.\")": "Notice(\"Local vector store cleared successfully.\")",
    "Notice(\"An error occurred while clearing the local vector store.\")": "Notice(\"An error occurred while clearing the local vector store.\")",
    "Notice(\"Local vector store garbage collected successfully.\")": "Notice(\"Local vector store garbage collected successfully.\")",
    "Notice(\"An error occurred while garbage collecting the vector store.\")": "Notice(\"An error occurred while garbage collecting the vector store.\")",
    "Notice(`Error: ${error.msg}. Please check your embedding model settings.`)": "Notice(`Error: ${error.msg}. Please check your embedding model settings.`)",
    "Notice(\n            \"An unexpected error occurred while setting up the QA chain. Please check the console for details.\"\n          )": "Notice(\n            \"An unexpected error occurred while setting up the QA chain. Please check the console for details.\"\n          )",
    "Notice(`${indexedFileCount} vault files indexed to vector store.`)": "Notice(`${indexedFileCount} vault files indexed to vector store.`)",
    "Notice(`${indexedFileCount} vault files re-indexed to vector store.`)": "Notice(`${indexedFileCount} vault files re-indexed to vector store.`)",
    "Notice(\"An error occurred while re-indexing vault to vector store.\")": "Notice(\"An error occurred while re-indexing vault to vector store.\")",
    "Notice(\"An error occurred while saving vault to vector store.\")": "Notice(\"An error occurred while saving vault to vector store.\")",
    ".log(\"clearing chat memory\")": ".log(\"clearing chat memory\")",
    ".log(\"Detected change in embedding model. Rebuilding vector store from scratch.\")": ".log(\"Detected change in embedding model. Rebuilding vector store from scratch.\")",
    ".log(\"Local vector store cleared successfully, new instance created.\")": ".log(\"Local vector store cleared successfully, new instance created.\")",
    ".log(\"Local vector store garbage collected successfully.\")": ".log(\"Local vector store garbage collected successfully.\")",
    ".log(`${indexedFileCount} vault files indexed to vector store.`)": ".log(`${indexedFileCount} vault files indexed to vector store.`)",
    ".log(`${indexedFileCount} vault files re-indexed to vector store.`)": ".log(`${indexedFileCount} vault files re-indexed to vector store.`)",
    "name: \"Clear local vector store\"": "name: \"Clear local vector store\"",
    "name: \"Garbage collect vector store (remove files that no longer exist in vault)\"": "name: \"Garbage collect vector store (remove files that no longer exist in vault)\"",
    "description: \"Warning: It will override the default system prompt for all messages!\"": "description: \"Warning: It will override the default system prompt for all messages!\"",
    "description: \"When enabled, vector store index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved.\"": "description: \"When enabled, vector store index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved.\"",
    "text: \"Powerful AI agents\"": "text: \"Powerful AI agents\"",
    "text: \"keeping all your data stored locally\"": "text: \"keeping all your data stored locally\"",
    "text: \"Stay Updated\"": "text: \"Stay Updated\"",
    "text: \"Alpha access spots are limited. \"": "text: \"Alpha access spots are limited. \"",
    "text: \"prioritize supporters who have donated\"": "text: \"prioritize supporters who have donated\"",
    "text: \"donating now\"": "text: \"donating now\"",
    "text: \"Learn More about Copilot Plus mode and join the waitlist here:\"": "text: \"Learn More about Copilot Plus mode and join the waitlist here:\"",
    "name: \"Toggle Copilot Chat Window in Note Area\"": "name: \"Toggle Copilot Chat Window in Note Area\"",
    "), \"(Set with Copilot command: \"": "), \"(Set with Copilot command: \"",
    "), \"set note context \"": "), \"set note context \"",
    "), \"Default is active note)\"": "), \"Default is active note)\"",
    "), \"If errors occur, please re-enter the API key, save and reload the plugin to see if it resolves the issue.\"": "), \"If errors occur, please re-enter the API key, save and reload the plugin to see if it resolves the issue.\"",
    "), \"Your API key is stored locally and is only used to make requests to Google's services.\"": "), \"Your API key is stored locally and is only used to make requests to Google's services.\"",
    "), \"Your API key is stored locally and is only used to make requests to Anthropic's services.\"": "), \"Your API key is stored locally and is only used to make requests to Anthropic's services.\"",
    "), \"Your API key is stored locally and is only used to make requests to Groq's services.\"": "), \"Your API key is stored locally and is only used to make requests to Groq's services.\"",
    "), \" to generate. Default is 1000.\"": "), \" to generate. Default is 1000.\"",
    "), \": Notes are never indexed to the vector store unless users run the command \"": "), \": Notes are never indexed to the vector store unless users run the command \"",
    "), \": Vault index is refreshed on plugin load/reload.\"": "), \": Vault index is refreshed on plugin load/reload.\"",
    "), \": Vault index is refreshed when switching to Vault QA mode.\"": "), \": Vault index is refreshed when switching to Vault QA mode.\"",
    "), 'By \"refreshed\", it means the vault index is not rebuilt from scratch but rather updated incrementally with new/modified notes since the last index. If you need a complete rebuild, run the commands \"Clear vector store\" and \"Force re-index for QA\" manually. This helps reduce costs when using paid embedding models.'": "), 'By \"refreshed\", it means the vault index is not rebuilt from scratch but rather updated incrementally with new/modified notes since the last index. If you need a complete rebuild, run the commands \"Clear vector store\" and \"Force re-index for QA\" manually. This helps reduce costs when using paid embedding models.'",
    "), \"Beware of the cost if you are using a paid embedding model and have a large vault! You can run Copilot command \"": "), \"Beware of the cost if you are using a paid embedding model and have a large vault! You can run Copilot command \"",
    "), \" and refer to your selected embedding model pricing to estimate indexing costs.\"": "), \" and refer to your selected embedding model pricing to estimate indexing costs.\"",
    "Error(\"Private accessor was defined without a getter\"": "Error(\"Private accessor was defined without a getter\"",
    "Error(\"Cannot read private member from an object whose class did not declare it\"": "Error(\"Cannot read private member from an object whose class did not declare it\"",
    "Error(\"Private method is not writable\"": "Error(\"Private method is not writable\"",
    "Error(\"Private accessor was defined without a setter\"": "Error(\"Private accessor was defined without a setter\"",
    "Error(\"Cannot write private member to an object whose class did not declare it\"": "Error(\"Cannot write private member to an object whose class did not declare it\"",
    "Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`": "Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`",
    "Error(`Not a ZodError: ${value}`": "Error(`Not a ZodError: ${value}`",
    "Error(\"Validation failed but no issues detected.\"": "Error(\"Validation failed but no issues detected.\"",
    "Error(\"Synchronous parse encountered promise.\"": "Error(\"Synchronous parse encountered promise.\"",
    "Error(`Internal ZodObject error: invalid unknownKeys value.`": "Error(`Internal ZodObject error: invalid unknownKeys value.`",
    "Error(`A discriminator value for key \\`": "Error(`A discriminator value for key \\`",
    "Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`": "Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`",
    "Error(\"You must pass an array of schemas to z.tuple([ ... ])\"": "Error(\"You must pass an array of schemas to z.tuple([ ... ])\"",
    "Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\"": "Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\"",
    "Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`": "Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`",
    "Error(\"RetryOperation timeout occurred\"": "Error(\"RetryOperation timeout occurred\"",
    "Error(\"minTimeout is greater than maxTimeout\"": "Error(\"minTimeout is greater than maxTimeout\"",
    "Error(`Non-error was thrown: \"${error}\". You should only throw errors.`": "Error(`Non-error was thrown: \"${error}\". You should only throw errors.`",
    "Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\"": "Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\"",
    "Error(\"Expected a string\"": "Error(\"Expected a string\"",
    "Error(\"Expected the input to be `string | string[]`\"": "Error(\"Expected the input to be `string | string[]`\"",
    "Error(\"No LLM run to end.\"": "Error(\"No LLM run to end.\"",
    "Error(\"No chain run to end.\"": "Error(\"No chain run to end.\"",
    "Error(\"No tool run to end\"": "Error(\"No tool run to end\"",
    "Error(\"No retriever run to end\"": "Error(\"No retriever run to end\"",
    "Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`": "Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`",
    "Error(\"The listener must be a function\"": "Error(\"The listener must be a function\"",
    "Error(\"Expected `milliseconds` to be a positive number\"": "Error(\"Expected `milliseconds` to be a positive number\"",
    "Error(`Expected \\`": "Error(`Expected \\`",
    "Error(`Invalid UUID: ${str2}`": "Error(`Invalid UUID: ${str2}`",
    "Error(`LANGCHAIN_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`": "Error(`LANGCHAIN_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`",
    "Error(`Failed to ${operation}: ${response.status} ${response.statusText} ${body}`": "Error(`Failed to ${operation}: ${response.status} ${response.statusText} ${body}`",
    "Error(\"Number of items to pop off may not be less than 1.\"": "Error(\"Number of items to pop off may not be less than 1.\"",
    "Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`": "Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`",
    "Error(\"Failed to retrieve server info.\"": "Error(\"Failed to retrieve server info.\"",
    "Error(`Run ${runId} has no app_path`": "Error(`Run ${runId} has no app_path`",
    "Error(\"Must provide either runId or run\"": "Error(\"Must provide either runId or run\"",
    "Error(`Child run ${childRun.id} has no parent`": "Error(`Child run ${childRun.id} has no parent`",
    "Error(\"Invalid response from server\"": "Error(\"Invalid response from server\"",
    "Error(\"Either datasetId or datasetName must be given\"": "Error(\"Either datasetId or datasetName must be given\"",
    "Error(`Failed to create session ${projectName}: ${response.status} ${response.statusText}`": "Error(`Failed to create session ${projectName}: ${response.status} ${response.statusText}`",
    "Error(`Failed to update project ${projectId}: ${response.status} ${response.statusText}`": "Error(`Failed to update project ${projectId}: ${response.status} ${response.statusText}`",
    "Error(\"Must provide either projectName or projectId, not both\"": "Error(\"Must provide either projectName or projectId, not both\"",
    "Error(\"Must provide projectName or projectId\"": "Error(\"Must provide projectName or projectId\"",
    "Error(`Project[id=${projectId}, name=${projectName}] not found`": "Error(`Project[id=${projectId}, name=${projectName}] not found`",
    "Error(\"No projects found to resolve tenant.\"": "Error(\"No projects found to resolve tenant.\"",
    "Error(`Dataset ${fileName} already exists`": "Error(`Dataset ${fileName} already exists`",
    "Error(`Failed to upload CSV: ${response.status} ${response.statusText}`": "Error(`Failed to upload CSV: ${response.status} ${response.statusText}`",
    "Error(`Dataset ${name2} already exists`": "Error(`Dataset ${name2} already exists`",
    "Error(`Failed to create dataset ${response.status} ${response.statusText}`": "Error(`Failed to create dataset ${response.status} ${response.statusText}`",
    "Error(\"Must provide either datasetName or datasetId, not both\"": "Error(\"Must provide either datasetName or datasetId, not both\"",
    "Error(\"Must provide datasetName or datasetId\"": "Error(\"Must provide datasetName or datasetId\"",
    "Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`": "Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`",
    "Error(\"Must provide either datasetName or datasetId\"": "Error(\"Must provide either datasetName or datasetId\"",
    "Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`": "Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`",
    "Error(`Failed to create example: ${response.status} ${response.statusText}`": "Error(`Failed to create example: ${response.status} ${response.statusText}`",
    "Error(`Failed to create examples: ${response.status} ${response.statusText}`": "Error(`Failed to create examples: ${response.status} ${response.statusText}`",
    "Error(\"Must provide a datasetName or datasetId\"": "Error(\"Must provide a datasetName or datasetId\"",
    "Error(`Failed to update example ${exampleId}: ${response.status} ${response.statusText}`": "Error(`Failed to update example ${exampleId}: ${response.status} ${response.statusText}`",
    "Error(`Invalid run type: ${typeof run}`": "Error(`Invalid run type: ${typeof run}`",
    "Error(\"One of runId or projectId must be provided\"": "Error(\"One of runId or projectId must be provided\"",
    "Error(\"Only one of runId or projectId can be provided\"": "Error(\"Only one of runId or projectId can be provided\"",
    "Error(`field[${key}] already exists in the message chunk, but with a different type.`": "Error(`field[${key}] already exists in the message chunk, but with a different type.`",
    "Error(\"Malformed tool call chunk args.\"": "Error(\"Malformed tool call chunk args.\"",
    "Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`": "Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`",
    "Error(`Got unsupported message type: ${m3._getType()}`": "Error(`Got unsupported message type: ${m3._getType()}`",
    "Error(\"Unknown message type.\"": "Error(\"Unknown message type.\"",
    "error(`Error in handler ${handler.constructor.name}, handleText: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleText: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleRetriever`": "error(`Error in handler ${handler.constructor.name}, handleRetriever`",
    "error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`": "error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`",
    "error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err2}`": "error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err2}`",
    "error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleChainError: ${err2}`": "error(`Error in handler ${handler.constructor.name}, handleChainError: ${err2}`",
    "error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleToolError: ${err2}`": "error(`Error in handler ${handler.constructor.name}, handleToolError: ${err2}`",
    "error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`",
    "error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`": "error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`",
    "Error(\"Test operation failed\", \"TEST_OPERATION_FAILED\"": "Error(\"Test operation failed\", \"TEST_OPERATION_FAILED\"",
    "Error(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\"": "Error(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\"",
    "Error(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\"": "Error(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\"",
    "Error(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\"": "Error(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\"",
    "Error(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\"": "Error(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\"",
    "Error(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\"": "Error(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\"",
    "Error(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\"": "Error(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\"",
    "Error(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\"": "Error(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\"",
    "Error(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\"": "Error(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\"",
    "Error('Operation `path` property must start with \"/\"'": "Error('Operation `path` property must start with \"/\"'",
    "Error(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\"": "Error(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\"",
    "Error(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\"": "Error(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\"",
    "Error(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\"": "Error(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\"",
    "Error(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\"": "Error(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\"",
    "Error(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\"": "Error(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\"",
    "Error(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\"": "Error(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\"",
    "null, \"Default\"": "null, \"Default\"",
    "null, \"Model\"": "null, \"Model\"",
    "null, \"Provider\"": "null, \"Provider\"",
    "null, \"Enabled\"": "null, \"Enabled\"",
    "null, \"Delete\"": "null, \"Delete\"",
    "null, \"Advanced Settings\"": "null, \"Advanced Settings\"",
    "null, \"API Settings\"": "null, \"API Settings\"",
    "null, \"All your API keys are stored locally.\"": "null, \"All your API keys are stored locally.\"",
    "null, \"You can find your API key at\", \" \"": "null, \"You can find your API key at\", \" \"",
    "null, \"If you are a new user, try \"": "null, \"If you are a new user, try \"",
    "null, \" to see if you have correct API access first.\"": "null, \" to see if you have correct API access first.\"",
    "null, \"If you have Google Cloud, you can get Gemini API key\", \" \"": "null, \"If you have Google Cloud, you can get Gemini API key\", \" \"",
    "null, \"If you have Anthropic API access, you can get the API key\", \" \"": "null, \"If you have Anthropic API access, you can get the API key\", \" \"",
    "null, \"You can get your OpenRouterAI key\", \" \"": "null, \"You can get your OpenRouterAI key\", \" \"",
    "null, \"If you have Groq API access, you can get the API key\", \" \"": "null, \"If you have Groq API access, you can get the API key\", \" \"",
    "null, \"Get your free Cohere API key\", \" \"": "null, \"Get your free Cohere API key\", \" \"",
    "null, \"General Settings\"": "null, \"General Settings\"",
    "null, \"Please be mindful of the number of tokens and context conversation turns you set here, as they will affect the cost of your API requests.\"": "null, \"Please be mindful of the number of tokens and context conversation turns you set here, as they will affect the cost of your API requests.\"",
    "null, \"The maximum number of \"": "null, \"The maximum number of \"",
    "null, \"output tokens\"": "null, \"output tokens\"",
    "null, \"This number plus the length of your prompt (input tokens) must be smaller than the context window of the model.\"": "null, \"This number plus the length of your prompt (input tokens) must be smaller than the context window of the model.\"",
    "null, \"QA Settings\"": "null, \"QA Settings\"",
    "null, \"QA mode relies a \"": "null, \"QA mode relies a \"",
    "null, \"Long Note QA vs. Vault QA (BETA)\"": "null, \"Long Note QA vs. Vault QA (BETA)\"",
    "null, \"Long Note QA mode uses the Active Note as context. Vault QA (BETA) uses your entire vault as context. Please ask questions as specific as possible, avoid vague questions to get better results.\"": "null, \"Long Note QA mode uses the Active Note as context. Vault QA (BETA) uses your entire vault as context. Please ask questions as specific as possible, avoid vague questions to get better results.\"",
    "null, \"Local Embedding Model\"": "null, \"Local Embedding Model\"",
    "null, \"Check the\", \" \"": "null, \"Check the\", \" \"",
    "null, \"Embedding Models\"": "null, \"Embedding Models\"",
    "null, \"Auto-Index Strategy\"": "null, \"Auto-Index Strategy\"",
    "null, \"When you switch to \"": "null, \"When you switch to \"",
    "null, \"Long Note QA\"": "null, \"Long Note QA\"",
    "null, \"Vault QA\"": "null, \"Vault QA\"",
    "null, \"based on the auto-index strategy you select below\"": "null, \"based on the auto-index strategy you select below\"",
    "null, \"Index vault for QA\"": "null, \"Index vault for QA\"",
    "null, \"Refresh Index\"": "null, \"Refresh Index\"",
    "null, \"ON STARTUP\"": "null, \"ON STARTUP\"",
    "null, \"ON MODE SWITCH (Recommended)\"": "null, \"ON MODE SWITCH (Recommended)\"",
    "null, \"Count total tokens in your vault\"": "null, \"Count total tokens in your vault\"",
    "null, \"Copilot Settings\"": "null, \"Copilot Settings\"",
    "}, \"Model Selection\"": "}, \"Model Selection\"",
    "}, \"New Chat\"": "}, \"New Chat\"",
    "}, \"Save as Note\"": "}, \"Save as Note\"",
    "}, \"Chat\"": "}, \"Chat\"",
    "}, \"Long Note QA\"": "}, \"Long Note QA\"",
    "}, \"Vault QA (BETA)\"": "}, \"Vault QA (BETA)\"",
    "}, \"Mode Selection\"": "}, \"Mode Selection\"",
    "}, \"Send Note(s) to Prompt\"": "}, \"Send Note(s) to Prompt\"",
    "}, \"Refresh Index\"": "}, \"Refresh Index\"",
    "}, \"Delete\"": "}, \"Delete\"",
    "}, \"Add Custom Model \"": "}, \"Add Custom Model \"",
    "}, \"Add Model\"": "}, \"Add Model\"",
    "}, \"Make sure you have access to the model and the correct API key.\"": "}, \"Make sure you have access to the model and the correct API key.\"",
    "}, \"Command Settings \"": "}, \"Command Settings \"",
    "}, \"Vault QA is in BETA and may not be stable. If you have issues please report in the github repo.\"": "}, \"Vault QA is in BETA and may not be stable. If you have issues please report in the github repo.\"",
    "}, \"local copilot\"": "}, \"local copilot\"",
    "}, \"If you are using a paid embedding provider, beware of costs for large vaults!\"": "}, \"If you are using a paid embedding provider, beware of costs for large vaults!\"",
    "}, \"Save and Reload\"": "}, \"Save and Reload\"",
    "}, \"Reset to Default Settings\"": "}, \"Reset to Default Settings\"",
    "}, \"Please Save and Reload the plugin when you change any setting below!\"": "}, \"Please Save and Reload the plugin when you change any setting below!\"",
    "description: \"Default is 3 (Recommended). Increase if you want more sources from your notes. A higher number can lead to irrelevant sources and lower quality responses, it also fills up the context window faster.\"": "description: \"Default is 3 (Recommended). Increase if you want more sources from your notes. A higher number can lead to irrelevant sources and lower quality responses, it also fills up the context window faster.\"",
    "console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleRetriever`": "console.error(`Error in handler ${handler.constructor.name}, handleRetriever`",
    "console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`": "console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err2}`": "console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err2}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err2}`": "console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err2}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err2}`": "console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err2}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`",
    "console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`": "console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`",
    "console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`": "console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`",
    "console.error(`Failed to construct URL with ${expression}`": "console.error(`Failed to construct URL with ${expression}`",
    "console.error(`Could not parse message into JSON:`": "console.error(`Could not parse message into JSON:`",
    "console.error(`From chunk:`": "console.error(`From chunk:`",
    "console.error(\"Error parsing YAML frontmatter:\"": "console.error(\"Error parsing YAML frontmatter:\"",
    "console.error(\"Error parsing function arguments\"": "console.error(\"Error parsing function arguments\"",
    "console.error(`No embedding model found for: ${embeddingModelKey}`": "console.error(`No embedding model found for: ${embeddingModelKey}`",
    "console.error(`API key is not provided for the embedding model: ${embeddingModelKey}`": "console.error(`API key is not provided for the embedding model: ${embeddingModelKey}`",
    "console.error(`Error creating embedding model: ${embeddingModelKey}`": "console.error(`Error creating embedding model: ${embeddingModelKey}`",
    "console.error(`No embedding model found for key: ${modelKey}`": "console.error(`No embedding model found for key: ${modelKey}`",
    "console.error(\"EmbeddingManager could not determine model name!\"": "console.error(\"EmbeddingManager could not determine model name!\"",
    "console.error(\"Error storing vectors in VectorDB:\"": "console.error(\"Error storing vectors in VectorDB:\"",
    "console.error(\"Error getting note files from VectorDB:\"": "console.error(\"Error getting note files from VectorDB:\"",
    "console.error(\"Error removing file from VectorDB:\"": "console.error(\"Error removing file from VectorDB:\"",
    "console.error(\"Error getting newest file mtime from VectorDB:\"": "console.error(\"Error getting newest file mtime from VectorDB:\"",
    "console.error(\"Error checking last embedding model from VectorDB:\"": "console.error(\"Error checking last embedding model from VectorDB:\"",
    "console.error(`An error occurred while creating dataset ${finalDatasetName}. You should delete it manually.`": "console.error(`An error occurred while creating dataset ${finalDatasetName}. You should delete it manually.`",
    "console.error(\"Resetting default model. No model configuration found for: \"": "console.error(\"Resetting default model. No model configuration found for: \"",
    "console.error(\"createChainWithNewModel failed: \"": "console.error(\"createChainWithNewModel failed: \"",
    "console.error(\"Error creating chain:\"": "console.error(\"Error creating chain:\"",
    "console.error(\"setChain failed: No chat model set.\"": "console.error(\"setChain failed: No chat model set.\"",
    "console.error(\"Error getting embeddings API. Please check your settings.\"": "console.error(\"Error getting embeddings API. Please check your settings.\"",
    "console.error(\"Error creating vector store.\"": "console.error(\"Error creating vector store.\"",
    "console.error(\"Chain type not supported:\"": "console.error(\"Chain type not supported:\"",
    "console.error(\"App instance is not available.\"": "console.error(\"App instance is not available.\"",
    "console.error(\"No active note found.\"": "console.error(\"No active note found.\"",
    "console.error(\"Model request failed:\"": "console.error(\"Model request failed:\"",
    "console.error(\"Error saving chat as note:\"": "console.error(\"Error saving chat as note:\"",
    "console.error(\"No note content found.\"": "console.error(\"No note content found.\"",
    "console.error(\"Error regenerating message:\"": "console.error(\"Error regenerating message:\"",
    "console.error(\"Error reloading plugin:\"": "console.error(\"Error reloading plugin:\"",
    "console.error(\"Error clearing the local vector store:\"": "console.error(\"Error clearing the local vector store:\"",
    "console.error(\"Error indexing vault to vector store:\"": "console.error(\"Error indexing vault to vector store:\"",
    "console.error(\"Error re-indexing vault to vector store:\"": "console.error(\"Error re-indexing vault to vector store:\"",
    "console.error(\"Error saving vault to vector store:\"": "console.error(\"Error saving vault to vector store:\"",
    "console.error(\"Error dumping custom prompts:\"": "console.error(\"Error dumping custom prompts:\"",
    "console.error(\"Error clearing vector store for reindexing:\"": "console.error(\"Error clearing vector store for reindexing:\"",
    "console.error(\"Error indexing file:\"": "console.error(\"Error indexing file:\"",
    "console.error(\"Error counting tokens: \"": "console.error(\"Error counting tokens: \"",
    "console.log(\"Using RetryOperation.try() is deprecated\")": "console.log(\"Using RetryOperation.try() is deprecated\")",
    "console.log(\"Using RetryOperation.start() is deprecated\")": "console.log(\"Using RetryOperation.start() is deprecated\")",
    "console.log(\"New LLM chain created.\")": "console.log(\"New LLM chain created.\")",
    "console.log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")": "console.log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")",
    "console.log(\"Failed to parse error response as JSON\")": "console.log(\"Failed to parse error response as JSON\")",
    "console.log(\"Getting text from response\")": "console.log(\"Getting text from response\")",
    "console.log(\"Failed to get text from error response\")": "console.log(\"Failed to get text from error response\")",
    "console.log(\"clearing chat memory\")": "console.log(\"clearing chat memory\")",
    "console.log(\"User stopping generation...\")": "console.log(\"User stopping generation...\")",
    "console.log(\"Message regenerated successfully\")": "console.log(\"Message regenerated successfully\")",
    "console.log(\"Local vector store cleared successfully, new instance created.\")": "console.log(\"Local vector store cleared successfully, new instance created.\")",
    "console.log(\"Local vector store garbage collected successfully, new instance created.\")": "console.log(\"Local vector store garbage collected successfully, new instance created.\")",
    "console.log(\"Detected change in embedding model. Rebuild vector store from scratch.\")": "console.log(\"Detected change in embedding model. Rebuild vector store from scratch.\")",
    "console.log(\"Indexing Errors:\", errors.join(\"\\n\")": "console.log(\"Indexing Errors:\", errors.join(\"\\n\")",
    "title: \"Copy\"": "title: \"Copy\"",
    "title: \"Edit\"": "title: \"Edit\"",
    "title: \"Insert to note at cursor\"": "title: \"Insert to note at cursor\"",
    "title: \"Regenerate\"": "title: \"Regenerate\"",
    "title: \"OpenAI API Key\"": "title: \"OpenAI API Key\"",
    "title: \"OpenAI Organization ID (optional)\"": "title: \"OpenAI Organization ID (optional)\"",
    "title: \"Google API Settings\"": "title: \"Google API Settings\"",
    "title: \"Google API Key\"": "title: \"Google API Key\"",
    "title: \"Anthropic API Settings\"": "title: \"Anthropic API Settings\"",
    "title: \"Anthropic API Key\"": "title: \"Anthropic API Key\"",
    "title: \"OpenRouter.ai API Settings\"": "title: \"OpenRouter.ai API Settings\"",
    "title: \"OpenRouter AI API Key\"": "title: \"OpenRouter AI API Key\"",
    "title: \"Azure OpenAI API Settings\"": "title: \"Azure OpenAI API Settings\"",
    "title: \"Azure OpenAI API Key\"": "title: \"Azure OpenAI API Key\"",
    "title: \"Azure OpenAI API Instance Name\"": "title: \"Azure OpenAI API Instance Name\"",
    "title: \"Azure OpenAI API Deployment Name\"": "title: \"Azure OpenAI API Deployment Name\"",
    "title: \"Azure OpenAI API Version\"": "title: \"Azure OpenAI API Version\"",
    "title: \"Azure OpenAI API Embedding Deployment Name\"": "title: \"Azure OpenAI API Embedding Deployment Name\"",
    "title: \"Groq API Settings\"": "title: \"Groq API Settings\"",
    "title: \"Groq API Key\"": "title: \"Groq API Key\"",
    "title: \"Cohere API Settings\"": "title: \"Cohere API Settings\"",
    "title: \"Cohere API Key\"": "title: \"Cohere API Key\"",
    "placeholder: \"Ask anything. [[ for notes. / for custom prompts.\"": "placeholder: \"Ask anything. [[ for notes. / for custom prompts.\"",
    "placeholder: \"Enter /folderPath, [[note title]] separated by commas\"": "placeholder: \"Enter /folderPath, [[note title]] separated by commas\"",
    "placeholder: \"Enter model name\"": "placeholder: \"Enter model name\"",
    "placeholder: \"Enter API key\"": "placeholder: \"Enter API key\"",
    "placeholder: \"Enter OpenAI API Key\"": "placeholder: \"Enter OpenAI API Key\"",
    "placeholder: \"Enter OpenAI Organization ID if applicable\"": "placeholder: \"Enter OpenAI Organization ID if applicable\"",
    "placeholder: \"Enter Google API Key\"": "placeholder: \"Enter Google API Key\"",
    "placeholder: \"Enter Anthropic API Key\"": "placeholder: \"Enter Anthropic API Key\"",
    "placeholder: \"Enter OpenRouter AI API Key\"": "placeholder: \"Enter OpenRouter AI API Key\"",
    "placeholder: \"Enter Azure OpenAI API Key\"": "placeholder: \"Enter Azure OpenAI API Key\"",
    "placeholder: \"Enter Azure OpenAI API Instance Name\"": "placeholder: \"Enter Azure OpenAI API Instance Name\"",
    "placeholder: \"Enter Azure OpenAI API Deployment Name\"": "placeholder: \"Enter Azure OpenAI API Deployment Name\"",
    "placeholder: \"Enter Azure OpenAI API Version\"": "placeholder: \"Enter Azure OpenAI API Version\"",
    "placeholder: \"Enter Azure OpenAI API Embedding Deployment Name\"": "placeholder: \"Enter Azure OpenAI API Embedding Deployment Name\"",
    "placeholder: \"Enter Groq API Key\"": "placeholder: \"Enter Groq API Key\"",
    "placeholder: \"Enter Cohere API Key\"": "placeholder: \"Enter Cohere API Key\"",
    "placeholderText = \"Please enter your custom ad-hoc prompt here, press enter to send.\"": "placeholderText = \"Please enter your custom ad-hoc prompt here, press enter to send.\"",
    "Notice(`Setting model: ${modelConfig.modelName}`": "Notice(`Setting model: ${modelConfig.modelName}`",
    "Notice(`Error creating model: ${modelKey}`": "Notice(`Error creating model: ${modelKey}`",
    "Notice(\"Error creating chain:\"": "Notice(\"Error creating chain:\"",
    "Notice(\"No note content provided\"": "Notice(\"No note content provided\"",
    "Notice(`LangChain error: ${errorCode}`": "Notice(`LangChain error: ${errorCode}`",
    "Notice(\"Please select a language.\"": "Notice(\"Please select a language.\"",
    "Notice(\"Please select a tone.\"": "Notice(\"Please select a tone.\"",
    "Notice(`Total tokens in your vault: ${totalTokens}`": "Notice(`Total tokens in your vault: ${totalTokens}`",
    "Notice(\"Please fill in both fields: Title and Prompt.\"": "Notice(\"Please fill in both fields: Title and Prompt.\"",
    "Notice(\"No active note found.\"": "Notice(\"No active note found.\"",
    "Notice(`Warning: No valid notes found for the provided path '${variableName}'.`": "Notice(`Warning: No valid notes found for the provided path '${variableName}'.`",
    "Notice(\"Model request failed:\"": "Notice(\"Model request failed:\"",
    "Notice(`Chat saved as note in folder: ${defaultSaveFolder}.`": "Notice(`Chat saved as note in folder: ${defaultSaveFolder}.`",
    "Notice(\"No valid Chat context provided. Defaulting to the active note.\"": "Notice(\"No valid Chat context provided. Defaulting to the active note.\"",
    "Notice(\"No note content found.\"": "Notice(\"No note content found.\"",
    "Notice(\"Vault index refreshed.\"": "Notice(\"Vault index refreshed.\"",
    "Notice(\"Cannot regenerate the first message or a user message.\"": "Notice(\"Cannot regenerate the first message or a user message.\"",
    "Notice(\"Failed to regenerate message. Please try again.\"": "Notice(\"Failed to regenerate message. Please try again.\"",
    "Notice(\"No active leaf found.\"": "Notice(\"No active leaf found.\"",
    "Notice(\"Failed to open a markdown view.\"": "Notice(\"Failed to open a markdown view.\"",
    "Notice(\"Message inserted into the active note.\"": "Notice(\"Message inserted into the active note.\"",
    "Notice(\"Please fill in necessary fields!\"": "Notice(\"Please fill in necessary fields!\"",
    "Notice(\"Plugin reloaded successfully.\"": "Notice(\"Plugin reloaded successfully.\"",
    "Notice(\"Failed to reload the plugin. Please reload manually.\"": "Notice(\"Failed to reload the plugin. Please reload manually.\"",
    "Notice(\"Custom prompt saved successfully.\"": "Notice(\"Custom prompt saved successfully.\"",
    "Notice(\"Error saving custom prompt. Please check if the title already exists.\"": "Notice(\"Error saving custom prompt. Please check if the title already exists.\"",
    "Notice(\"Please select a prompt title.\"": "Notice(\"Please select a prompt title.\"",
    "Notice(`No prompt found with the title \"${promptTitle}\".`": "Notice(`No prompt found with the title \"${promptTitle}\".`",
    "Notice(\"An error occurred.\"": "Notice(\"An error occurred.\"",
    "Notice(`Prompt \"${promptTitle}\" has been deleted.`": "Notice(`Prompt \"${promptTitle}\" has been deleted.`",
    "Notice(\"An error occurred while deleting the prompt.\"": "Notice(\"An error occurred while deleting the prompt.\"",
    "Notice(`Prompt \"${title}\" has been updated.`": "Notice(`Prompt \"${title}\" has been updated.`",
    "Notice(\"Local vector store cleared successfully.\"": "Notice(\"Local vector store cleared successfully.\"",
    "Notice(\"An error occurred while clearing the local vector store.\"": "Notice(\"An error occurred while clearing the local vector store.\"",
    "Notice(\"Local vector store garbage collected successfully.\"": "Notice(\"Local vector store garbage collected successfully.\"",
    "Notice(`${indexedFileCount} vault files indexed to vector store.`": "Notice(`${indexedFileCount} vault files indexed to vector store.`",
    "Notice(\"An error occurred while indexing vault to vector store.\"": "Notice(\"An error occurred while indexing vault to vector store.\"",
    "Notice(\"An error occurred while re-indexing vault to vector store.\"": "Notice(\"An error occurred while re-indexing vault to vector store.\"",
    "Notice(\"An error occurred while saving vault to vector store.\"": "Notice(\"An error occurred while saving vault to vector store.\"",
    "Notice(`Custom prompts dumped to ${folder} folder`": "Notice(`Custom prompts dumped to ${folder} folder`",
    "Notice(\"Error dumping custom prompts. Check console for details.\"": "Notice(\"Error dumping custom prompts. Check console for details.\"",
    "Notice(\"Embedding instance not found.\"": "Notice(\"Embedding instance not found.\"",
    "Notice(\"Detected change in embedding model. Rebuild vector store from scratch.\"": "Notice(\"Detected change in embedding model. Rebuild vector store from scratch.\"",
    "Notice(\"Error clearing vector store for reindexing.\"": "Notice(\"Error clearing vector store for reindexing.\"",
    "Notice(\"Copilot vault index is up-to-date.\"": "Notice(\"Copilot vault index is up-to-date.\"",
    "Notice(`Indexing completed with errors. Check the console for details.`": "Notice(`Indexing completed with errors. Check the console for details.`",
    "Notice(\"No chat history found.\"": "Notice(\"No chat history found.\"",
    "appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\"": "appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\"",
    "appendText(\"Check out the \"": "appendText(\"Check out the \"",
    "appendText(\" for inspiration.\"": "appendText(\" for inspiration.\"",
    "appendText(\"All notes under the path will be sent to the prompt when the \"": "appendText(\"All notes under the path will be sent to the prompt when the \"",
    "appendText(\" button is clicked in Chat mode. \"": "appendText(\" button is clicked in Chat mode. \"",
    "appendText(\"If none provided, \"": "appendText(\"If none provided, \"",
    "appendText(\"All notes under the paths will be excluded from indexing\"": "appendText(\"All notes under the paths will be excluded from indexing\"",
    "appendText(\"Enable encryption for the API keys.\"": "appendText(\"Enable encryption for the API keys.\"",
    "appendText(\"Debug mode will log all API requests and prompts to the console.\"": "appendText(\"Debug mode will log all API requests and prompts to the console.\"",
    "text: \"Filter by Folder Path\"": "text: \"Filter by Folder Path\"",
    "text: \"Send Note(s) to Prompt\"": "text: \"Send Note(s) to Prompt\"",
    "text: \"default context is the active note\"": "text: \"default context is the active note\"",
    "text: \"Filter by Tags\"": "text: \"Filter by Tags\"",
    "text: \"Only tags in note property are used, tags in note content are not used.\"": "text: \"Only tags in note property are used, tags in note content are not used.\"",
    "text: \"All notes under the path above are further filtered by the specified tags. If no path is provided, only tags are used. Multiple tags should be separated by commas. \"": "text: \"All notes under the path above are further filtered by the specified tags. If no path is provided, only tags are used. Multiple tags should be separated by commas. \"",
    "text: \"Tags function as an OR filter, \"": "text: \"Tags function as an OR filter, \"",
    "any note that matches one of the tags will be sent to the prompt when button is clicked in Chat mode": "any note that matches one of the tags will be sent to the prompt when button is clicked in Chat mode",
    "text: \"Submit\"": "text: \"Submit\"",
    "text: \"Exclude by Folder Path or Note Title\"": "text: \"Exclude by Folder Path or Note Title\"",
    "msg = `The value of \"${str2}\" is out of range.`": "msg = `The value of \"${str2}\" is out of range.`",
    "msg = \"Invalid space after '<'.\"": "msg = \"Invalid space after '<'.\"",
    "msg = \"Tag '\"": "msg = \"Tag '\"",
    "Msg = \"Chat model is not initialized properly, check your API key in Copilot setting and make sure you have API access.\"": "Msg = \"Chat model is not initialized properly, check your API key in Copilot setting and make sure you have API access.\"",
    "Msg = \"You do not have access to this model or the model does not exist, please check with your API provider.\"": "Msg = \"You do not have access to this model or the model does not exist, please check with your API provider.\"",
    "Msg = \"Failed to load file, embedding API is not set correctly, please check your settings.\"": "Msg = \"Failed to load file, embedding API is not set correctly, please check your settings.\"",
    "msg = \"Filter function threw: \"": "msg = \"Filter function threw: \"",
    "msg = \"Failed to open indexedDB, are you in private browsing mode?\"": "msg = \"Failed to open indexedDB, are you in private browsing mode?\"",
    "return `${name2} is outside of buffer bounds`": "return `${name2} is outside of buffer bounds`",
    "return \"Attempt to access memory outside buffer bounds\"": "return \"Attempt to access memory outside buffer bounds\"",
    "return `The \"${name2}\" argument must be of type number. Received type ${typeof actual}`": "return `The \"${name2}\" argument must be of type number. Received type ${typeof actual}`",
    "return `Expected ${input} to be returned from the \"${name2}\" function but got ${type}.`": "return `Expected ${input} to be returned from the \"${name2}\" function but got ${type}.`",
    "return `${msg} must be specified`": "return `${msg} must be specified`",
    "return `The value of \"${str2}\" is out of range. It must be ${range}. Received ${received}`": "return `The value of \"${str2}\" is out of range. It must be ${range}. Received ${received}`",
    "return `Basic ${token}`": "return `Basic ${token}`",
    "return `Bearer ${token}`": "return `Bearer ${token}`",
    "return `Expected ${expectedType}. Received ${getTypeAsString(value)}.`": "return `Expected ${expectedType}. Received ${getTypeAsString(value)}.`",
    "return `Bearer ${bearer}`": "return `Bearer ${bearer}`",
    "return \"Default\"": "return \"Default\"",
    "return \"clipboardData\"": "return \"clipboardData\"",
    "return `Please read the notes below and be ready to answer questions about them. `": "return `Please read the notes below and be ready to answer questions about them. `",
    "return `Please follow the instructions closely step by step and rewrite the content to a thread. 1. Each paragraph must be under 240 characters. 2. The starting line is \\`": "return `Please follow the instructions closely step by step and rewrite the content to a thread. 1. Each paragraph must be under 240 characters. 2. The starting line is \\`",
    "return `${status} status code (no body)`": "return `${status} status code (no body)`",
    "return \"(no status code or body)\"": "return \"(no status code or body)\"",
    "return `other:${arch}`": "return `other:${arch}`",
    "return `Other:${platform}`": "return `Other:${platform}`",
    "return \"Copilot Chat\"": "return \"Copilot Chat\"",
    "return \"Copilot failed to decrypt API keys!\"": "return \"Copilot failed to decrypt API keys!\"",
    "name: `${continuous ? \"continuous \" : \"\"}replication from ${info.db_name}`": "name: `${continuous ? \"continuous \" : \"\"}replication from ${info.db_name}`",
    "name: \"Set note context for Chat mode\"": "name: \"Set note context for Chat mode\"",
    "name: \"Set exclusion for Vault QA mode\"": "name: \"Set exclusion for Vault QA mode\"",
    "name: \"Dump custom prompts to markdown files\"": "name: \"Dump custom prompts to markdown files\"",
    "message: `OK Feel free to ask me questions about [[${noteName}]].": "message: `OK Feel free to ask me questions about [[${noteName}]].",
    "Please note that this is a retrieval-based QA for notes longer than the model context window. Specific questions are encouraged. For generic questions like 'give me a summary', 'brainstorm based on the content', Chat mode with *Send Note to Prompt* button used with a *long context model* is a more suitable choice.": "Please note that this is a retrieval-based QA for notes longer than the model context window. Specific questions are encouraged. For generic questions like 'give me a summary', 'brainstorm based on the content', Chat mode with *Send Note to Prompt* button used with a *long context model* is a more suitable choice.",
    "OK I've read these notes. Feel free to ask related questions, such as 'give me a summary of these notes in bullet points', 'what key questions does these notes answer', etc. ": "OK I've read these notes. Feel free to ask related questions, such as 'give me a summary of these notes in bullet points', 'what key questions does these notes answer', etc. ",
    "Please read the notes below and be ready to answer questions about them. If there's no information about a certain topic, just say the note does not mention it. The content of the note is between": "Please read the notes below and be ready to answer questions about them. If there's no information about a certain topic, just say the note does not mention it. The content of the note is between",
    "Please fix the grammar and spelling of the following text and return it without any other changes:": "Please fix the grammar and spelling of the following text and return it without any other changes:",
    "Summarize the following text into bullet points and return it without any other changes. Identify the input language, and return the summary in the same language. If the input is English, return the summary in English. Otherwise, return in the same language as the input. Return ONLY the summary, DO NOT return the name of the language:": "Summarize the following text into bullet points and return it without any other changes. Identify the input language, and return the summary in the same language. If the input is English, return the summary in English. Otherwise, return in the same language as the input. Return ONLY the summary, DO NOT return the name of the language:",
    "Please generate a table of contents for the following text and return it without any other changes. Output in the same language as the source, do not output English if it is not English:": "Please generate a table of contents for the following text and return it without any other changes. Output in the same language as the source, do not output English if it is not English:",
    "Please generate a glossary for the following text and return it without any other changes. Output in the same language as the source, do not output English if it is not English:": "Please generate a glossary for the following text and return it without any other changes. Output in the same language as the source, do not output English if it is not English:",
    "Please simplify the following text so that a 6th-grader can understand. Output in the same language as the source, do not output English if it is not English:": "Please simplify the following text so that a 6th-grader can understand. Output in the same language as the source, do not output English if it is not English:",
    "Please insert emojis to the following content without changing the text.Insert at as many places as possible, but don't have any 2 emojis together. The original text must be returned.": "Please insert emojis to the following content without changing the text.Insert at as many places as possible, but don't have any 2 emojis together. The original text must be returned.",
    "Please remove all URLs from the following text and return it without any other changes:": "Please remove all URLs from the following text and return it without any other changes:",
    "Please rewrite the following content to under 280 characters using simple sentences. Output in the same language as the source, do not output English if it is not English. Please follow the instruction strictly. Content:": "Please rewrite the following content to under 280 characters using simple sentences. Output in the same language as the source, do not output English if it is not English. Please follow the instruction strictly. Content:",
    ", and the ending line is": ", and the ending line is",
    "3. You must use": "3. You must use",
    "to separate each paragraph! Then return it without any other changes. 4. Make it as engaging as possible.5. Output in the same language as the source, do not output English if it is not English.": "to separate each paragraph! Then return it without any other changes. 4. Make it as engaging as possible.5. Output in the same language as the source, do not output English if it is not English.",
    "The original content:": "The original content:",
    "Please rewrite the following text to make it half as long while keeping the meaning as much as possible. Output in the same language as the source, do not output English if it is not English:": "Please rewrite the following text to make it half as long while keeping the meaning as much as possible. Output in the same language as the source, do not output English if it is not English:",
    "Please rewrite the following text to make it twice as long while keeping the meaning as much as possible. Output in the same language as the source, do not output English if it is not English:": "Please rewrite the following text to make it twice as long while keeping the meaning as much as possible. Output in the same language as the source, do not output English if it is not English:",
    "Please explain the following text like I'm 5 years old. Output in the same language as the source, do not output English if it is not English:": "Please explain the following text like I'm 5 years old. Output in the same language as the source, do not output English if it is not English:",
    "Please rewrite the following text to make it sound like a press release. Output in the same language as the source, do not output English if it is not English:": "Please rewrite the following text to make it sound like a press release. Output in the same language as the source, do not output English if it is not English:",
    "Please translate the following text to": "Please translate the following text to",
    "Please change the tone of the following text to ${tone}. Output in the same language as the source, do not output English if it is not English:": "Please change the tone of the following text to ${tone}. Output in the same language as the source, do not output English if it is not English:",
    "OK Feel free to ask me questions about your vault:": "OK Feel free to ask me questions about your vault:",
    "If you have *NEVER* as your auto-index strategy, you must click the *Refresh Index* button below, or run Copilot command: *Index vault for QA* first before you proceed!": "If you have *NEVER* as your auto-index strategy, you must click the *Refresh Index* button below, or run Copilot command: *Index vault for QA* first before you proceed!",
    "Default Mode": "Default Mode",
    "setup guide to setup Ollama's local embedding model (requires Ollama v0.1.26 or above).": "setup guide to setup Ollama's local embedding model (requires Ollama v0.1.26 or above).",
    "mode, your vault is indexed": "mode, your vault is indexed",
    "explicitly, or hit the ": "explicitly, or hit the ",
    " button.": " button.",
    "name: \"Indexing Exclusions\",": "name: \"Indexing Exclusions\",",
    "description: \"Comma separated list of paths, tags, note titles or file extension, e.g. folder1, folder1/folder2, #tag1, #tag2, [[note1]], [[note2]], *.jpg, *.excallidraw.md etc, to be excluded from the indexing process. NOTE: Tags must be in the note properties, not the note content. Files which were previously indexed will remain in the index unless you force re-index.\"": "description: \"Comma separated list of paths, tags, note titles or file extension, e.g. folder1, folder1/folder2, #tag1, #tag2, [[note1]], [[note2]], *.jpg, *.excallidraw.md etc, to be excluded from the indexing process. NOTE: Tags must be in the note properties, not the note content. Files which were previously indexed will remain in the index unless you force re-index.\"",
    ".createElement(\"h2\", null, \"Open Plugin In\")": ".createElement(\"h2\", null, \"Open Plugin In\")",
    ".createElement(\"option\", { value: \"view\" /* VIEW */ }, \"Sidebar View\")": ".createElement(\"option\", { value: \"view\" /* VIEW */ }, \"Sidebar View\")",
    ".createElement(\"option\", { value: \"editor\" /* EDITOR */ }, \"Editor\")": ".createElement(\"option\", { value: \"editor\" /* EDITOR */ }, \"Editor\")",
    ".createElement(\"b\", null, \"Suggested Prompts\")": ".createElement(\"b\", null, \"Suggested Prompts\")",
    "\"NEVER\" /* NEVER */": "\"NEVER\" /* NEVER */",
    "\"ON STARTUP\" /* ON_STARTUP */": "\"ON STARTUP\" /* ON_STARTUP */",
    "\"ON MODE SWITCH\" /* ON_MODE_SWITCH */": "\"ON MODE SWITCH\" /* ON_MODE_SWITCH */",
    "console.log(\"New Vault QA chain with hybrid retriever created for entire vault\")": "console.log(\"New Vault QA chain with hybrid retriever created for entire vault\")",
    "\"Copilot Plus brings powerful AI agent capabilities to Obsidian. Alpha access is limited to sponsors and early supporters. Learn more at\",": "\"Copilot Plus brings powerful AI agent capabilities to Obsidian. Alpha access is limited to sponsors and early supporters. Learn more at\",",
    "title: \"License Key\",": "title: \"License Key\",",
    "description: \"Enter your Copilot Plus license key\",": "description: \"Enter your Copilot Plus license key\",",
    "placeholder: \"Enter your license key\"": "placeholder: \"Enter your license key\"",
    "name: \"Suggested Prompts\",": "name: \"Suggested Prompts\",",
    "description: \"Show suggested prompts in the chat view\",": "description: \"Show suggested prompts in the chat view\",",
    "\"QA mode relies on a \"": "\"QA mode relies on a \"",
    "\"local\"), \" vector index.\"": "\"local\"), \" vector index.\"",
    "'By \"refreshed\", it means the vault index is not rebuilt from scratch but rather updated incrementally with new/modified notes since the last index. If you need a complete rebuild, run the commands \"Clear Copilot index\" and \"Force re-index for QA\" manually. This helps reduce costs when using paid embedding models.'": "'By \"refreshed\", it means the vault index is not rebuilt from scratch but rather updated incrementally with new/modified notes since the last index. If you need a complete rebuild, run the commands \"Clear Copilot index\" and \"Force re-index for QA\" manually. This helps reduce costs when using paid embedding models.'",
    "\"New Chat\"": "\"New Chat\"",
    "\"(Unsaved history will be lost)\"": "\"(Unsaved history will be lost)\"",
    "\"Refresh Index\"": "\"Refresh Index\"",
    "description: \"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\",": "description: \"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\",",
    "\"Refresh Index for Vault\"": "\"Refresh Index for Vault\"",
    "\": Notes are never indexed to the Copilot index unless users run the command \",": "\": Notes are never indexed to the Copilot index unless users run the command \",",
    "`Detected vector length: ${sampleEmbedding.length} for model: ${EmbeddingManager.getModelName(embeddingInstance)}`": "`Detected vector length: ${sampleEmbedding.length} for model: ${EmbeddingManager.getModelName(embeddingInstance)}`",
    "\"Chain is not initialized properly, re-initializing chain: \",": "\"Chain is not initialized properly, re-initializing chain: \",",
    "\"Copilot index is not loaded. Please check your settings.\"": "\"Copilot index is not loaded. Please check your settings.\"",
    "\"Verify the connection before adding the model to ensure it's properly configured and accessible.\"": "\"Verify the connection before adding the model to ensure it's properly configured and accessible.\"",
    "Verify Connection": "Verify Connection",
    "Add Model": "Add Model",
    "Notice(\n        \"Copilot Plus license key not found. Please enter your license key in the settings.\"\n      )": "Notice(\n        \"Copilot Plus license key not found. Please enter your license key in the settings.\"\n      )",
    "Notice(error.message)": "Notice(error.message)",
    "Notice(\"An error occurred while executing the tool. Check console for details.\")": "Notice(\"An error occurred while executing the tool. Check console for details.\")",
    "Notice(\n          \"Connection successful, but requires CORS to be enabled. Please enable CORS for this model once you add it above.\"\n        )": "Notice(\n          \"Connection successful, but requires CORS to be enabled. Please enable CORS for this model once you add it above.\"\n        )",
    "Notice(\"Failed to initialize Copilot database. Some features may be limited.\")": "Notice(\"Failed to initialize Copilot database. Some features may be limited.\")",
    "Notice(\"Local Copilot index cleared successfully.\")": "Notice(\"Local Copilot index cleared successfully.\")",
    "Notice(\"An error occurred while clearing the local Copilot index.\")": "Notice(\"An error occurred while clearing the local Copilot index.\")",
    "Notice(\"New embedding model detected. Rebuilding Copilot index from scratch.\")": "Notice(\"New embedding model detected. Rebuilding Copilot index from scratch.\")",
    "Notice();\n      const allChunks = await this.prepareAllChunks(files)": "Notice();\n      const allChunks = await this.prepareAllChunks(files)",
    "Notice(\"No valid content to index.\")": "Notice(\"No valid content to index.\")",
    "Notice() {\n    const frag = document.createDocumentFragment()": "Notice() {\n    const frag = document.createDocumentFragment()",
    "Notice(frag, 0)": "Notice(frag, 0)",
    "Notice(\"No files to index with current filters\")": "Notice(\"No files to index with current filters\")",
    "Notice(`Error indexing file ${file.path}. Check console for details.`)": "Notice(`Error indexing file ${file.path}. Check console for details.`)",
    "Notice(`Indexing cancelled`)": "Notice(`Indexing cancelled`)",
    "Notice(`Indexing completed with ${errors2.length} errors. Check console for details.`)": "Notice(`Indexing completed with ${errors2.length} errors. Check console for details.`)",
    "Notice(\"Indexing completed successfully!\")": "Notice(\"Indexing completed successfully!\")",
    "Notice(\"Fatal error during indexing. Check console for details.\")": "Notice(\"Fatal error during indexing. Check console for details.\")",
    "Notice(errorMessage)": "Notice(errorMessage)",
    "Notice(`Pomodoro timer (${interval})": "Notice(`Pomodoro timer (${interval})",
    "Notice(errorMsg)": "Notice(errorMsg)",
    "Notice(`Reindexed ${activeFile.name}`)": "Notice(`Reindexed ${activeFile.name}`)",
    "Notice(\"No valid note paths found. Use format: - [[Note Name]]\")": "Notice(\"No valid note paths found. Use format: - [[Note Name]]\")",
    "Notice(\"Error searching database. Check console for details.\")": "Notice(\"Error searching database. Check console for details.\")",
    "Notice(\"Model connection verified successfully!\")": "Notice(\"Model connection verified successfully!\")",
    "Notice(`Model verification failed: ${error.message}`)": "Notice(`Model verification failed: ${error.message}`)",
    "Notice(err.message)": "Notice(err.message)",
    "Notice(`${removedDocs} documents removed from Copilot index.`)": "Notice(`${removedDocs} documents removed from Copilot index.`)",
    "Notice(\"An error occurred while garbage collecting the Copilot index.\")": "Notice(\"An error occurred while garbage collecting the Copilot index.\")",
    "Notice(`${indexedFileCount} vault files indexed to Copilot index.`)": "Notice(`${indexedFileCount} vault files indexed to Copilot index.`)",
    "Notice(\"An error occurred while indexing vault to Copilot index.\")": "Notice(\"An error occurred while indexing vault to Copilot index.\")",
    "Notice(`${indexedFileCount} vault files re-indexed to Copilot index.`)": "Notice(`${indexedFileCount} vault files re-indexed to Copilot index.`)",
    "Notice(\"An error occurred while re-indexing vault to Copilot index.\")": "Notice(\"An error occurred while re-indexing vault to Copilot index.\")",
    "Notice(\"No files found to list.\")": "Notice(\"No files found to list.\")",
    "Notice(`Listed ${indexedFiles.length} indexed files`)": "Notice(`Listed ${indexedFiles.length} indexed files`)",
    "Notice(\"Failed to list indexed files.\")": "Notice(\"Failed to list indexed files.\")",
    "Notice(`Successfully removed ${filePaths.length} files from the index.`)": "Notice(`Successfully removed ${filePaths.length} files from the index.`)",
    "Notice(\"An error occurred while removing files from the index.\")": "Notice(\"An error occurred while removing files from the index.\")",
    "Notice(\n          `A newer version (${latestVersion})": "Notice(\n          `A newer version (${latestVersion})",
    ".log(\"Using RetryOperation.try()": ".log(\"Using RetryOperation.try()",
    ".log(\"Using RetryOperation.start()": ".log(\"Using RetryOperation.start()",
    ".log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`)": ".log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`)",
    ".log(`${wrap(color.green, \"[chain/start]\")": ".log(`${wrap(color.green, \"[chain/start]\")",
    ".log(`${wrap(color.cyan, \"[chain/end]\")": ".log(`${wrap(color.cyan, \"[chain/end]\")",
    ".log(`${wrap(color.red, \"[chain/error]\")": ".log(`${wrap(color.red, \"[chain/error]\")",
    ".log(`${wrap(color.green, \"[llm/start]\")": ".log(`${wrap(color.green, \"[llm/start]\")",
    ".log(`${wrap(color.cyan, \"[llm/end]\")": ".log(`${wrap(color.cyan, \"[llm/end]\")",
    ".log(`${wrap(color.red, \"[llm/error]\")": ".log(`${wrap(color.red, \"[llm/error]\")",
    ".log(`${wrap(color.green, \"[tool/start]\")": ".log(`${wrap(color.green, \"[tool/start]\")",
    ".log(`${wrap(color.cyan, \"[tool/end]\")": ".log(`${wrap(color.cyan, \"[tool/end]\")",
    ".log(`${wrap(color.red, \"[tool/error]\")": ".log(`${wrap(color.red, \"[tool/error]\")",
    ".log(`${wrap(color.green, \"[retriever/start]\")": ".log(`${wrap(color.green, \"[retriever/start]\")",
    ".log(`${wrap(color.cyan, \"[retriever/end]\")": ".log(`${wrap(color.cyan, \"[retriever/end]\")",
    ".log(`${wrap(color.red, \"[retriever/error]\")": ".log(`${wrap(color.red, \"[retriever/error]\")",
    ".log(`${wrap(color.blue, \"[agent/action]\")": ".log(`${wrap(color.blue, \"[agent/action]\")",
    ".log(value)": ".log(value)",
    ".log(stack.identify()": ".log(stack.identify()",
    "glog() {\n        return function()": "glog() {\n        return function()",
    "glog(\"stream\", (fn)": "glog(\"stream\", (fn)",
    ".log(await response.json()": ".log(await response.json()",
    "(log(asUint)": "(log(asUint)",
    "alog(boundary, errorInfo)": "alog(boundary, errorInfo)",
    ".log(\"Input Question: \", input.question)": ".log(\"Input Question: \", input.question)",
    ".log(\"Formatted Chat History: \", formattedChatHistory)": ".log(\"Formatted Chat History: \", formattedChatHistory)",
    ".log(\"Standalone Question: \", output)": ".log(\"Standalone Question: \", output)",
    ".log(`==== ${endpoint} request ====:`, data)": ".log(`==== ${endpoint} request ====:`, data)",
    ".log(1 + (docsCount - matchingCount + 0.5)": ".log(1 + (docsCount - matchingCount + 0.5)",
    ".log(chunk)": ".log(chunk)",
    ".log(response)": ".log(response)",
    ".log(item)": ".log(item)",
    ".log(`OpenAI:DEBUG:${action}`, ...args)": ".log(`OpenAI:DEBUG:${action}`, ...args)",
    ".log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")": ".log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\")",
    ".log(\"First ping attempt failed, trying with CORS...\")": ".log(\"First ping attempt failed, trying with CORS...\")",
    ".log(`Total documents to distribute: ${documents.length}`)": ".log(`Total documents to distribute: ${documents.length}`)",
    ".log(`Partition ${i3 + 1}: ${docs.length} documents`)": ".log(`Partition ${i3 + 1}: ${docs.length} documents`)",
    ".log(`Total documents distributed: ${totalDistributed}`)": ".log(`Total documents distributed: ${totalDistributed}`)",
    ".log(`Starting save with ${rawDocs.length ?? 0} total documents`)": ".log(`Starting save with ${rawDocs.length ?? 0} total documents`)",
    ".log(\"Saved empty database state\")": ".log(\"Saved empty database state\")",
    ".log(`Saved partition ${partitionIndex + 1}/${numPartitions}`)": ".log(`Saved partition ${partitionIndex + 1}/${numPartitions}`)",
    ".log(\"Saved all partitions\")": ".log(\"Saved all partitions\")",
    ".log(\n      `Detected vector length: ${sampleEmbedding.length} for model: ${EmbeddingManager.getModelName(embeddingInstance)": ".log(\n      `Detected vector length: ${sampleEmbedding.length} for model: ${EmbeddingManager.getModelName(embeddingInstance)",
    ".log(\"Path change detected, reinitializing database...\")": ".log(\"Path change detected, reinitializing database...\")",
    ".log(\"Database reinitialized with new path:\", newPath)": ".log(\"Database reinitialized with new path:\", newPath)",
    ".log(\"Loaded existing chunked Orama database from disk.\")": ".log(\"Loaded existing chunked Orama database from disk.\")",
    ".log(\"Failed to load existing database, creating new one:\", error)": ".log(\"Failed to load existing database, creating new one:\", error)",
    ".log(\"Orama database saved successfully at:\", this.dbPath)": ".log(\"Orama database saved successfully at:\", this.dbPath)",
    ".log(\"Local Copilot index cleared successfully, new instance created.\")": ".log(\"Local Copilot index cleared successfully, new instance created.\")",
    ".log(`Deleted document from local Copilot index: ${filePath}`)": ".log(`Deleted document from local Copilot index: ${filePath}`)",
    ".log(\"Created directory:\", baseDir)": ".log(\"Created directory:\", baseDir)",
    ".log(\n      `Created new Orama database for ${this.dbPath}. Embedding model: ${EmbeddingManager.getModelName(embeddingInstance)": ".log(\n      `Created new Orama database for ${this.dbPath}. Embedding model: ${EmbeddingManager.getModelName(embeddingInstance)",
    ".log(\n            `${existingDoc.hits.length > 0 ? \"Updated\" : \"Inserted\"} document ${docToSave.id} in partition ${partition5}`\n          )": ".log(\n            `${existingDoc.hits.length > 0 ? \"Updated\" : \"Inserted\"} document ${docToSave.id} in partition ${partition5}`\n          )",
    ".log(\"Detected change in embedding model. Rebuilding Copilot index from scratch.\")": ".log(\"Detected change in embedding model. Rebuilding Copilot index from scratch.\")",
    ".log(\n        \"Copilot index: Docs to remove during garbage collection:\",\n        Array.from(new Set(docsToRemove.map((doc)": ".log(\n        \"Copilot index: Docs to remove during garbage collection:\",\n        Array.from(new Set(docsToRemove.map((doc)",
    ".log(\"Copilot Plus: Triggering reindex for file \", file.path)": ".log(\"Copilot Plus: Triggering reindex for file \", file.path)",
    ".log(\"Copilot Plus: Initializing event listeners\")": ".log(\"Copilot Plus: Initializing event listeners\")",
    ".log(\"Copilot index checkpoint save completed.\")": ".log(\"Copilot index checkpoint save completed.\")",
    ".log(\"Copilot index final save completed.\")": ".log(\"Copilot index final save completed.\")",
    ".log(`Files to index: ${filesToIndex.size}`)": ".log(`Files to index: ${filesToIndex.size}`)",
    ".log(`Previously indexed: ${indexedFilePaths.size}`)": ".log(`Previously indexed: ${indexedFilePaths.size}`)",
    ".log(`Empty files skipped: ${emptyFiles.size}`)": ".log(`Empty files skipped: ${emptyFiles.size}`)",
    ".log(\"No files to index after filter change, stopping indexing\")": ".log(\"No files to index after filter change, stopping indexing\")",
    ".log(\"Total files to index:\", this.state.totalFilesToIndex)": ".log(\"Total files to index:\", this.state.totalFilesToIndex)",
    ".log(\"Files to index:\", files)": ".log(\"Files to index:\", files)",
    ".log(`Reindexed file: ${file.path}`)": ".log(`Reindexed file: ${file.path}`)",
    ".log(\"Indexing cancelled by user\")": ".log(\"Indexing cancelled by user\")",
    ".log(`Anthropic:DEBUG:${action}`, ...args)": ".log(`Anthropic:DEBUG:${action}`, ...args)",
    ".log(`Groq:DEBUG:${action}`, ...args)": ".log(`Groq:DEBUG:${action}`, ...args)",
    ".log(\"Failed to reinitialize model due to missing API key\")": ".log(\"Failed to reinitialize model due to missing API key\")",
    ".log(\"*** HYBRID RETRIEVER DEBUG INFO: ***\")": ".log(\"*** HYBRID RETRIEVER DEBUG INFO: ***\")",
    ".log(\"\\nOriginal Query: \", query)": ".log(\"\\nOriginal Query: \", query)",
    ".log(\"Rewritten Query: \", rewrittenQuery)": ".log(\"Rewritten Query: \", rewrittenQuery)",
    ".log(\"\\nExplicit Chunks: \", explicitChunks)": ".log(\"\\nExplicit Chunks: \", explicitChunks)",
    ".log(\"Orama Chunks: \", oramaChunks)": ".log(\"Orama Chunks: \", oramaChunks)",
    ".log(\"Combined Chunks: \", combinedChunks)": ".log(\"Combined Chunks: \", combinedChunks)",
    ".log(\"Max Orama Score: \", maxOramaScore)": ".log(\"Max Orama Score: \", maxOramaScore)",
    ".log(\"Reranked Chunks: \", finalChunks)": ".log(\"Reranked Chunks: \", finalChunks)",
    ".log(\"No reranking applied.\")": ".log(\"No reranking applied.\")",
    ".log(\"Tag only query detected, setting textWeight to 1 and vectorWeight to 0.\")": ".log(\"Tag only query detected, setting textWeight to 1 and vectorWeight to 0.\")",
    ".log(\n          \"==== Daily note date range: ====\",\n          dateRange[0],\n          dateRange[dateRange.length - 1]\n        )": ".log(\n          \"==== Daily note date range: ====\",\n          dateRange[0],\n          dateRange[dateRange.length - 1]\n        )",
    ".log(\"==== Modified and created time range: ====\", startTime, endTime)": ".log(\"==== Modified and created time range: ====\", startTime, endTime)",
    ".log(`${this.constructor.name} merged ${left} and ${right} into ${mergedResult}`)": ".log(`${this.constructor.name} merged ${left} and ${right} into ${mergedResult}`)",
    ".log(`Extracting timezone: '${timezoneAbbr}' into: ${extractedTimezoneOffset} for: ${result.start}`)": ".log(`Extracting timezone: '${timezoneAbbr}' into: ${extractedTimezoneOffset} for: ${result.start}`)",
    ".log(`Extracting timezone: '${match2[0]}' into : ${result}`)": ".log(`Extracting timezone: '${match2[0]}' into : ${result}`)",
    ".log(`${this.constructor.name} remove ${removed} by ${kept}`)": ".log(`${this.constructor.name} remove ${removed} by ${kept}`)",
    ".log(`${this.constructor.name} adjusted ${result} time result (${result.start})": ".log(`${this.constructor.name} adjusted ${result} time result (${result.start})",
    ".log(`${this.constructor.name} adjusted ${result} weekday (${result.start})": ".log(`${this.constructor.name} adjusted ${result} weekday (${result.start})",
    ".log(`${this.constructor.name} adjusted ${result} weekday (${result.end})": ".log(`${this.constructor.name} adjusted ${result} weekday (${result.end})",
    ".log(`${this.constructor.name} adjusted ${result} year (${result.start})": ".log(`${this.constructor.name} adjusted ${result} year (${result.start})",
    ".log(`${this.constructor.name} adjusted ${result} month (${result.start})": ".log(`${this.constructor.name} adjusted ${result} month (${result.start})",
    ".log(`Removing unlikely result '${result.text}'`)": ".log(`Removing unlikely result '${result.text}'`)",
    ".log(`Removing invalid result: ${result} (${result.start})": ".log(`Removing invalid result: ${result} (${result.start})",
    ".log(`Removing invalid result: ${result} (${result.end})": ".log(`Removing invalid result: ${result} (${result.end})",
    ".log(`(Strict)": ".log(`(Strict)",
    ".log(`Extracting year: '${match2[0]}' into : ${result}`)": ".log(`Extracting year: '${match2[0]}' into : ${result}`)",
    ".log(`${parser.constructor.name} extracted (at index=${parsedIndex})": ".log(`${parser.constructor.name} extracted (at index=${parsedIndex})",
    ".log(\n        \"==== Chat Memory ====\\n\",\n        this.chainManager.memoryManager.getMemory()": ".log(\n        \"==== Chat Memory ====\\n\",\n        this.chainManager.memoryManager.getMemory()",
    ".log(\"==== Final AI Response ====\\n\", fullAIResponse)": ".log(\"==== Final AI Response ====\\n\", fullAIResponse)",
    ".log(\"==== Final Request to AI ====\\n\", messages)": ".log(\"==== Final Request to AI ====\\n\", messages)",
    ".log(\"==== Step 1: Analyzing intent ====\")": ".log(\"==== Step 1: Analyzing intent ====\")",
    ".log(\"==== Step 2: Processing local search results ====\")": ".log(\"==== Step 2: Processing local search results ====\")",
    ".log(\"==== Step 3: Condensing Question ====\")": ".log(\"==== Step 3: Condensing Question ====\")",
    ".log(\"Condensed standalone question: \", standaloneQuestion)": ".log(\"Condensed standalone question: \", standaloneQuestion)",
    ".log(\"==== Step 4: Preparing context ====\")": ".log(\"==== Step 4: Preparing context ====\")",
    ".log(context)": ".log(context)",
    ".log(\"==== Step 5: Invoking QA Chain ====\")": ".log(\"==== Step 5: Invoking QA Chain ====\")",
    ".log(\"No local search results. Using standard LLM Chain.\")": ".log(\"No local search results. Using standard LLM Chain.\")",
    ".log(\"Enhanced user message:\", enhancedUserMessage)": ".log(\"Enhanced user message:\", enhancedUserMessage)",
    ".log(`==== Step 2: Calling tool: ${toolCall.tool.name} ====`)": ".log(`==== Step 2: Calling tool: ${toolCall.tool.name} ====`)",
    ".log(\"Memory initialized with context turns:\", chatContextTurns)": ".log(\"Memory initialized with context turns:\", chatContextTurns)",
    ".log(\"Clearing chat memory\")": ".log(\"Clearing chat memory\")",
    ".log(\"Loaded memory variables:\", variables)": ".log(\"Loaded memory variables:\", variables)",
    ".log(\"Saving to memory - Input:\", input, \"Output:\", output)": ".log(\"Saving to memory - Input:\", input, \"Output:\", output)",
    ".log(`Setting model to ${newModelKey}`)": ".log(`Setting model to ${newModelKey}`)",
    ".log(\"modelKey:\", newModelKey)": ".log(\"modelKey:\", newModelKey)",
    ".log(\"Set chain:\", \"vault_qa\" /* VAULT_QA_CHAIN */)": ".log(\"Set chain:\", \"vault_qa\" /* VAULT_QA_CHAIN */)",
    ".log(\"==== Step 0: Initial user message ====\\n\", userMessage)": ".log(\"==== Step 0: Initial user message ====\\n\", userMessage)",
    ".log(\"No hits found for note:\", notePath)": ".log(\"No hits found for note:\", notePath)",
    ".log(\"No embedding found for note:\", notePath)": ".log(\"No embedding found for note:\", notePath)",
    ".log(\"No embeddings found for note:\", filePath)": ".log(\"No embeddings found for note:\", filePath)",
    ".log(`stopping generation..., reason: ${reason}`)": ".log(`stopping generation..., reason: ${reason}`)",
    ".log(`${indexedFileCount} vault files indexed to Copilot index.`)": ".log(`${indexedFileCount} vault files indexed to Copilot index.`)",
    ".log(`${indexedFileCount} vault files re-indexed to Copilot index.`)": ".log(`${indexedFileCount} vault files re-indexed to Copilot index.`)",
    ".log(\"Copilot plugin unloaded\")": ".log(\"Copilot plugin unloaded\")",
    " error() {\n            if (this._error)": " error() {\n            if (this._error)",
    " error() {\n                  return new ZodError(newCtx.common.issues)": " error() {\n                  return new ZodError(newCtx.common.issues)",
    " error() {\n                return new ZodError(newCtx.common.issues)": " error() {\n                return new ZodError(newCtx.common.issues)",
    ".error(\"SEMVER\", ...args)": ".error(\"SEMVER\", ...args)",
    "_error();\n    init_fetch()": "_error();\n    init_fetch()",
    ".error(`An error occurred while creating dataset ${finalDatasetName}. You should delete it manually.`)": ".error(`An error occurred while creating dataset ${finalDatasetName}. You should delete it manually.`)",
    ".error(`Error in postRun for run ${this.id}:`, error)": ".error(`Error in postRun for run ${this.id}:`, error)",
    ".error(`Error in patchRun for run ${this.id}`, error)": ".error(`Error in patchRun for run ${this.id}`, error)",
    " error(format)": " error(format)",
    " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)": " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)",
    " error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)",
    " error(\"Received an unexpected object in getComponentNameFromType()": " error(\"Received an unexpected object in getComponentNameFromType()",
    " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
    " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
    " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()": " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()",
    " error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\")": " error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\")",
    " error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")",
    " error(\"lazy: Expected the result of a dynamic import()": " error(\"lazy: Expected the result of a dynamic import()",
    " error(\"React.lazy(...)": " error(\"React.lazy(...)",
    " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)": " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)",
    " error(\"forwardRef requires a render function but was given %s.\", render3 === null ? \"null\" : typeof render3)": " error(\"forwardRef requires a render function but was given %s.\", render3 === null ? \"null\" : typeof render3)",
    " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render3.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")": " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render3.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")",
    " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")": " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")",
    " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)": " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)",
    " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)": " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)",
    " error(\"Calling useContext(Context.Consumer)": " error(\"Calling useContext(Context.Consumer)",
    " error(\"Calling useContext(Context.Provider)": " error(\"Calling useContext(Context.Provider)",
    " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")": " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")",
    " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)": " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)",
    " error(\"Failed %s type: %s\", location2, error$1.message)": " error(\"Failed %s type: %s\", location2, error$1.message)",
    " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)": " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)",
    " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")": " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")",
    " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")": " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")",
    " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key)": " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key)",
    " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")": " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")",
    " error(\"React.createElement: type is invalid -- expected a string (for built-in components)": " error(\"React.createElement: type is invalid -- expected a string (for built-in components)",
    " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()": " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()",
    " error(\"You called act(async ()": " error(\"You called act(async ()",
    " error(\"You seem to have overlapping act()": " error(\"You seem to have overlapping act()",
    ".error(\n        \"This browser lacks typed array (Uint8Array)": ".error(\n        \"This browser lacks typed array (Uint8Array)",
    ".error(`Unable to parse ${JSON.stringify(value)": ".error(`Unable to parse ${JSON.stringify(value)",
    ".error(`Failed to construct URL with ${expression}`, error)": ".error(`Failed to construct URL with ${expression}`, error)",
    " error() {\n      }\n    };\n  }\n})": " error() {\n      }\n    };\n  }\n})",
    "nerror(er)": "nerror(er)",
    "_error(error)": "_error(error)",
    ".error(`Could not parse message into JSON:`, sse.data)": ".error(`Could not parse message into JSON:`, sse.data)",
    ".error(`From chunk:`, sse.raw)": ".error(`From chunk:`, sse.raw)",
    ".error(err)": ".error(err)",
    " error(\"React.jsx: type is invalid -- expected a string (for built-in components)": " error(\"React.jsx: type is invalid -- expected a string (for built-in components)",
    " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")": " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")",
    " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)": " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)",
    " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)": " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)",
    " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
    " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
    " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)",
    " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)": " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)",
    " error(\"Invalid attribute name: `%s`\", attributeName)": " error(\"Invalid attribute name: `%s`\", attributeName)",
    " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)": " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)",
    " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")",
    " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")",
    " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)": " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)",
    " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
    " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")": " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")",
    " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")": " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")",
    " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")": " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")",
    " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()",
    " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()",
    " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
    " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
    " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")": " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")",
    " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)": " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)",
    " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)": " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)",
    " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")": " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")",
    " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)": " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)",
    " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)": " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)",
    " error(\"%s a style property during rerender (%s)": " error(\"%s a style property during rerender (%s)",
    " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")": " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")",
    " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)": " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)",
    " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)": " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)",
    " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)",
    " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
    " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
    " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)",
    " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)",
    " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")": " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")",
    " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)": " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)",
    " error(\"Unknown event handler property `%s`. It will be ignored.\", name)": " error(\"Unknown event handler property `%s`. It will be ignored.\", name)",
    " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)": " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)",
    " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")": " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")",
    " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")": " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")",
    " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)": " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)",
    " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)": " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)",
    " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)",
    " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)": " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)",
    " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()": " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()",
    " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)": " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)",
    " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
    " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
    " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")",
    " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")",
    " error(\"%s is accessing isMounted inside its render()": " error(\"%s is accessing isMounted inside its render()",
    " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")": " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")",
    " error(\"React instrumentation encountered an error: %s.\", err)": " error(\"React instrumentation encountered an error: %s.\", err)",
    " error(\"React instrumentation encountered an error: %s\", err)": " error(\"React instrumentation encountered an error: %s\", err)",
    " error(\"Should have found matching lanes. This is a bug in React.\")": " error(\"Should have found matching lanes. This is a bug in React.\")",
    " error('Did not expect a listenToNonDelegatedEvent()": " error('Did not expect a listenToNonDelegatedEvent()",
    " error('Did not expect a listenToNativeEvent()": " error('Did not expect a listenToNativeEvent()",
    " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)": " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)",
    " error(\"Extra attributes from the server: %s\", names)": " error(\"Extra attributes from the server: %s\", names)",
    " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)": " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)",
    " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)": " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)",
    " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)": " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)",
    " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)": " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)",
    " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)": " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)",
    " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()": " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()",
    " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()": " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()",
    " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()": " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()",
    " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()": " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()",
    " error(\"validateDOMNesting: when childText is passed, childTag should be null\")": " error(\"validateDOMNesting: when childText is passed, childTag should be null\")",
    " error(\"validateDOMNesting(...)": " error(\"validateDOMNesting(...)",
    " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()": " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()",
    " error(\"Unexpected pop.\")": " error(\"Unexpected pop.\")",
    " error(\"Unexpected Fiber popped.\")": " error(\"Unexpected Fiber popped.\")",
    " error(\"%s.childContextTypes is specified but there is no getChildContext()": " error(\"%s.childContextTypes is specified but there is no getChildContext()",
    " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")": " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")",
    " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")": " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")",
    " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")",
    " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")": " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")",
    " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")",
    " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()": " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()",
    " error(\"An update (setState, replaceState, or forceUpdate)": " error(\"An update (setState, replaceState, or forceUpdate)",
    " error(\"%s(...)": " error(\"%s(...)",
    " error(\"%s.getDerivedStateFromProps()": " error(\"%s.getDerivedStateFromProps()",
    " error(\"%s.shouldComponentUpdate()": " error(\"%s.shouldComponentUpdate()",
    " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)": " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)",
    " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)": " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)",
    " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)": " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)",
    " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)": " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)",
    " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)": " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)",
    " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)": " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)",
    " error(\"%s has a method called componentShouldUpdate()": " error(\"%s has a method called componentShouldUpdate()",
    " error(\"%s has a method called shouldComponentUpdate()": " error(\"%s has a method called shouldComponentUpdate()",
    " error(\"%s has a method called componentDidUnmount()": " error(\"%s has a method called componentDidUnmount()",
    " error(\"%s has a method called componentDidReceiveProps()": " error(\"%s has a method called componentDidReceiveProps()",
    " error(\"%s has a method called componentWillRecieveProps()": " error(\"%s has a method called componentWillRecieveProps()",
    " error(\"%s has a method called UNSAFE_componentWillRecieveProps()": " error(\"%s has a method called UNSAFE_componentWillRecieveProps()",
    " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)": " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)",
    " error(\"%s: getSnapshotBeforeUpdate()": " error(\"%s: getSnapshotBeforeUpdate()",
    " error(\"%s: getDerivedStateFromProps()": " error(\"%s: getDerivedStateFromProps()",
    " error(\"%s: getDerivedStateFromError()": " error(\"%s: getDerivedStateFromError()",
    " error(\"%s.state: must be set to an object or null\", name)": " error(\"%s.state: must be set to an object or null\", name)",
    " error(\"%s.getChildContext()": " error(\"%s.getChildContext()",
    " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()": " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()",
    " error(\"%s.componentWillMount()": " error(\"%s.componentWillMount()",
    " error(\"%s.componentWillReceiveProps()": " error(\"%s.componentWillReceiveProps()",
    " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)": " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)",
    " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')": " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')",
    " error('A string ref, \"%s\", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef()": " error('A string ref, \"%s\", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef()",
    " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")": " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")",
    " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key)": " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key)",
    " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()": " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()",
    " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")": " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")",
    " error(\"%s received a final argument that is not an array (instead, received `%s`)": " error(\"%s received a final argument that is not an array (instead, received `%s`)",
    " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)": " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)",
    " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")": " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")",
    " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")": " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")",
    " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")": " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")",
    " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")",
    " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")",
    " error(\"Expected useImperativeHandle()": " error(\"Expected useImperativeHandle()",
    " error(\"State updates from the useState()": " error(\"State updates from the useState()",
    " error(\"Do not call Hooks inside useEffect(...)": " error(\"Do not call Hooks inside useEffect(...)",
    " error(\"%s: Error boundaries should implement getDerivedStateFromError()": " error(\"%s: Error boundaries should implement getDerivedStateFromError()",
    " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)": " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)",
    " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)": " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)",
    " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()": " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()",
    " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)": " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)",
    " error(\"%s: Function components do not support contextType.\", _componentName4)": " error(\"%s: Function components do not support contextType.\", _componentName4)",
    " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)": " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)",
    " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()",
    " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()",
    " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
    " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
    " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)": " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)",
    " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)": " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)",
    " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index3, type)": " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index3, type)",
    " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)": " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)",
    " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")": " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")",
    " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")",
    " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")": " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")",
    " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current2)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current2)",
    " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"%s.getSnapshotBeforeUpdate()": " error(\"%s.getSnapshotBeforeUpdate()",
    " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)": " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)",
    " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)",
    " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()": " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()",
    " error(\"The current testing environment is not configured to support act(...)": " error(\"The current testing environment is not configured to support act(...)",
    " error(\"useInsertionEffect must not schedule updates.\")": " error(\"useInsertionEffect must not schedule updates.\")",
    " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")",
    " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")": " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")",
    " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)": " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)",
    " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")": " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")",
    " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")": " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")",
    " error(\"Cannot update a component (`%s`)": " error(\"Cannot update a component (`%s`)",
    " error(\"Cannot update during an existing state transition (such as within `render`)": " error(\"Cannot update during an existing state transition (such as within `render`)",
    " error(\"An update to %s inside a test was not wrapped in act(...)": " error(\"An update to %s inside a test was not wrapped in act(...)",
    " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)": " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)",
    " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)": " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)",
    " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)": " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)",
    " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current)": " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current)",
    " error(\"render(...)": " error(\"render(...)",
    " error(\"You passed a container to the second argument of root.render(...)": " error(\"You passed a container to the second argument of root.render(...)",
    " error(\"You passed a second argument to root.render(...)": " error(\"You passed a second argument to root.render(...)",
    " error(\"unmount(...)": " error(\"unmount(...)",
    " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")": " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")",
    " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)": " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)",
    " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)": " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)",
    " error(\"createRoot()": " error(\"createRoot()",
    " error(\"You are calling ReactDOMClient.createRoot()": " error(\"You are calling ReactDOMClient.createRoot()",
    " error(\"render()": " error(\"render()",
    " error(\"%s is accessing findDOMNode inside its render()": " error(\"%s is accessing findDOMNode inside its render()",
    " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
    " error(\"You are calling ReactDOM.hydrate()": " error(\"You are calling ReactDOM.hydrate()",
    " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
    " error(\"You are calling ReactDOM.render()": " error(\"You are calling ReactDOM.render()",
    " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()": " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()",
    " error(\"You are calling ReactDOM.unmountComponentAtNode()": " error(\"You are calling ReactDOM.unmountComponentAtNode()",
    " error(\"unmountComponentAtNode()": " error(\"unmountComponentAtNode()",
    " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")": " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")",
    " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
    " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
    " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")": " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")",
    ".error(\"Decryption failed:\", err)": ".error(\"Decryption failed:\", err)",
    ".error(\"Error parsing YAML frontmatter:\", error)": ".error(\"Error parsing YAML frontmatter:\", error)",
    ".error(`Error calling tool: ${error}`)": ".error(`Error calling tool: ${error}`)",
    ".error(\"Caught error in getAllPluginsByHook:\", error)": ".error(\"Caught error in getAllPluginsByHook:\", error)",
    ".error(new GoogleGenerativeAIError(\"Failed to parse stream\")": ".error(new GoogleGenerativeAIError(\"Failed to parse stream\")",
    ".error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match2[1]}\"`)": ".error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match2[1]}\"`)",
    ".error(e3)": ".error(e3)",
    ".error(deltaEntry)": ".error(deltaEntry)",
    ".error(result.reason)": ".error(result.reason)",
    ".error(\"Error parsing function arguments\", error, JSON.stringify(openAIMessage.additional_kwargs.function_call)": ".error(\"Error parsing function arguments\", error, JSON.stringify(openAIMessage.additional_kwargs.function_call)",
    ".error(\"Embedding model ping failed:\", error2)": ".error(\"Embedding model ping failed:\", error2)",
    ".error(\n          `Document count mismatch! Original: ${documents.length}, Distributed: ${totalDistributed}`\n        )": ".error(\n          `Document count mismatch! Original: ${documents.length}, Distributed: ${totalDistributed}`\n        )",
    ".error(`Error saving database:`, error)": ".error(`Error saving database:`, error)",
    ".error(`Error loading database:`, error)": ".error(`Error loading database:`, error)",
    ".error(`Error clearing storage:`, error)": ".error(`Error clearing storage:`, error)",
    ".error(\"Error getting vector length:\", error)": ".error(\"Error getting vector length:\", error)",
    ".error(`Error initializing Orama database:`, error)": ".error(`Error initializing Orama database:`, error)",
    ".error(`Error saving Orama database:`, error)": ".error(`Error saving Orama database:`, error)",
    ".error(\"Error clearing the local Copilot index:\", err)": ".error(\"Error clearing the local Copilot index:\", err)",
    ".error(\"Error deleting document from local Copilotindex:\", err)": ".error(\"Error deleting document from local Copilotindex:\", err)",
    ".error(\"Error getting latest file mtime from VectorDB:\", err)": ".error(\"Error getting latest file mtime from VectorDB:\", err)",
    ".error(\n          `Failed to ${existingDoc.hits.length > 0 ? \"update\" : \"insert\"} document ${docToSave.id}:`,\n          insertErr\n        )": ".error(\n          `Failed to ${existingDoc.hits.length > 0 ? \"update\" : \"insert\"} document ${docToSave.id}:`,\n          insertErr\n        )",
    ".error(\"Failed to restore previous document version:\", restoreErr)": ".error(\"Failed to restore previous document version:\", restoreErr)",
    ".error(`Error upserting document ${docToSave.id}:`, err)": ".error(`Error upserting document ${docToSave.id}:`, err)",
    ".error(\n        \"Orama database not found. Please make sure you have a working embedding model.\"\n      )": ".error(\n        \"Orama database not found. Please make sure you have a working embedding model.\"\n      )",
    ".error(\"Error garbage collecting the Copilot index:\", err)": ".error(\"Error garbage collecting the Copilot index:\", err)",
    ".error(\"Error getting indexed files:\", err)": ".error(\"Error getting indexed files:\", err)",
    ".error(\"Error checking if database is empty:\", err)": ".error(\"Error checking if database is empty:\", err)",
    ".error(\"Embedding instance not found.\")": ".error(\"Embedding instance not found.\")",
    ".error(`Error indexing file ${file.path}:`, err)": ".error(`Error indexing file ${file.path}:`, err)",
    ".error(\"Fatal error during indexing:\", error)": ".error(\"Fatal error during indexing:\", error)",
    ".error(`Error reindexing file ${file.path}:`, error)": ".error(`Error reindexing file ${file.path}:`, error)",
    ".error(\"Failed to initialize vector store:\", error)": ".error(\"Failed to initialize vector store:\", error)",
    ".error(error)": ".error(error)",
    ".error(\"Chat model ping failed:\", error2)": ".error(\"Chat model ping failed:\", error2)",
    ".error(\"Error in rewriteQuery:\", error)": ".error(\"Error in rewriteQuery:\", error)",
    ".error(\n        \"Error in convertQueryToVector, please ensure your embedding model is working and has an adequate context length:\",\n        error,\n        \"\\nQuery:\",\n        query\n      )": ".error(\n        \"Error in convertQueryToVector, please ensure your embedding model is working and has an adequate context length:\",\n        error,\n        \"\\nQuery:\",\n        query\n      )",
    ".error(\"Error indexing vault:\", error)": ".error(\"Error indexing vault:\", error)",
    ".error(`Error processing web search query ${query}:`, error)": ".error(`Error processing web search query ${query}:`, error)",
    ".error(`Error transcribing YouTube video ${url}:`, error)": ".error(`Error transcribing YouTube video ${url}:`, error)",
    ".error(\"Error in intent analysis:\", error)": ".error(\"Error in intent analysis:\", error)",
    ".error(\"Error during LLM invocation:\", error)": ".error(\"Error during LLM invocation:\", error)",
    ".error(errorData)": ".error(errorData)",
    ".error(\"Chain is not initialized properly, re-initializing chain: \", getChainType()": ".error(\"Chain is not initialized properly, re-initializing chain: \", getChainType()",
    ".error(\"Resetting default model. No model configuration found for: \", newModelKey)": ".error(\"Resetting default model. No model configuration found for: \", newModelKey)",
    ".error(\"createChainWithNewModel failed: \", error)": ".error(\"createChainWithNewModel failed: \", error)",
    ".error(\"setChain failed: No chat model set.\")": ".error(\"setChain failed: No chat model set.\")",
    ".error(`Error processing embedded PDF ${pdfName}:`, error)": ".error(`Error processing embedded PDF ${pdfName}:`, error)",
    ".error(`Error processing file ${note.path}:`, error)": ".error(`Error processing file ${note.path}:`, error)",
    ".error(\"aria-hidden\", target, \"in not contained inside\", parent, \". Doing nothing\")": ".error(\"aria-hidden\", target, \"in not contained inside\", parent, \". Doing nothing\")",
    ".error(\"aria-hidden: cannot operate on \", node, e3)": ".error(\"aria-hidden: cannot operate on \", node, e3)",
    ".error(\"Model request failed:\", error)": ".error(\"Model request failed:\", error)",
    ".error(`Error processing URL ${url}:`, error)": ".error(`Error processing URL ${url}:`, error)",
    ".error(\"App instance is not available.\")": ".error(\"App instance is not available.\")",
    ".error(\"Error saving chat as note:\", error)": ".error(\"Error saving chat as note:\", error)",
    ".error(\"Error refreshing vault index:\", error)": ".error(\"Error refreshing vault index:\", error)",
    ".error(\"Error regenerating message:\", error)": ".error(\"Error regenerating message:\", error)",
    ".error(\"Error searching DB:\", error)": ".error(\"Error searching DB:\", error)",
    ".error(\"Model verification failed:\", error)": ".error(\"Model verification failed:\", error)",
    ".error(\"Error reloading plugin:\", error)": ".error(\"Error reloading plugin:\", error)",
    ".error(`Error extracting content from PDF ${file.path}:`, error)": ".error(`Error extracting content from PDF ${file.path}:`, error)",
    ".error(\"Error indexing vault to Copilot index:\", err)": ".error(\"Error indexing vault to Copilot index:\", err)",
    ".error(\"Error re-indexing vault to Copilot index:\", err)": ".error(\"Error re-indexing vault to Copilot index:\", err)",
    ".error(\"Error listing indexed files:\", error)": ".error(\"Error listing indexed files:\", error)",
    ".error(\"Error removing files from index:\", err)": ".error(\"Error removing files from index:\", err)",
    ".error(\"Error counting tokens: \", error)": ".error(\"Error counting tokens: \", error)",
    ".error(\"Failed to check for updates:\", error)": ".error(\"Failed to check for updates:\", error)",
    "name: `${method}.${payload.id}`": "name: `${method}.${payload.id}`",
    "name: `${method}.${payload.id}.${key}`": "name: `${method}.${payload.id}.${key}`",
    "name: `attachment.${payload.id}.${name}`": "name: `attachment.${payload.id}.${name}`",
    "name: \"start\"": "name: \"start\"",
    "name: \"end\"": "name: \"end\"",
    "name: \"error\"": "name: \"error\"",
    "name: \"agent_action\"": "name: \"agent_action\"",
    "name: \"agent_end\"": "name: \"agent_end\"",
    "name: \"text\"": "name: \"text\"",
    "name: \"new_token\"": "name: \"new_token\"",
    "name: \"<runnable_lambda>\"": "name: \"<runnable_lambda>\"",
    "name : `${run.name}:${count5}`": "name : `${run.name}:${count5}`",
    "name: `${this.getName()}Input`": "name: `${this.getName()}Input`",
    "name: `${this.getName()}Output`": "name: `${this.getName()}Output`",
    "name: \"mustache.js\"": "name: \"mustache.js\"",
    "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"": "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"",
    "name: \"hostHeaderMiddleware\"": "name: \"hostHeaderMiddleware\"",
    "name: \"loggerMiddleware\"": "name: \"loggerMiddleware\"",
    "name: \"recursionDetectionMiddleware\"": "name: \"recursionDetectionMiddleware\"",
    "name : `${pathname}/`": "name : `${pathname}/`",
    "name: \"aws\"": "name: \"aws\"",
    "name: \"aws-cn\"": "name: \"aws-cn\"",
    "name: \"aws-us-gov\"": "name: \"aws-us-gov\"",
    "name: \"aws-iso\"": "name: \"aws-iso\"",
    "name: \"aws-iso-b\"": "name: \"aws-iso-b\"",
    "name: \"aws-iso-e\"": "name: \"aws-iso-e\"",
    "name: \"aws-iso-f\"": "name: \"aws-iso-f\"",
    "name: \"getUserAgentMiddleware\"": "name: \"getUserAgentMiddleware\"",
    "name: \"deserializerMiddleware\"": "name: \"deserializerMiddleware\"",
    "name: \"serializerMiddleware\"": "name: \"serializerMiddleware\"",
    "name: \"endpointV2Middleware\"": "name: \"endpointV2Middleware\"",
    "name: \"httpAuthSchemeMiddleware\"": "name: \"httpAuthSchemeMiddleware\"",
    "name: \"retryMiddleware\"": "name: \"retryMiddleware\"",
    "name: \"httpSigningMiddleware\"": "name: \"httpSigningMiddleware\"",
    "name: \"contentLengthMiddleware\"": "name: \"contentLengthMiddleware\"",
    "name: \"sigv4\"": "name: \"sigv4\"",
    "name: \"cognito-identity\"": "name: \"cognito-identity\"",
    "name: \"useFipsEndpoint\"": "name: \"useFipsEndpoint\"",
    "name: \"endpoint\"": "name: \"endpoint\"",
    "name: \"region\"": "name: \"region\"",
    "name: \"useDualstackEndpoint\"": "name: \"useDualstackEndpoint\"",
    "name: \"@aws-sdk/client-cognito-identity\"": "name: \"@aws-sdk/client-cognito-identity\"",
    "name: \"AWS SDK for JavaScript Team\"": "name: \"AWS SDK for JavaScript Team\"",
    "name: \"SHA-256\"": "name: \"SHA-256\"",
    "name: \"HMAC\"": "name: \"HMAC\"",
    "name: \"Googlebot\"": "name: \"Googlebot\"",
    "name: \"Opera\"": "name: \"Opera\"",
    "name: \"Focus\"": "name: \"Focus\"",
    "name: \"Swing\"": "name: \"Swing\"",
    "name: \"Opera Coast\"": "name: \"Opera Coast\"",
    "name: \"Opera Touch\"": "name: \"Opera Touch\"",
    "name: \"Maxthon\"": "name: \"Maxthon\"",
    "name: \"Epiphany\"": "name: \"Epiphany\"",
    "name: \"Puffin\"": "name: \"Puffin\"",
    "name: \"Sleipnir\"": "name: \"Sleipnir\"",
    "name: \"K-Meleon\"": "name: \"K-Meleon\"",
    "name: \"Internet Explorer\"": "name: \"Internet Explorer\"",
    "name: \"Vivaldi\"": "name: \"Vivaldi\"",
    "name: \"SeaMonkey\"": "name: \"SeaMonkey\"",
    "name: \"Sailfish\"": "name: \"Sailfish\"",
    "name: \"PhantomJS\"": "name: \"PhantomJS\"",
    "name: \"SlimerJS\"": "name: \"SlimerJS\"",
    "name: \"BlackBerry\"": "name: \"BlackBerry\"",
    "name: \"Bada\"": "name: \"Bada\"",
    "name: \"Tizen\"": "name: \"Tizen\"",
    "name: \"QupZilla\"": "name: \"QupZilla\"",
    "name: \"Firefox\"": "name: \"Firefox\"",
    "name: \"Electron\"": "name: \"Electron\"",
    "name: \"Miui\"": "name: \"Miui\"",
    "name: \"Chromium\"": "name: \"Chromium\"",
    "name: \"Chrome\"": "name: \"Chrome\"",
    "name: \"PlayStation 4\"": "name: \"PlayStation 4\"",
    "name: \"Safari\"": "name: \"Safari\"",
    "name: \"InternalErrorException\"": "name: \"InternalErrorException\"",
    "name: \"InvalidParameterException\"": "name: \"InvalidParameterException\"",
    "name: \"LimitExceededException\"": "name: \"LimitExceededException\"",
    "name: \"NotAuthorizedException\"": "name: \"NotAuthorizedException\"",
    "name: \"ResourceConflictException\"": "name: \"ResourceConflictException\"",
    "name: \"TooManyRequestsException\"": "name: \"TooManyRequestsException\"",
    "name: \"ResourceNotFoundException\"": "name: \"ResourceNotFoundException\"",
    "name: \"ExternalServiceException\"": "name: \"ExternalServiceException\"",
    "name: \"InvalidIdentityPoolConfigurationException\"": "name: \"InvalidIdentityPoolConfigurationException\"",
    "name: \"DeveloperUserAlreadyRegisteredException\"": "name: \"DeveloperUserAlreadyRegisteredException\"",
    "name: \"ConcurrentModificationException\"": "name: \"ConcurrentModificationException\"",
    "name: \"sts\"": "name: \"sts\"",
    "name: \"useGlobalEndpoint\"": "name: \"useGlobalEndpoint\"",
    "name: \"@aws-sdk/client-sts\"": "name: \"@aws-sdk/client-sts\"",
    "name: \"ExpiredTokenException\"": "name: \"ExpiredTokenException\"",
    "name: \"MalformedPolicyDocumentException\"": "name: \"MalformedPolicyDocumentException\"",
    "name: \"PackedPolicyTooLargeException\"": "name: \"PackedPolicyTooLargeException\"",
    "name: \"RegionDisabledException\"": "name: \"RegionDisabledException\"",
    "name: \"IDPRejectedClaimException\"": "name: \"IDPRejectedClaimException\"",
    "name: \"InvalidIdentityTokenException\"": "name: \"InvalidIdentityTokenException\"",
    "name: \"IDPCommunicationErrorException\"": "name: \"IDPCommunicationErrorException\"",
    "name: \"InvalidAuthorizationMessageException\"": "name: \"InvalidAuthorizationMessageException\"",
    "name : \"\";\n            return `${ctor} {}`.trim();\n          } else {\n            return replacement.toString();\n          }\n        });\n      },\n      inspect(value) {\n        switch (typeof value) {\n          case \"": "name : \"\";\n            return `${ctor} {}`.trim();\n          } else {\n            return replacement.toString();\n          }\n        });\n      },\n      inspect(value) {\n        switch (typeof value) {\n          case \"",
    "name : \" (anonymous)\"": "name : \" (anonymous)\"",
    "name: \"name\"": "name: \"name\"",
    "name: \"api-test\"": "name: \"api-test\"",
    "name: \"en\"": "name: \"en\"",
    "name: `%s`": "name: `%s`",
    "name: \"className\"": "name: \"className\"",
    "name: \"attributeName\"": "name: \"attributeName\"",
    "name: \"glyphName\"": "name: \"glyphName\"",
    "name : \"invokeguardedcallback\"": "name : \"invokeguardedcallback\"",
    "name: \"gpt-4o\"": "name: \"gpt-4o\"",
    "name: \"gpt-4o-mini\"": "name: \"gpt-4o-mini\"",
    "name: \"gpt-4-turbo\"": "name: \"gpt-4-turbo\"",
    "name: \"claude-3-5-sonnet-latest\"": "name: \"claude-3-5-sonnet-latest\"",
    "name: \"claude-3-5-haiku-latest\"": "name: \"claude-3-5-haiku-latest\"",
    "name: \"command-r\"": "name: \"command-r\"",
    "name: \"command-r-plus\"": "name: \"command-r-plus\"",
    "name: \"gemini-1.5-pro\"": "name: \"gemini-1.5-pro\"",
    "name: \"gemini-1.5-flash\"": "name: \"gemini-1.5-flash\"",
    "name: \"azure-openai\"": "name: \"azure-openai\"",
    "name: \"copilot-plus-small\"": "name: \"copilot-plus-small\"",
    "name: \"copilot-plus-multilingual\"": "name: \"copilot-plus-multilingual\"",
    "name: \"text-embedding-3-small\"": "name: \"text-embedding-3-small\"",
    "name: \"text-embedding-3-large\"": "name: \"text-embedding-3-large\"",
    "name: \"embed-multilingual-light-v3.0\"": "name: \"embed-multilingual-light-v3.0\"",
    "name: \"text-embedding-004\"": "name: \"text-embedding-004\"",
    "name: \"' + name + '\"": "name: \"' + name + '\"",
    "name: \"localSearch\"": "name: \"localSearch\"",
    "name: \"indexVault\"": "name: \"indexVault\"",
    "name: \"webSearch\"": "name: \"webSearch\"",
    "name: \"getCurrentTime\"": "name: \"getCurrentTime\"",
    "name: \"getTimeRangeMs\"": "name: \"getTimeRangeMs\"",
    "name: \"getTimeInfoByEpoch\"": "name: \"getTimeInfoByEpoch\"",
    "name: \"startPomodoro\"": "name: \"startPomodoro\"",
    "name: \"youtubeTranscription\"": "name: \"youtubeTranscription\"",
    "name: \"Japanese\"": "name: \"Japanese\"",
    "name: \"Korean\"": "name: \"Korean\"",
    "name: \"Spanish\"": "name: \"Spanish\"",
    "name: \"French\"": "name: \"French\"",
    "name: \"German\"": "name: \"German\"",
    "name: \"Italian\"": "name: \"Italian\"",
    "name: \"Portuguese\"": "name: \"Portuguese\"",
    "name: \"Russian\"": "name: \"Russian\"",
    "name: \"Arabic\"": "name: \"Arabic\"",
    "name: \"Bengali\"": "name: \"Bengali\"",
    "name: \"Czech\"": "name: \"Czech\"",
    "name: \"Danish\"": "name: \"Danish\"",
    "name: \"Greek\"": "name: \"Greek\"",
    "name: \"Finnish\"": "name: \"Finnish\"",
    "name: \"Hebrew\"": "name: \"Hebrew\"",
    "name: \"Hindi\"": "name: \"Hindi\"",
    "name: \"Hungarian\"": "name: \"Hungarian\"",
    "name: \"Indonesian\"": "name: \"Indonesian\"",
    "name: \"Malay\"": "name: \"Malay\"",
    "name: \"Dutch\"": "name: \"Dutch\"",
    "name: \"Norwegian\"": "name: \"Norwegian\"",
    "name: \"Polish\"": "name: \"Polish\"",
    "name: \"Swedish\"": "name: \"Swedish\"",
    "name: \"Thai\"": "name: \"Thai\"",
    "name: \"Turkish\"": "name: \"Turkish\"",
    "name: \"Ukrainian\"": "name: \"Ukrainian\"",
    "name: \"Vietnamese\"": "name: \"Vietnamese\"",
    "name: \"Afrikaans\"": "name: \"Afrikaans\"",
    "name: \"Bulgarian\"": "name: \"Bulgarian\"",
    "name: \"Catalan\"": "name: \"Catalan\"",
    "name: \"Estonian\"": "name: \"Estonian\"",
    "name: \"Persian\"": "name: \"Persian\"",
    "name: \"Filipino\"": "name: \"Filipino\"",
    "name: \"Croatian\"": "name: \"Croatian\"",
    "name: \"Icelandic\"": "name: \"Icelandic\"",
    "name: \"Lithuanian\"": "name: \"Lithuanian\"",
    "name: \"Latvian\"": "name: \"Latvian\"",
    "name: \"Romanian\"": "name: \"Romanian\"",
    "name: \"Slovak\"": "name: \"Slovak\"",
    "name: \"Slovenian\"": "name: \"Slovenian\"",
    "name: \"Serbian\"": "name: \"Serbian\"",
    "name: \"Swahili\"": "name: \"Swahili\"",
    "name: \"Tamil\"": "name: \"Tamil\"",
    "name: \"Telugu\"": "name: \"Telugu\"",
    "name: \"Urdu\"": "name: \"Urdu\"",
    "name: \"Zulu\"": "name: \"Zulu\"",
    "name: \"Mongolian\"": "name: \"Mongolian\"",
    "name: \"Nepali\"": "name: \"Nepali\"",
    "name: \"Punjabi\"": "name: \"Punjabi\"",
    "name: \"Sinhala\"": "name: \"Sinhala\"",
    "name: \"arrow\"": "name: \"arrow\"",
    "name: \"flip\"": "name: \"flip\"",
    "name: \"hide\"": "name: \"hide\"",
    "name: \"offset\"": "name: \"offset\"",
    "name: \"shift\"": "name: \"shift\"",
    "name: \"size\"": "name: \"size\"",
    "name: \"transformOrigin\"": "name: \"transformOrigin\"",
    "name: \"\",\n      value: model.enabled,\n      onChange: onToggleEnabled,\n      disabled\n    }\n  )), !model.isBuiltIn && /* @__PURE__ */ import_react19.default.createElement(\"": "name: \"\",\n      value: model.enabled,\n      onChange: onToggleEnabled,\n      disabled\n    }\n  )), !model.isBuiltIn && /* @__PURE__ */ import_react19.default.createElement(\"",
    "name: `selected-${isEmbeddingModel ? \"embedding\" : \"chat\"}-model`": "name: `selected-${isEmbeddingModel ? \"embedding\" : \"chat\"}-model`",
    "name: \"\",\n      value: model.enableCors || false,\n      onChange: (value) => {\n        const updatedModels = [...activeModels];\n        updatedModels[index2].enableCors = value;\n        onUpdateModels(updatedModels);\n      }\n    }\n  )), /* @__PURE__ */ import_react19.default.createElement(\"": "name: \"\",\n      value: model.enableCors || false,\n      onChange: (value) => {\n        const updatedModels = [...activeModels];\n        updatedModels[index2].enableCors = value;\n        onUpdateModels(updatedModels);\n      }\n    }\n  )), /* @__PURE__ */ import_react19.default.createElement(\"",
    "name: `${name}`": "name: `${name}`",
    "name: \"Suggested Prompts\"": "name: \"Suggested Prompts\"",
    "name: \"Relevant Notes\"": "name: \"Relevant Notes\"",
    "name: \"Open Copilot Chat Window\"": "name: \"Open Copilot Chat Window\"",
    "name: \"Clear Copilot index\"": "name: \"Clear Copilot index\"",
    "name: \"Garbage collect Copilot index (remove files that no longer exist in vault)\"": "name: \"Garbage collect Copilot index (remove files that no longer exist in vault)\"",
    "name: \"Find relevant notes to active note\"": "name: \"Find relevant notes to active note\"",
    "name: \"Inspect Copilot Index by Note Paths\"": "name: \"Inspect Copilot Index by Note Paths\"",
    "name: \"List all indexed files\"": "name: \"List all indexed files\"",
    "name: \"Remove files from Copilot index\"": "name: \"Remove files from Copilot index\"",
    "description: \"Africa (Cape Town)\"": "description: \"Africa (Cape Town)\"",
    "description: \"Asia Pacific (Hong Kong)\"": "description: \"Asia Pacific (Hong Kong)\"",
    "description: \"Asia Pacific (Tokyo)\"": "description: \"Asia Pacific (Tokyo)\"",
    "description: \"Asia Pacific (Seoul)\"": "description: \"Asia Pacific (Seoul)\"",
    "description: \"Asia Pacific (Osaka)\"": "description: \"Asia Pacific (Osaka)\"",
    "description: \"Asia Pacific (Mumbai)\"": "description: \"Asia Pacific (Mumbai)\"",
    "description: \"Asia Pacific (Hyderabad)\"": "description: \"Asia Pacific (Hyderabad)\"",
    "description: \"Asia Pacific (Singapore)\"": "description: \"Asia Pacific (Singapore)\"",
    "description: \"Asia Pacific (Sydney)\"": "description: \"Asia Pacific (Sydney)\"",
    "description: \"Asia Pacific (Jakarta)\"": "description: \"Asia Pacific (Jakarta)\"",
    "description: \"Asia Pacific (Melbourne)\"": "description: \"Asia Pacific (Melbourne)\"",
    "description: \"Asia Pacific (Malaysia)\"": "description: \"Asia Pacific (Malaysia)\"",
    "description: \"AWS Standard global region\"": "description: \"AWS Standard global region\"",
    "description: \"Canada (Central)\"": "description: \"Canada (Central)\"",
    "description: \"Canada West (Calgary)\"": "description: \"Canada West (Calgary)\"",
    "description: \"Europe (Frankfurt)\"": "description: \"Europe (Frankfurt)\"",
    "description: \"Europe (Zurich)\"": "description: \"Europe (Zurich)\"",
    "description: \"Europe (Stockholm)\"": "description: \"Europe (Stockholm)\"",
    "description: \"Europe (Milan)\"": "description: \"Europe (Milan)\"",
    "description: \"Europe (Spain)\"": "description: \"Europe (Spain)\"",
    "description: \"Europe (Ireland)\"": "description: \"Europe (Ireland)\"",
    "description: \"Europe (London)\"": "description: \"Europe (London)\"",
    "description: \"Europe (Paris)\"": "description: \"Europe (Paris)\"",
    "description: \"Israel (Tel Aviv)\"": "description: \"Israel (Tel Aviv)\"",
    "description: \"Middle East (UAE)\"": "description: \"Middle East (UAE)\"",
    "description: \"Middle East (Bahrain)\"": "description: \"Middle East (Bahrain)\"",
    "description: \"South America (Sao Paulo)\"": "description: \"South America (Sao Paulo)\"",
    "description: \"US East (N. Virginia)\"": "description: \"US East (N. Virginia)\"",
    "description: \"US East (Ohio)\"": "description: \"US East (Ohio)\"",
    "description: \"US West (N. California)\"": "description: \"US West (N. California)\"",
    "description: \"US West (Oregon)\"": "description: \"US West (Oregon)\"",
    "description: \"AWS China global region\"": "description: \"AWS China global region\"",
    "description: \"China (Beijing)\"": "description: \"China (Beijing)\"",
    "description: \"China (Ningxia)\"": "description: \"China (Ningxia)\"",
    "description: \"AWS GovCloud (US) global region\"": "description: \"AWS GovCloud (US) global region\"",
    "description: \"AWS GovCloud (US-East)\"": "description: \"AWS GovCloud (US-East)\"",
    "description: \"AWS GovCloud (US-West)\"": "description: \"AWS GovCloud (US-West)\"",
    "description: \"AWS ISO (US) global region\"": "description: \"AWS ISO (US) global region\"",
    "description: \"US ISO East\"": "description: \"US ISO East\"",
    "description: \"US ISO WEST\"": "description: \"US ISO WEST\"",
    "description: \"AWS ISOB (US) global region\"": "description: \"AWS ISOB (US) global region\"",
    "description: \"US ISOB East (Ohio)\"": "description: \"US ISOB East (Ohio)\"",
    "description: \"EU ISOE West\"": "description: \"EU ISOE West\"",
    "description: \"AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native\"": "description: \"AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native\"",
    "description: \"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\"": "description: \"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\"",
    "description: \"Search for notes based on the time range and query\"": "description: \"Search for notes based on the time range and query\"",
    "description: \"Index the vault to the Copilot index\"": "description: \"Index the vault to the Copilot index\"",
    "description: \"Search the web for information\"": "description: \"Search the web for information\"",
    "description: \"Get the current time in various formats, including timezone information\"": "description: \"Get the current time in various formats, including timezone information\"",
    "description: \"Get a time range in milliseconds based on a natural language time expression\"": "description: \"Get a time range in milliseconds based on a natural language time expression\"",
    "description: \"Convert a Unix timestamp (in seconds or milliseconds) to detailed time information\"": "description: \"Convert a Unix timestamp (in seconds or milliseconds) to detailed time information\"",
    "description: \"Start a Pomodoro timer with a customizable interval\"": "description: \"Start a Pomodoro timer with a customizable interval\"",
    "description: \"Get the transcript of a YouTube video\"": "description: \"Get the transcript of a YouTube video\"",
    "description: \"Enter your Copilot Plus license key\"": "description: \"Enter your Copilot Plus license key\"",
    "description: \"Show suggested prompts in the chat view\"": "description: \"Show suggested prompts in the chat view\"",
    "description: \"Show relevant notes in the chat view\"": "description: \"Show relevant notes in the chat view\"",
    "description: \"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\"": "description: \"When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile.\"",
    "link: \"Blink\"": "link: \"Blink\"",
    "link: \"xmlnsXlink\"": "link: \"xmlnsXlink\"",
    "text: \"{\"": "text: \"{\"",
    "text: \"}\"": "text: \"}\"",
    "text: \"text\"": "text: \"text\"",
    "text: \"tokenize me! :D\"": "text: \"tokenize me! :D\"",
    "text: \"\",\n          message: new AIMessageChunk({\n            content: \"": "text: \"\",\n          message: new AIMessageChunk({\n            content: \"",
    "text: \"\",\n      message: new AIMessageChunk({\n        content: \"": "text: \"\",\n      message: new AIMessageChunk({\n        content: \"",
    "text: \"\"\n      });\n      yield generationChunk;\n    }\n    if (options.signal?.aborted) {\n      throw new Error(\"": "text: \"\"\n      });\n      yield generationChunk;\n    }\n    if (options.signal?.aborted) {\n      throw new Error(\"",
    "text: \"\"\n        });\n      }\n      const chunk = new ChatGenerationChunk({\n        message,\n        text: choice.delta.content ?? \"": "text: \"\"\n        });\n      }\n      const chunk = new ChatGenerationChunk({\n        message,\n        text: choice.delta.content ?? \"",
    "text: \"\"\n      });\n    }\n    if (options.signal?.aborted) {\n      throw new Error(\"": "text: \"\"\n      });\n    }\n    if (options.signal?.aborted) {\n      throw new Error(\"",
    "text: '${this.text}'": "text: '${this.text}'",
    "text: \"reference\"": "text: \"reference\"",
    "text: \"Sources\"": "text: \"Sources\"",
    "text: \"High Relevance Sources\"": "text: \"High Relevance Sources\"",
    "text: \"Lower Relevance Sources\"": "text: \"Lower Relevance Sources\"",
    "text: \"Inspect Copilot Index by Note Paths\"": "text: \"Inspect Copilot Index by Note Paths\"",
    "text: \"Show Index Data\"": "text: \"Show Index Data\"",
    "text: \"Remove Files from Copilot Index\"": "text: \"Remove Files from Copilot Index\"",
    "text: \"Relevant Notes\"": "text: \"Relevant Notes\"",
    "text: `${item.document.title}`": "text: `${item.document.title}`",
    "text: `${item.document.path}`": "text: `${item.document.path}`",
    "text: `${metadataTexts.join(\" | \")}`": "text: `${metadataTexts.join(\" | \")}`",
    "search: \"Google Search\"": "search: \"Google Search\"",
    "page: \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity\"": "page: \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity\"",
    "page: \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\"": "page: \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\"",
    ".setButtonText(\"Remove\")": ".setButtonText(\"Remove\")",
    ".setName(\"File paths\")": ".setName(\"File paths\")",
    ".setDesc(\n      \"Paste the markdown list of file paths to remove from the index. You can get the list by running the command `List all indexed files`.\"\n    )": ".setDesc(\n      \"Paste the markdown list of file paths to remove from the index. You can get the list by running the command `List all indexed files`.\"\n    )",
    ".setPlaceholder(\"- [[path/to/file1.md]]\\n- [[path/to/file2.md]]\")": ".setPlaceholder(\"- [[path/to/file1.md]]\\n- [[path/to/file2.md]]\")",
    ".appendText(\"Check out the \")": ".appendText(\"Check out the \")",
    "[COMMAND_IDS.ADD_CUSTOM_PROMPT]: \"Add custom prompt\"": "[COMMAND_IDS.ADD_CUSTOM_PROMPT]: \"Add custom prompt\"",
    "[COMMAND_IDS.APPLY_ADHOC_PROMPT]: \"Apply ad-hoc custom prompt\"": "[COMMAND_IDS.APPLY_ADHOC_PROMPT]: \"Apply ad-hoc custom prompt\"",
    "[COMMAND_IDS.APPLY_CUSTOM_PROMPT]: \"Apply custom prompt\"": "[COMMAND_IDS.APPLY_CUSTOM_PROMPT]: \"Apply custom prompt\"",
    "[COMMAND_IDS.CHANGE_TONE]: \"Change tone of selection\"": "[COMMAND_IDS.CHANGE_TONE]: \"Change tone of selection\"",
    "[COMMAND_IDS.CLEAR_LOCAL_COPILOT_INDEX]: \"Clear local Copilot index\"": "[COMMAND_IDS.CLEAR_LOCAL_COPILOT_INDEX]: \"Clear local Copilot index\"",
    "[COMMAND_IDS.COUNT_TOTAL_VAULT_TOKENS]: \"Count total tokens in your vault\"": "[COMMAND_IDS.COUNT_TOTAL_VAULT_TOKENS]: \"Count total tokens in your vault\"",
    "[COMMAND_IDS.COUNT_WORD_AND_TOKENS_SELECTION]: \"Count words and tokens in selection\"": "[COMMAND_IDS.COUNT_WORD_AND_TOKENS_SELECTION]: \"Count words and tokens in selection\"",
    "[COMMAND_IDS.DELETE_CUSTOM_PROMPT]: \"Delete custom prompt\"": "[COMMAND_IDS.DELETE_CUSTOM_PROMPT]: \"Delete custom prompt\"",
    "[COMMAND_IDS.EDIT_CUSTOM_PROMPT]: \"Edit custom prompt\"": "[COMMAND_IDS.EDIT_CUSTOM_PROMPT]: \"Edit custom prompt\"",
    "[COMMAND_IDS.ELI5]: \"Explain selection like I'\"": "[COMMAND_IDS.ELI5]: \"Explain selection like I'\"",
    "[COMMAND_IDS.EMOJIFY]: \"Emojify selection\"": "[COMMAND_IDS.EMOJIFY]: \"Emojify selection\"",
    "[COMMAND_IDS.FIND_RELEVANT_NOTES]: \"Find relevant notes\"": "[COMMAND_IDS.FIND_RELEVANT_NOTES]: \"Find relevant notes\"",
    "[COMMAND_IDS.FIX_GRAMMAR]: \"Fix grammar and spelling of selection\"": "[COMMAND_IDS.FIX_GRAMMAR]: \"Fix grammar and spelling of selection\"",
    "[COMMAND_IDS.FORCE_REINDEX_VAULT_TO_COPILOT_INDEX]: \"Force reindex vault\"": "[COMMAND_IDS.FORCE_REINDEX_VAULT_TO_COPILOT_INDEX]: \"Force reindex vault\"",
    "[COMMAND_IDS.GARBAGE_COLLECT_COPILOT_INDEX]: \"Garbage collect Copilot index (remove files that no longer exist in vault)\"": "[COMMAND_IDS.GARBAGE_COLLECT_COPILOT_INDEX]: \"Garbage collect Copilot index (remove files that no longer exist in vault)\"",
    "[COMMAND_IDS.GENERATE_GLOSSARY]: \"Generate glossary for selection\"": "[COMMAND_IDS.GENERATE_GLOSSARY]: \"Generate glossary for selection\"",
    "[COMMAND_IDS.GENERATE_TOC]: \"Generate table of contents for selection\"": "[COMMAND_IDS.GENERATE_TOC]: \"Generate table of contents for selection\"",
    "[COMMAND_IDS.INDEX_VAULT_TO_COPILOT_INDEX]: \"Index (refresh) vault\"": "[COMMAND_IDS.INDEX_VAULT_TO_COPILOT_INDEX]: \"Index (refresh) vault\"",
    "[COMMAND_IDS.INSPECT_COPILOT_INDEX_BY_NOTE_PATHS]: \"Inspect Copilot index by note paths (debug)\"": "[COMMAND_IDS.INSPECT_COPILOT_INDEX_BY_NOTE_PATHS]: \"Inspect Copilot index by note paths (debug)\"",
    "[COMMAND_IDS.LIST_INDEXED_FILES]: \"List all indexed files (debug)\"": "[COMMAND_IDS.LIST_INDEXED_FILES]: \"List all indexed files (debug)\"",
    "[COMMAND_IDS.LOAD_COPILOT_CHAT_CONVERSATION]: \"Load Copilot chat conversation\"": "[COMMAND_IDS.LOAD_COPILOT_CHAT_CONVERSATION]: \"Load Copilot chat conversation\"",
    "[COMMAND_IDS.MAKE_LONGER]: \"Make selection longer\"": "[COMMAND_IDS.MAKE_LONGER]: \"Make selection longer\"",
    "[COMMAND_IDS.MAKE_SHORTER]: \"Make selection shorter\"": "[COMMAND_IDS.MAKE_SHORTER]: \"Make selection shorter\"",
    "[COMMAND_IDS.OPEN_COPILOT_CHAT_WINDOW]: \"Open Copilot Chat Window\"": "[COMMAND_IDS.OPEN_COPILOT_CHAT_WINDOW]: \"Open Copilot Chat Window\"",
    "[COMMAND_IDS.PRESS_RELEASE]: \"Rewrite selection to a press release\"": "[COMMAND_IDS.PRESS_RELEASE]: \"Rewrite selection to a press release\"",
    "[COMMAND_IDS.REMOVE_FILES_FROM_COPILOT_INDEX]: \"Remove files from Copilot index (debug)\"": "[COMMAND_IDS.REMOVE_FILES_FROM_COPILOT_INDEX]: \"Remove files from Copilot index (debug)\"",
    "[COMMAND_IDS.REMOVE_URLS]: \"Remove URLs from selection\"": "[COMMAND_IDS.REMOVE_URLS]: \"Remove URLs from selection\"",
    "[COMMAND_IDS.REWRITE_TWEET]: \"Rewrite selection to a tweet\"": "[COMMAND_IDS.REWRITE_TWEET]: \"Rewrite selection to a tweet\"",
    "[COMMAND_IDS.REWRITE_TWEET_THREAD]: \"Rewrite selection to a tweet thread\"": "[COMMAND_IDS.REWRITE_TWEET_THREAD]: \"Rewrite selection to a tweet thread\"",
    "[COMMAND_IDS.SEARCH_ORAMA_DB]: \"Search OramaDB (debug)\"": "[COMMAND_IDS.SEARCH_ORAMA_DB]: \"Search OramaDB (debug)\"",
    "[COMMAND_IDS.SIMPLIFY]: \"Simplify selection\"": "[COMMAND_IDS.SIMPLIFY]: \"Simplify selection\"",
    "[COMMAND_IDS.SUMMARIZE]: \"Summarize selection\"": "[COMMAND_IDS.SUMMARIZE]: \"Summarize selection\"",
    "[COMMAND_IDS.TOGGLE_COPILOT_CHAT_WINDOW]: \"Toggle Copilot Chat Window\"": "[COMMAND_IDS.TOGGLE_COPILOT_CHAT_WINDOW]: \"Toggle Copilot Chat Window\"",
    "[COMMAND_IDS.TRANSLATE]: \"Translate selection\"": "[COMMAND_IDS.TRANSLATE]: \"Translate selection\"",
    "\"Relevance is a combination of semantic similarity and links.\"": "\"Relevance is a combination of semantic similarity and links.\"",
    "\"No relevant notes found\"": "\"No relevant notes found\"",
    "\"Relevant Notes\"": "\"Relevant Notes\"",
    "\"Suggested Prompts\"": "\"Suggested Prompts\"",
    "\"Failed to initialize vector store. Please make sure you have a valid API key for your embedding model and restart the plugin.\"": "\"Failed to initialize vector store. Please make sure you have a valid API key for your embedding model and restart the plugin.\""
  }
}