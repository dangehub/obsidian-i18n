{
  "manifest": {
    "translationVersion": 1733639306204,
    "pluginVersion": "2.0.1"
  },
  "description": {
    "original": "A obsidian's plugin to help to manage css snippets (download / update) from repository ",
    "translation": "A obsidian's plugin to help to manage css snippets (download / update) from repository "
  },
  "dict": {
    "Notice(\"Repository successfully removed \\u{1F389}\")": "Notice(\"Repository successfully removed \\u{1F389}\")",
    "Notice(\"Error : this repo is not in the list \\u{1F63F}\")": "Notice(\"Error : this repo is not in the list \\u{1F63F}\")",
    "Notice(\"Error \\u{1F63F}, snippet or repository not found\")": "Notice(\"Error \\u{1F63F}, snippet or repository not found\")",
    "Notice(messageNotice)": "Notice(messageNotice)",
    "Notice(\"Error : this repo is already in the list \\u{1F63F}\")": "Notice(\"Error : this repo is already in the list \\u{1F63F}\")",
    "Notice(`${repoPath} successfully updated \\u{1F389}`)": "Notice(`${repoPath} successfully updated \\u{1F389}`)",
    "Notice(`${basename(item.snippetPath)}`": "Notice(`${basename(item.snippetPath)}`",
    ".log(errorSnippetList)": ".log(errorSnippetList)",
    ".log(\"error in grabcommitinfo\", error)": ".log(\"error in grabcommitinfo\", error)",
    ".log(`Testing from ${repoPath} : ${filepath} => ${test[0].commit.author.date}`)": ".log(`Testing from ${repoPath} : ${filepath} => ${test[0].commit.author.date}`)",
    ".log(`Repo: ${repoPath}, owner: ${owner}, repoName: ${repoName}`)": ".log(`Repo: ${repoPath}, owner: ${owner}, repoName: ${repoName}`)",
    ".log(e2)": ".log(e2)",
    ".log(file.status)": ".log(file.status)",
    ".log(e)": ".log(e)",
    "name: \"Adding new snippet\"": "name: \"Adding new snippet\"",
    "name: \"Update all snippets\"": "name: \"Update all snippets\"",
    "name: \"Update specific repository\"": "name: \"Update specific repository\"",
    "name: \"Update specific snippet\"": "name: \"Update specific snippet\"",
    "name: \"Exclude specific snippet\"": "name: \"Exclude specific snippet\"",
    "text: \"Repo Links\"": "text: \"Repo Links\"",
    "text: \"Snippet Manager Settings\"": "text: \"Snippet Manager Settings\"",
    "text: \"^(.*)$\"": "text: \"^(.*)$\"",
    "text: \" will match all snippets.\\n\\n\"": "text: \" will match all snippets.\\n\\n\"",
    "text: `The following is a list of the repository added via the command palette `": "text: `The following is a list of the repository added via the command palette `",
    "text: `Click the x button next to a repository to remove it from the list.`": "text: `Click the x button next to a repository to remove it from the list.`",
    "text: \"Note: \"": "text: \"Note: \"",
    "text: \"This does not delete the linked snippet, this should be done from your \"": "text: \"This does not delete the linked snippet, this should be done from your \"",
    "text: \".obsidian/snippets\"": "text: \".obsidian/snippets\"",
    "text: \" folder\"": "text: \" folder\"",
    ".setButtonText(\"Submit\")": ".setButtonText(\"Submit\")",
    ".setName(\"Repo Link\")": ".setName(\"Repo Link\")",
    ".setName(\"Excluded Snippet\")": ".setName(\"Excluded Snippet\")",
    ".setName(\"Repository Snippet List\")": ".setName(\"Repository Snippet List\")",
    ".setPlaceholder(\"BadCSS I hate, badCSS*\")": ".setPlaceholder(\"BadCSS I hate, badCSS*\")",
    ".setTooltip(\"Add new repository\")": ".setTooltip(\"Add new repository\")",
    ".setTooltip(\"Update all repository\")": ".setTooltip(\"Update all repository\")",
    ".setTooltip(\"Delete this repository from the list\")": ".setTooltip(\"Delete this repository from the list\")",
    ".setTooltip(\"Update this repository\")": ".setTooltip(\"Update this repository\")",
    ".setTooltip(\"Update this snippet\")": ".setTooltip(\"Update this snippet\")",
    ".setTooltip(\"Remove this snippet\")": ".setTooltip(\"Remove this snippet\")",
    ".innerText = \"Type the snippet name you want to exclude from the list, without the extension.\\nYou can also use regex, for example: \"": ".innerText = \"Type the snippet name you want to exclude from the list, without the extension.\\nYou can also use regex, for example: \"",
    ".innerText = \"You can check your regex here.\"": ".innerText = \"You can check your regex here.\""
  }
}