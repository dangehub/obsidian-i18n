{
  "manifest": {
    "translationVersion": 1730568038188,
    "pluginVersion": "1.9.2"
  },
  "description": {
    "original": "Export your notes to PDF, support export preview, add bookmarks outline and header/footer.",
    "translation": "Export your notes to PDF, support export preview, add bookmarks outline and header/footer."
  },
  "dict": {
    "Notice(\"data is empty!\")": "Notice(\"data is empty!\")",
    "text: \"Support the continued development of this plugin.\"": "text: \"Support the continued development of this plugin.\"",
    ".setText(\"Export to PDF\")": ".setText(\"Export to PDF\")",
    ".setButtonText(\"Export\")": ".setButtonText(\"Export\")",
    ".setButtonText(\"Refresh\")": ".setButtonText(\"Refresh\")",
    ".setButtonText(\"Debug\")": ".setButtonText(\"Debug\")",
    ".setName(\"Width/Height\")": ".setName(\"Width/Height\")",
    ".setName(\"Top/Bottom\")": ".setName(\"Top/Bottom\")",
    ".setName(\"Left/Right\")": ".setName(\"Left/Right\")",
    ".setName(\"Advanced\")": ".setName(\"Advanced\")",
    ".setDesc(\"The unit is millimeters.\")": ".setDesc(\"The unit is millimeters.\")",
    ".setDesc(\"Whether to print background graphics\")": ".setDesc(\"Whether to print background graphics\")",
    ".setDesc(\"HTML template for the print footer. Should use the same format as the headerTemplate.\")": ".setDesc(\"HTML template for the print footer. Should use the same format as the headerTemplate.\")",
    ".setDesc(\"Add timestamp to output file name\")": ".setDesc(\"Add timestamp to output file name\")",
    ".setDesc(\"Select the css snippet that are not enabled\")": ".setDesc(\"Select the css snippet that are not enabled\")",
    ".setDesc(\"This is useful for troubleshooting.\")": ".setDesc(\"This is useful for troubleshooting.\")",
    ".setPlaceholder(\"width\")": ".setPlaceholder(\"width\")",
    ".setPlaceholder(\"height\")": ".setPlaceholder(\"height\")",
    ".setPlaceholder(\"margin top\")": ".setPlaceholder(\"margin top\")",
    ".setPlaceholder(\"margin bottom\")": ".setPlaceholder(\"margin bottom\")",
    ".setPlaceholder(\"margin left\")": ".setPlaceholder(\"margin left\")",
    ".setPlaceholder(\"margin right\")": ".setPlaceholder(\"margin right\")",
    ".setDesc(\n      'HTML template for the print header. Should be valid HTML markup with following classes used to inject printing values into them: date (formatted print date), title (document title), url (document location), pageNumber (current page number) and totalPages (total pages in the document). For example, <span class=\"title\"></span> would generate span containing the title.'\n    )": ".setDesc(\n      'HTML template for the print header. Should be valid HTML markup with following classes used to inject printing values into them: date (formatted print date), title (document title), url (document location), pageNumber (current page number) and totalPages (total pages in the document). For example, <span class=\"title\"></span> would generate span containing the title.'\n    )",
    "\"Export folder to PDF\"": "\"Export folder to PDF\"",
    "\"Export each file to PDF\"": "\"Export each file to PDF\"",
    "\"Better Export PDF\"": "\"Better Export PDF\"",
    ".setName(\"Generate tagged PDF\")": ".setName(\"Generate tagged PDF\")",
    ".setName(\"Debug\")": ".setName(\"Debug\")",
    ".setDesc(\n      \"Whether or not to generate a tagged (accessible) PDF. Defaults to false. As this property is experimental, the generated PDF may not adhere fully to PDF/UA and WCAG standards.\"\n    )": ".setDesc(\n      \"Whether or not to generate a tagged (accessible) PDF. Defaults to false. As this property is experimental, the generated PDF may not adhere fully to PDF/UA and WCAG standards.\"\n    )",
    ".setDesc(\"Add frontMatter(title, author, keywords, subject creator, etc) to pdf metadata\")": ".setDesc(\"Add frontMatter(title, author, keywords, subject creator, etc) to pdf metadata\")",
    ".log(\"FLATE:\", code)": ".log(\"FLATE:\", code)",
    ".log(nextCode + earlyChange)": ".log(nextCode + earlyChange)",
    "alog(catalog)": "alog(catalog)",
    "alog(object)": "alog(object)",
    ".log(\"output pdf:\", outputFile)": ".log(\"output pdf:\", outputFile)",
    "alog({\n    title: \"Export to PDF\",\n    defaultPath: filename + (isTimestamp ? \"-\" + Date.now()": "alog({\n    title: \"Export to PDF\",\n    defaultPath: filename + (isTimestamp ? \"-\" + Date.now()",
    "alog({\n    title: \"Export to PDF\",\n    defaultPath: filename,\n    properties: [\"openDirectory\"]\n  })": "alog({\n    title: \"Export to PDF\",\n    defaultPath: filename,\n    properties: [\"openDirectory\"]\n  })",
    ".log(`md render time:${(/* @__PURE__ */ new Date()": ".log(`md render time:${(/* @__PURE__ */ new Date()",
    ".log(\"output:\", outputPath)": ".log(\"output:\", outputPath)",
    " error(\"Invalid rotation: \" + JSON.stringify(rotation)": " error(\"Invalid rotation: \" + JSON.stringify(rotation)",
    " error(\"Invalid color: \" + JSON.stringify(color)": " error(\"Invalid color: \" + JSON.stringify(color)",
    ".error(err)": ".error(err)",
    ".error(error2)": ".error(error2)",
    "name: \"' + name + '\"": "name: \"' + name + '\"",
    "name: \"All Files\"": "name: \"All Files\"",
    "name: \"PDF\"": "name: \"PDF\"",
    "text: `${i + 1}-${doc.title}`": "text: `${i + 1}-${doc.title}`",
    "text: \"xxxxx\"": "text: \"xxxxx\"",
    ".setTooltip(\"Include file name as title\")": ".setTooltip(\"Include file name as title\")",
    ".setTooltip(\"landscape\")": ".setTooltip(\"landscape\")",
    ".setTooltip(\"Display header\")": ".setTooltip(\"Display header\")",
    ".setTooltip(\"Display footer\")": ".setTooltip(\"Display footer\")",
    ".setTooltip(\"Open the exported file after exporting.\")": ".setTooltip(\"Open the exported file after exporting.\")",
    ".addOption(\"0\", \"None\")": ".addOption(\"0\", \"None\")",
    ".addOption(\"1\", \"Default\")": ".addOption(\"1\", \"Default\")",
    ".addOption(\"2\", \"Small\")": ".addOption(\"2\", \"Small\")",
    ".addOption(\"3\", \"Custom\")": ".addOption(\"3\", \"Custom\")",
    ".addOption(\"0\", \"Not select\")": ".addOption(\"0\", \"Not select\")"
  }
}