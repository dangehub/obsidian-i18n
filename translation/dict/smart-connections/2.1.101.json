{
  "manifest": {
    "translationVersion": -639075600000,
    "pluginVersion": "2.1.101"
  },
  "description": {
    "original": "Find links to similar notes using artificial intelligence from OpenAI.",
    "translation": "Find links to similar notes using artificial intelligence from OpenAI."
  },
  "dict": {
    ".setText(`Included files: ${this.included_files} / Total files: ${this.total_files}`)": ".setText(`Included files: ${this.included_files} / Total files: ${this.total_files}`)",
    ".setPlaceholder(\"Type the name of a file...\")": ".setPlaceholder(\"Type the name of a file...\")",
    ".setPlaceholder(\"Type the name of a folder...\")": ".setPlaceholder(\"Type the name of a folder...\")",
    ".setPlaceholder(\"Type the name of a system prompt...\")": ".setPlaceholder(\"Type the name of a system prompt...\")",
    ".setPlaceholder(\"Type the name of a chat session...\")": ".setPlaceholder(\"Type the name of a chat session...\")",
    ".createEl(\"p\", { text: \"Block not found: \" + entity_key });\n      const refresh_button = elm.createEl(\"button\", { text: \"Refresh embeddings\" })": ".createEl(\"p\", { text: \"Block not found: \" + entity_key });\n      const refresh_button = elm.createEl(\"button\", { text: \"Refresh embeddings\" })",
    ".createEl(\"button\", {\n      text: \"Refresh\"\n    })": ".createEl(\"button\", {\n      text: \"Refresh\"\n    })",
    "name: \"Change UI\"": "name: \"Change UI\"",
    "name: 'Notes Embedding Model'": "name: 'Notes Embedding Model'",
    "name: 'Blocks Embedding Model'": "name: 'Blocks Embedding Model'",
    "name: \"Embedding Model\"": "name: \"Embedding Model\"",
    "name: 'Minimum Embedding Length'": "name: 'Minimum Embedding Length'",
    "name: \"Minimum Embedding Length\"": "name: \"Minimum Embedding Length\"",
    "name: \"OpenAI API Key for embeddings\"": "name: \"OpenAI API Key for embeddings\"",
    "name: 'Use GPU'": "name: 'Use GPU'",
    "name: \"GPU Batch Size\"": "name: \"GPU Batch Size\"",
    "name: 'Local Embedding Max Tokens'": "name: 'Local Embedding Max Tokens'",
    "name: \"Cohere API Key\"": "name: \"Cohere API Key\"",
    "name: \"Exclude Inlinks\"": "name: \"Exclude Inlinks\"",
    "name: \"Exclude Outlinks\"": "name: \"Exclude Outlinks\"",
    "name: \"Toggle Using Include/Exclude\"": "name: \"Toggle Using Include/Exclude\"",
    "name: \"Include Filter\"": "name: \"Include Filter\"",
    "name: \"Exclude Filter\"": "name: \"Exclude Filter\"",
    "name: \"Toggle Re-Ranker\"": "name: \"Toggle Re-Ranker\"",
    "name: \"Find: Make Smart Connections\"": "name: \"Find: Make Smart Connections\"",
    "name: \"Refresh & Make Connections\"": "name: \"Refresh & Make Connections\"",
    "name: \"Open: View Smart Connections\"": "name: \"Open: View Smart Connections\"",
    "name: \"Open: Smart Chat Conversation\"": "name: \"Open: Smart Chat Conversation\"",
    "name: \"Random Note\"": "name: \"Random Note\"",
    "name: \"Open: Smart ChatGPT\"": "name: \"Open: Smart ChatGPT\"",
    "name: \"Open: Smart Connections Supporter Private Chat\"": "name: \"Open: Smart Connections Supporter Private Chat\"",
    "name: \"Not found: \"": "name: \"Not found: \"",
    "description: \"Embedded JavaScript templates\"": "description: \"Embedded JavaScript templates\"",
    "description: \"OpenAI\"": "description: \"OpenAI\"",
    "description: \"Google Gemini\"": "description: \"Google Gemini\"",
    "description: \"Open Router\"": "description: \"Open Router\"",
    "description: \"Cohere Command-R\"": "description: \"Cohere Command-R\"",
    "description: \"Anthropic Claude\"": "description: \"Anthropic Claude\"",
    "description: \"Custom Local (OpenAI format)\"": "description: \"Custom Local (OpenAI format)\"",
    "description: \"Custom API (OpenAI format)\"": "description: \"Custom API (OpenAI format)\"",
    "description: `Max input tokens: ${model.context_length}, Finetuned: ${model.finetuned}`": "description: `Max input tokens: ${model.context_length}, Finetuned: ${model.finetuned}`",
    "description: \"Display changes with accept/reject in Obsidian (requires Smart Connections plugin).\"": "description: \"Display changes with accept/reject in Obsidian (requires Smart Connections plugin).\"",
    "description: \"Local, 512 tokens, 384 dim\"": "description: \"Local, 512 tokens, 384 dim\"",
    "description: \"Local, 4,096 tokens, 384 dim\"": "description: \"Local, 4,096 tokens, 384 dim\"",
    "description: \"Local, 8,192 tokens, 512 dim, Chinese/English bilingual\"": "description: \"Local, 8,192 tokens, 512 dim, Chinese/English bilingual\"",
    "description: \"API, 8,191 tokens, 1,536 dim\"": "description: \"API, 8,191 tokens, 1,536 dim\"",
    "description: \"API, 8,191 tokens, 3,072 dim\"": "description: \"API, 8,191 tokens, 3,072 dim\"",
    "description: \"API, 8,191 tokens, 512 dim\"": "description: \"API, 8,191 tokens, 512 dim\"",
    "description: \"API, 8,191 tokens, 256 dim\"": "description: \"API, 8,191 tokens, 256 dim\"",
    "description: \"Local, 8,192 tokens, 512 dim\"": "description: \"Local, 8,192 tokens, 512 dim\"",
    "description: \"Local, 8,192 tokens, 256 dim\"": "description: \"Local, 8,192 tokens, 256 dim\"",
    "description: \"Local, 2,048 tokens, 768 dim\"": "description: \"Local, 2,048 tokens, 768 dim\"",
    "description: \"Select a model to use for embedding your notes.\"": "description: \"Select a model to use for embedding your notes.\"",
    "description: \"Select a model to use for embedding your blocks.\"": "description: \"Select a model to use for embedding your blocks.\"",
    "description: \"Select an embedding model.\"": "description: \"Select an embedding model.\"",
    "description: \"Minimum length of note to embed.\"": "description: \"Minimum length of note to embed.\"",
    "description: \"Required for OpenAI embedding models\"": "description: \"Required for OpenAI embedding models\"",
    "description: \"Use GPU for embeddings if available.\"": "description: \"Use GPU for embeddings if available.\"",
    "description: \"Number of embeddings to process per batch on GPU. Use 0 to disable GPU.\"": "description: \"Number of embeddings to process per batch on GPU. Use 0 to disable GPU.\"",
    "description: \"Reduce max tokens depending on available resources (CPU, RAM).\"": "description: \"Reduce max tokens depending on available resources (CPU, RAM).\"",
    "description: \"API Key required to use Cohere re-ranker.\"": "description: \"API Key required to use Cohere re-ranker.\"",
    "description: \"Exclude inlinks\"": "description: \"Exclude inlinks\"",
    "description: \"Exclude outlinks\"": "description: \"Exclude outlinks\"",
    "description: \"Toggle using include/exclude filters\"": "description: \"Toggle using include/exclude filters\"",
    "description: \"Require that results match this value.\"": "description: \"Require that results match this value.\"",
    "description: \"Exclude results that match this value.\"": "description: \"Exclude results that match this value.\"",
    "description: \"Toggle the re-ranker\"": "description: \"Toggle the re-ranker\"",
    "description: \"Performs a semantic search of the user's data. Required: hypothetical_1 and hypothetical_2. Optional: hypothetical_3.\"": "description: \"Performs a semantic search of the user's data. Required: hypothetical_1 and hypothetical_2. Optional: hypothetical_3.\"",
    "description: \"Must be distinct from and not share any breadcrumbs with hypothetical_1.\"": "description: \"Must be distinct from and not share any breadcrumbs with hypothetical_1.\"",
    "description: \"Must be distinct from hypothetical_1 and hypothetical_2.\"": "description: \"Must be distinct from hypothetical_1 and hypothetical_2.\"",
    "User Agreement:</strong> By using Smart Connections you agree to share how it helps you with at least one other person": "User Agreement:</strong> By using Smart Connections you agree to share how it helps you with at least one other person",
    "Supporter Community": "Supporter Community",
    "The success of Smart Connections is a direct result of our community of supporters who generously fund and evaluate new features. Their unwavering commitment to our privacy-focused, open-source software benefits all. Together, we can continue to innovate and make a positive impact on the world.": "The success of Smart Connections is a direct result of our community of supporters who generously fund and evaluate new features. Their unwavering commitment to our privacy-focused, open-source software benefits all. Together, we can continue to innovate and make a positive impact on the world.",
    "Supporter benefits include:": "Supporter benefits include:",
    "Early access to new &amp; experimental features:": "Early access to new &amp; experimental features:",
    "Early access to new versions enables supporters to help ensure new features are ready for the broader community.": "Early access to new versions enables supporters to help ensure new features are ready for the broader community.",
    "Available in v2.2 (Early Release):": "Available in v2.2 (Early Release):",
    "Multimodal Smart Chat (images)": "Multimodal Smart Chat (images)",
    "Mobile compatibility": "Mobile compatibility",
    "Coming soon:": "Coming soon:",
    "Re-ranking in the Smart View": "Re-ranking in the Smart View",
    "Actions in the Smart Chat": "Actions in the Smart Chat",
    "Advanced filters in the Smart View": "Advanced filters in the Smart View",
    "Access to the supporter-only <a href=\"https://chat.smartconnections.app\">private chat": "Access to the supporter-only <a href=\"https://chat.smartconnections.app\">private chat",
    "Community:": "Community:",
    "Ask questions and share insights with other supporters.": "Ask questions and share insights with other supporters.",
    "Help &amp; Support (priority):": "Help &amp; Support (priority):",
    "Swift, top-priority support in the <a href=\"https://chat.smartconnections.app\">Supporter Chat": "Swift, top-priority support in the <a href=\"https://chat.smartconnections.app\">Supporter Chat",
    "Feature Requests (priority):": "Feature Requests (priority):",
    "Influence the future of Smart Connections with priority feature requests in the <a href=\"https://chat.smartconnections.app\">Supporter Chat": "Influence the future of Smart Connections with priority feature requests in the <a href=\"https://chat.smartconnections.app\">Supporter Chat",
    "Insider Updates:": "Insider Updates:",
    "Learn about the latest features &amp; improvements before they are announced.": "Learn about the latest features &amp; improvements before they are announced.",
    "For a very limited time:</b> Early access to Smart Connect: Use ChatGPT with your notes <i>without</i> uploading your notes to the cloud using <a href=\"https://chat.openai.com/g/g-9Xb1mRJYl-smart-connect-obsidian\">Smart Connect - Obsidian</a> GPT.": "For a very limited time:</b> Early access to Smart Connect: Use ChatGPT with your notes <i>without</i> uploading your notes to the cloud using <a href=\"https://chat.openai.com/g/g-9Xb1mRJYl-smart-connect-obsidian\">Smart Connect - Obsidian</a> GPT.",
    "Smart View & Embeddings": "Smart View & Embeddings",
    "Notes about embedding models:": "Notes about embedding models:",
    "IMPORTANT: make sure local <code>BGE-micro-v2</code> embedding model works before trying other local models.": "IMPORTANT: make sure local <code>BGE-micro-v2</code> embedding model works before trying other local models.",
    "Local model compatibility depends on available CPU and RAM. Try reducing the max tokens (context) if a local model if failing.": "Local model compatibility depends on available CPU and RAM. Try reducing the max tokens (context) if a local model if failing.",
    "API models are not dependent on local compute, but they require an API key and send your notes to third-party servers for processing.": "API models are not dependent on local compute, but they require an API key and send your notes to third-party servers for processing.",
    "<h3>Notes embeddings</h3>": "<h3>Notes embeddings</h3>",
    "<h3>Blocks (excerpts) embeddings</h3>": "<h3>Blocks (excerpts) embeddings</h3>",
    "<h1>Smart Connections</h1>": "<h1>Smart Connections</h1>",
    "Enter a number": "Enter a number",
    "<h1>Smart Chat</h1>": "<h1>Smart Chat</h1>",
    "<h3>System Prompts</h3>": "<h3>System Prompts</h3>",
    "<h1>Force Refresh</h1>": "<h1>Force Refresh</h1>",
    "<h1>Muted Notices</h1>": "<h1>Muted Notices</h1>",
    "<h3>Data Management</h3>": "<h3>Data Management</h3>",
    "No muted notices.": "No muted notices.",
    "Loading Smart Connections": "Loading Smart Connections",
    "Waiting for Obsidian Sync to finish": "Waiting for Obsidian Sync to finish",
    "Hi there, welcome to the Smart Chat.&nbsp;Ask me a question about your notes and I'll try to answer it.": "Hi there, welcome to the Smart Chat.&nbsp;Ask me a question about your notes and I'll try to answer it.",
    "Try &quot;Based on my notes&quot; or &quot;Summarize [[this note]]&quot; or &quot;Important tasks in /folder/&quot;": "Try &quot;Based on my notes&quot; or &quot;Summarize [[this note]]&quot; or &quot;Important tasks in /folder/&quot;",
    "Enter your OpenAI API Key": "Enter your OpenAI API Key",
    "\"name\": \"Import Sources\"": "\"name\": \"Import Sources\"",
    "\"description\": \"Import sources from file system.\"": "\"description\": \"Import sources from file system.\"",
    "\"name\": \"Refresh Sources\"": "\"name\": \"Refresh Sources\"",
    "\"description\": \"Prunes old data and re-imports all sources and blocks.\"": "\"description\": \"Prunes old data and re-imports all sources and blocks.\"",
    "Open Conversation Note": "Open Conversation Note",
    "Chat History": "Chat History",
    "Chat Options": "Chat Options",
    "Chat Settings": "Chat Settings",
    "New Chat": "New Chat",
    "UNTITLED CHAT": "UNTITLED CHAT",
    "`[Smart Connections ": "`[Smart Connections ",
    "done initial scan": "done initial scan",
    "Initial scan complete": "Initial scan complete",
    "Enter a model name": "Enter a model name",
    "Enter a protocol": "Enter a protocol",
    "Enter a host": "Enter a host",
    "Enter a port number": "Enter a port number",
    "Enter a path": "Enter a path",
    "data-name=\"Model Platform\"": "data-name=\"Model Platform\"",
    "data-name=\"Model Name\"": "data-name=\"Model Name\"",
    "data-name=\"Refresh Models List\"": "data-name=\"Refresh Models List\"",
    "data-name=\"<%= chat_platform.description %> API Key\"": "data-name=\"<%= chat_platform.description %> API Key\"",
    "data-name=\"protocol\"": "data-name=\"protocol\"",
    "data-name=\"hostname\"": "data-name=\"hostname\"",
    "data-name=\"port\"": "data-name=\"port\"",
    "data-name=\"path\"": "data-name=\"path\"",
    "data-name=\"streaming\"": "data-name=\"streaming\"",
    "data-name=\"Max input tokens\"": "data-name=\"Max input tokens\"",
    "data-name=\"API Key\"": "data-name=\"API Key\"",
    "data-name=\"Notes Embedding Model\"": "data-name=\"Notes Embedding Model\"",
    "data-name=\"Blocks Embedding Model\"": "data-name=\"Blocks Embedding Model\"",
    "data-name=\"Minimum Embedding Length\"": "data-name=\"Minimum Embedding Length\"",
    "data-name=\"OpenAI API Key for embeddings\"": "data-name=\"OpenAI API Key for embeddings\"",
    "data-name=\"Local Embedding Max Tokens\"": "data-name=\"Local Embedding Max Tokens\"",
    "data-name=\"Connect to Smart Connect\"": "data-name=\"Connect to Smart Connect\"",
    "data-name=\"Show Full Path\"": "data-name=\"Show Full Path\"",
    "data-name=\"Easy Install\"": "data-name=\"Easy Install\"",
    "data-name=\"Supporter License Key\"": "data-name=\"Supporter License Key\"",
    "data-name=\"Smart Connect - Obsidian GPT\"": "data-name=\"Smart Connect - Obsidian GPT\"",
    "data-name=\"Enable Mobile (EXPERIMENTAL)\"": "data-name=\"Enable Mobile (EXPERIMENTAL)\"",
    "data-name=\"Open Supporter Community Chat\"": "data-name=\"Open Supporter Community Chat\"",
    "data-name=\"Upgrade to Early Access Version (v2.2)\"": "data-name=\"Upgrade to Early Access Version (v2.2)\"",
    "data-name=\"Become a Supporter\"": "data-name=\"Become a Supporter\"",
    "data-name=\"Legacy Transformers (no GPU)\"": "data-name=\"Legacy Transformers (no GPU)\"",
    "data-name=\"System Prompts Folder\"": "data-name=\"System Prompts Folder\"",
    "data-name=\"Default Language\"": "data-name=\"Default Language\"",
    "data-name=\"File Exclusions\"": "data-name=\"File Exclusions\"",
    "data-name=\"Folder Exclusions\"": "data-name=\"Folder Exclusions\"",
    "data-name=\"Exclude all top-level folders\"": "data-name=\"Exclude all top-level folders\"",
    "data-name=\"Heading Exclusions\"": "data-name=\"Heading Exclusions\"",
    "data-name=\"Refresh Embeddings\"": "data-name=\"Refresh Embeddings\"",
    "data-name=\"Smart Connections Folder\"": "data-name=\"Smart Connections Folder\"",
    "data-name=\"Smart Chat History Folder\"": "data-name=\"Smart Chat History Folder\"",
    "data-name=\"Revert to Stable Release\"": "data-name=\"Revert to Stable Release\"",
    "data-button=\"rename\"": "data-button=\"rename\"",
    "data-description=\"'Excluded file' matchers separated by a comma.": "data-description=\"'Excluded file' matchers separated by a comma.",
    "'Excluded file' matchers separated by a comma. Works for 'blocks' only.": "'Excluded file' matchers separated by a comma. Works for 'blocks' only.",
    "data-description=\"Select a model platform to use with Smart Chat.\"": "data-description=\"Select a model platform to use with Smart Chat.\"",
    "data-description=\"API Key for <%= chat_platform.description %>.\"": "data-description=\"API Key for <%= chat_platform.description %>.\"",
    "data-description=\"Name of the custom model.\"": "data-description=\"Name of the custom model.\"",
    "data-description=\"Protocol for chat server (http or https).\"": "data-description=\"Protocol for chat server (http or https).\"",
    "data-description=\"Host for local chat server.\"": "data-description=\"Host for local chat server.\"",
    "data-description=\"Port for local chat server.\"": "data-description=\"Port for local chat server.\"",
    "data-description=\"Path for local chat server.\"": "data-description=\"Path for local chat server.\"",
    "data-description=\"Enable streaming for local chat server. Disable if you are getting CORS errors.\"": "data-description=\"Enable streaming for local chat server. Disable if you are getting CORS errors.\"",
    "data-description=\"Maximum number of tokens for input to the model.\"": "data-description=\"Maximum number of tokens for input to the model.\"",
    "data-description=\"Host for chat server.\"": "data-description=\"Host for chat server.\"",
    "data-description=\"Path for chat server.\"": "data-description=\"Path for chat server.\"",
    "data-description=\"Enable streaming for chat server. Disable if you are getting CORS errors.\"": "data-description=\"Enable streaming for chat server. Disable if you are getting CORS errors.\"",
    "data-description=\"API Key for the custom server sent as a header (bearer token).\"": "data-description=\"API Key for the custom server sent as a header (bearer token).\"",
    "data-description=\"Select a model to use for embedding your notes.\"": "data-description=\"Select a model to use for embedding your notes.\"",
    "data-description=\"Select a model to use for embedding your blocks.\"": "data-description=\"Select a model to use for embedding your blocks.\"",
    "data-description=\"Minimum length of note to embed.\"": "data-description=\"Minimum length of note to embed.\"",
    "data-description=\"Reduce max tokens depending on available resources (CPU, RAM).\"": "data-description=\"Reduce max tokens depending on available resources (CPU, RAM).\"",
    "data-description=\"Show full path in view.\"": "data-description=\"Show full path in view.\"",
    "data-description=\"Install the latest version of Smart Templates.\"": "data-description=\"Install the latest version of Smart Templates.\"",
    "data-description=\"Note: this is not required to use Smart Connections.\"": "data-description=\"Note: this is not required to use Smart Connections.\"",
    "data-description='Chat with your notes in ChatGPT without uploading your notes to the cloud!'": "data-description='Chat with your notes in ChatGPT without uploading your notes to the cloud!'",
    "data-description=\"Enable mobile support for Smart Connections.\"": "data-description=\"Enable mobile support for Smart Connections.\"",
    "data-description='Join the supporter community chat.'": "data-description='Join the supporter community chat.'",
    "data-description=\"Upgrade to v2.2 (Early Access) to access new features and improvements.\"": "data-description=\"Upgrade to v2.2 (Early Access) to access new features and improvements.\"",
    "data-description=\"Become a Supporter\"": "data-description=\"Become a Supporter\"",
    "data-description=\"Use legacy transformers (v2) instead of v3.\"": "data-description=\"Use legacy transformers (v2) instead of v3.\"",
    "data-description=\"Folder to store system prompts. Available in chat by typing '@'\"": "data-description=\"Folder to store system prompts. Available in chat by typing '@'\"",
    "data-description=\"Default language to use for Smart Chat. Changes which self-referential pronouns will trigger lookup of your notes.\"": "data-description=\"Default language to use for Smart Chat. Changes which self-referential pronouns will trigger lookup of your notes.\"",
    "data-description=\"Set folder exclusions to exclude all top-level folders.\"": "data-description=\"Set folder exclusions to exclude all top-level folders.\"",
    "data-description=\"Clear notes data and reprocess.\"": "data-description=\"Clear notes data and reprocess.\"",
    "data-description=\"Folder to store Smart Connections data.\"": "data-description=\"Folder to store Smart Connections data.\"",
    "data-description=\"Folder to store Smart Chat history. Use a preceding <code>.</code> to hide it (ex. <code>.smart-chats</code>).\"": "data-description=\"Folder to store Smart Chat history. Use a preceding <code>.</code> to hide it (ex. <code>.smart-chats</code>).\"",
    "data-description=\"WARNING: DO NOT use unless you know what you are doing! This will delete all of your current embeddings from OpenAI and trigger reprocessing of your entire vault!\"": "data-description=\"WARNING: DO NOT use unless you know what you are doing! This will delete all of your current embeddings from OpenAI and trigger reprocessing of your entire vault!\"",
    "data-description='Revert to the stable release of Smart Connections. Requires \"Check for Updates\" and then \"Update Plugin\" to complete the process.'": "data-description='Revert to the stable release of Smart Connections. Requires \"Check for Updates\" and then \"Update Plugin\" to complete the process.'",
    "return \"*API Error. See console logs for details.*\"": "return \"*API Error. See console logs for details.*\"",
    "return \"*An error occurred. See console logs for details.*\"": "return \"*An error occurred. See console logs for details.*\"",
    "return \"canvas\"": "return \"canvas\"",
    "return \"Smart Connections Files\"": "return \"Smart Connections Files\"",
    "return \"Smart Connections Chat\"": "return \"Smart Connections Chat\"",
    "return \"Current: \"": "return \"Current: \"",
    "return \"smart_chatgpt\"": "return \"smart_chatgpt\"",
    "return \"Smart ChatGPT\"": "return \"Smart ChatGPT\"",
    "return \"Smart Connections Supporter Private Chat\"": "return \"Smart Connections Supporter Private Chat\"",
    "return \"BLOCK NOT FOUND\"": "return \"BLOCK NOT FOUND\"",
    "console.log(\"no content for \", entity.file_path);\n            return { blocks: [], outlinks: [] };\n          }\n          content = content.replace(/\\r\\n/g, \"\\n\")": "console.log(\"no content for \", entity.file_path);\n            return { blocks: [], outlinks: [] };\n          }\n          content = content.replace(/\\r\\n/g, \"\\n\")",
    "console.log(\"stream-end\")": "console.log(\"stream-end\")",
    "console.log(\"Using fetch\")": "console.log(\"Using fetch\")",
    "console.log(\"Model data retrieved:\", data);\n        } else {\n          console.log(\"Using request adapter\")": "console.log(\"Model data retrieved:\", data);\n        } else {\n          console.log(\"Using request adapter\")",
    "console.log(\"has chat model adapter\")": "console.log(\"has chat model adapter\")",
    "console.log(\"Streaming Request: \")": "console.log(\"Streaming Request: \")",
    "console.log(\"ReadyState: \" + e.readyState);\n            });\n            this.active_stream.addEventListener(\"error\", (e) => {\n              console.error(e);\n              this.done_handler(\"*API 错误。请查看控制台日志以获取详细信息。*\")": "console.log(\"ReadyState: \" + e.readyState);\n            });\n            this.active_stream.addEventListener(\"error\", (e) => {\n              console.error(e);\n              this.done_handler(\"*API 错误。请查看控制台日志以获取详细信息。*\")",
    "console.log(\"init SmartChatRenderer\")": "console.log(\"init SmartChatRenderer\")",
    "console.log(\"tool call\")": "console.log(\"tool call\")",
    "console.log(\"Creating new conversation\")": "console.log(\"Creating new conversation\")",
    "console.log(\"get_conversation_ids_and_file_types\")": "console.log(\"get_conversation_ids_and_file_types\")",
    "console.log(\"smart_env_settings\", this.smart_env_settings);\n    await this.ready_to_load_collections(main);\n    await this.init_collections();\n    this.init_smart_change();\n  }\n  async ready_to_load_collections(main) {\n    if (typeof main?.ready_to_load_collections === \"function\")": "console.log(\"smart_env_settings\", this.smart_env_settings);\n    await this.ready_to_load_collections(main);\n    await this.init_collections();\n    this.init_smart_change();\n  }\n  async ready_to_load_collections(main) {\n    if (typeof main?.ready_to_load_collections === \"function\")",
    "console.log(\"Parent changed, reloading\")": "console.log(\"Parent changed, reloading\")",
    "console.log(\"View inactive, skipping render nearest\")": "console.log(\"View inactive, skipping render nearest\")",
    "console.log(\"render_nearest\", context);\n    await this.prepare_to_render_nearest(container);\n    if (typeof context === \"string\")": "console.log(\"render_nearest\", context);\n    await this.prepare_to_render_nearest(container);\n    if (typeof context === \"string\")",
    "console.log(\"re-rank\", re_rank);\n      if (re_rank && typeof this.plugin.re_rank_connections === \"function\")": "console.log(\"re-rank\", re_rank);\n      if (re_rank && typeof this.plugin.re_rank_connections === \"function\")",
    "console.log(\"re-ranking\")": "console.log(\"re-ranking\")",
    "console.log(\"already rendered\")": "console.log(\"already rendered\")",
    "console.log(\"rendering result\")": "console.log(\"rendering result\")",
    "console.log(\"render_file_counts\")": "console.log(\"render_file_counts\")",
    "console.log(\"Accepted\")": "console.log(\"Accepted\")",
    "console.log(\"File does not exist, creating it\")": "console.log(\"File does not exist, creating it\")",
    "console.log(\"Data file not found: \", this.data_path, data_ajson);\n        return this.item.queue_import();\n      }\n      const ajson_lines = data_ajson.split(\"\\n\")": "console.log(\"Data file not found: \", this.data_path, data_ajson);\n        return this.item.queue_import();\n      }\n      const ajson_lines = data_ajson.split(\"\\n\")",
    "console.log(\"loading view\")": "console.log(\"loading view\")",
    "console.log(\"Already saving\")": "console.log(\"Already saving\")",
    "console.log(\"Saving \" + this.collection_name + \": \", save_queue.length + \" items\")": "console.log(\"Saving \" + this.collection_name + \": \", save_queue.length + \" items\")",
    "console.log(\"Saved \" + this.collection_name + \" in \" + (Date.now() - time_start) + \"ms\")": "console.log(\"Saved \" + this.collection_name + \" in \" + (Date.now() - time_start) + \"ms\")",
    "console.log(\"Already loading\")": "console.log(\"Already loading\")",
    "console.log(\"Loading \" + this.collection_name + \": \", load_queue.length + \" items\")": "console.log(\"Loading \" + this.collection_name + \": \", load_queue.length + \" items\")",
    "console.log(\"Loaded \" + this.collection_name + \" in \" + (Date.now() - time_start) + \"ms\")": "console.log(\"Loaded \" + this.collection_name + \" in \" + (Date.now() - time_start) + \"ms\")",
    "console.log(\"smart_embed_model_class must be included in the `env.opts` property\")": "console.log(\"smart_embed_model_class must be included in the `env.opts` property\")",
    "console.log(\"model_key not set\")": "console.log(\"model_key not set\")",
    "console.log(\"window.document not available\")": "console.log(\"window.document not available\")",
    "console.log(\"no vec\")": "console.log(\"no vec\")",
    "console.log(\"Embed queue processing halted\")": "console.log(\"Embed queue processing halted\")",
    "console.log(\"Smart Connections: No items in import queue\")": "console.log(\"Smart Connections: No items in import queue\")",
    "console.log(\"copy message to clipboard\")": "console.log(\"copy message to clipboard\")",
    "console.log(\"should trigger retrieval\")": "console.log(\"should trigger retrieval\")",
    "console.log(\"get_context_hyde\")": "console.log(\"get_context_hyde\")",
    "console.log(\"Dataview API not found. No dataview connection for Smart Connect.\")": "console.log(\"Dataview API not found. No dataview connection for Smart Connect.\")",
    "console.log(\"Message received:\", data);\n    if (data.fx === \"full_render\")": "console.log(\"Message received:\", data);\n    if (data.fx === \"full_render\")",
    "console.log(\"waiting for changes\")": "console.log(\"waiting for changes\")",
    "console.log(\"Server closed\")": "console.log(\"Server closed\")",
    "console.log(\"Window server reference closed\")": "console.log(\"Window server reference closed\")",
    "console.log(\"Environment no longer available. Closing server.\")": "console.log(\"Environment no longer available. Closing server.\")",
    "console.log(\"loading iframe adapter\", this.smart_embed.opts);\n    this.iframe = document.createElement(\"iframe\")": "console.log(\"loading iframe adapter\", this.smart_embed.opts);\n    this.iframe = document.createElement(\"iframe\")",
    "console.log(\"model loaded\")": "console.log(\"model loaded\")",
    "console.log(\"[Transformers] Using GPU\")": "console.log(\"[Transformers] Using GPU\")",
    "console.log(\"[Transformers] Using CPU\")": "console.log(\"[Transformers] Using CPU\")",
    "console.log(\"init\")": "console.log(\"init\")",
    "console.log(\"empty batch (or all items have empty embed_input)\")": "console.log(\"empty batch (or all items have empty embed_input)\")",
    "console.log(\"Warning: prepare_embed_input received an empty string\")": "console.log(\"Warning: prepare_embed_input received an empty string\")",
    "console.log(\"Warning: prepare_embed_input resulted in an empty string after trimming\")": "console.log(\"Warning: prepare_embed_input resulted in an empty string after trimming\")",
    "console.log(\"embed_input is empty after filtering null and empty strings\")": "console.log(\"embed_input is empty after filtering null and empty strings\")",
    "console.log(\"unloading plugin\")": "console.log(\"unloading plugin\")",
    "console.log(\"Loading Smart Connections v2...\")": "console.log(\"Loading Smart Connections v2...\")",
    "console.log(\"Smart Connections v2 loaded\")": "console.log(\"Smart Connections v2 loaded\")",
    "console.log(\"Smart Connections: Waiting for Obsidian Sync to finish\")": "console.log(\"Smart Connections: Waiting for Obsidian Sync to finish\")"
  }
}