{
  "manifest": {
    "translationVersion": 1732518047629,
    "pluginVersion": "2.2.85"
  },
  "description": {
    "original": "Find links to similar notes using artificial intelligence from OpenAI.",
    "translation": "Find links to similar notes using artificial intelligence from OpenAI."
  },
  "dict": {
    "placeholder: \"Enter number ex. 300\"": "placeholder: \"Enter number ex. 300\"",
    "placeholder: \"Enter OpenAI API Key\"": "placeholder: \"Enter OpenAI API Key\"",
    "placeholder: \"Enter number ex. 10\"": "placeholder: \"Enter number ex. 10\"",
    "data-description='Chat with your notes in ChatGPT without uploading your notes to the cloud!'": "data-description='Chat with your notes in ChatGPT without uploading your notes to the cloud!'",
    "data-description='Join the supporter community chat.'": "data-description='Join the supporter community chat.'",
    "data-description='Revert to the stable release of Smart Connections. Requires \"Check for Updates\" and then \"Update Plugin\" to complete the process.'": "data-description='Revert to the stable release of Smart Connections. Requires \"Check for Updates\" and then \"Update Plugin\" to complete the process.'",
    "data-description=\"Toggle the re-ranker\"": "data-description=\"Toggle the re-ranker\"",
    "data-description=\"Show full path in view.\"": "data-description=\"Show full path in view.\"",
    "data-description=\"Limit the number of results.\"": "data-description=\"Limit the number of results.\"",
    "data-description=\"Exclude inlinks\"": "data-description=\"Exclude inlinks\"",
    "data-description=\"Exclude outlinks\"": "data-description=\"Exclude outlinks\"",
    "data-description=\"Require that results match this value.\"": "data-description=\"Require that results match this value.\"",
    "data-description=\"Exclude results that match this value.\"": "data-description=\"Exclude results that match this value.\"",
    "data-description=\"Default language to use for Smart Chat. Changes which self-referential pronouns will trigger lookup of your notes. <b id='self-referential-pronouns'>Current: my, I, me, mine, our, ours, us, we</b>\"": "data-description=\"Default language to use for Smart Chat. Changes which self-referential pronouns will trigger lookup of your notes. <b id='self-referential-pronouns'>Current: my, I, me, mine, our, ours, us, we</b>\"",
    "data-description=\"Select a model platform to use with Smart Chat.\"": "data-description=\"Select a model platform to use with Smart Chat.\"",
    "data-description=\"<a href='<%= chat_platform.signup_url %>'>Get API Key</a> for <%= chat_platform.description %>.\"": "data-description=\"<a href='<%= chat_platform.signup_url %>'>Get API Key</a> for <%= chat_platform.description %>.\"",
    "data-description=\"API Key for <%= chat_platform.description %>.\"": "data-description=\"API Key for <%= chat_platform.description %>.\"",
    "data-description=\"Name of the custom model.\"": "data-description=\"Name of the custom model.\"",
    "data-description=\"Protocol for chat server (http or https).\"": "data-description=\"Protocol for chat server (http or https).\"",
    "data-description=\"Host for local chat server.\"": "data-description=\"Host for local chat server.\"",
    "data-description=\"Port for local chat server.\"": "data-description=\"Port for local chat server.\"",
    "data-description=\"Path for local chat server.\"": "data-description=\"Path for local chat server.\"",
    "data-description=\"Enable streaming for local chat server. Disable if you are getting CORS errors.\"": "data-description=\"Enable streaming for local chat server. Disable if you are getting CORS errors.\"",
    "data-description=\"Maximum number of tokens for input to the model.\"": "data-description=\"Maximum number of tokens for input to the model.\"",
    "data-description=\"Host for chat server.\"": "data-description=\"Host for chat server.\"",
    "data-description=\"Path for chat server.\"": "data-description=\"Path for chat server.\"",
    "data-description=\"Enable streaming for chat server. Disable if you are getting CORS errors.\"": "data-description=\"Enable streaming for chat server. Disable if you are getting CORS errors.\"",
    "data-description=\"API Key for the custom server sent as a header (bearer token).\"": "data-description=\"API Key for the custom server sent as a header (bearer token).\"",
    "data-description=\"Upgrade to v2.2 (Early Access) to access new features and improvements.\"": "data-description=\"Upgrade to v2.2 (Early Access) to access new features and improvements.\"",
    "data-description=\"Become a Supporter\"": "data-description=\"Become a Supporter\"",
    "data-description=\"Note: this is not required to use Smart Connections.\"": "data-description=\"Note: this is not required to use Smart Connections.\"",
    "data-description=\"Enable mobile support for Smart Connections.\"": "data-description=\"Enable mobile support for Smart Connections.\"",
    "data-btn-text=\"Upgrade to v2.2\"": "data-btn-text=\"Upgrade to v2.2\"",
    "data-btn-text=\"Open GPT\"": "data-btn-text=\"Open GPT\"",
    "data-btn-text=\"Join us\"": "data-btn-text=\"Join us\"",
    "data-btn-text=\"Unmute\"": "data-btn-text=\"Unmute\"",
    "data-btn-text=\"Revert\"": "data-btn-text=\"Revert\"",
    "aria-label=\"Open help documentation\"": "aria-label=\"Open help documentation\"",
    "data-button=\"Save\"": "data-button=\"Save\"",
    "data-placeholder=\"Enter a folder name\"": "data-placeholder=\"Enter a folder name\"",
    "data-placeholder=\"Enter an API Key\"": "data-placeholder=\"Enter an API Key\"",
    "data-placeholder=\"Enter a model name\"": "data-placeholder=\"Enter a model name\"",
    "data-placeholder=\"Enter a protocol\"": "data-placeholder=\"Enter a protocol\"",
    "data-placeholder=\"Enter a host\"": "data-placeholder=\"Enter a host\"",
    "data-placeholder=\"Enter a port number\"": "data-placeholder=\"Enter a port number\"",
    "data-placeholder=\"Enter a path\"": "data-placeholder=\"Enter a path\"",
    "data-placeholder=\"Enter a number\"": "data-placeholder=\"Enter a number\"",
    "data-placeholder=\"Enter your license_key\"": "data-placeholder=\"Enter your license_key\"",
    "data-name=\"Smart Chat History Folder\"": "data-name=\"Smart Chat History Folder\"",
    "data-name=\"System Prompts Folder\"": "data-name=\"System Prompts Folder\"",
    "data-name=\"Cohere API Key\"": "data-name=\"Cohere API Key\"",
    "data-name=\"Toggle Re-Ranker\"": "data-name=\"Toggle Re-Ranker\"",
    "data-name=\"Show Full Path\"": "data-name=\"Show Full Path\"",
    "data-name=\"Results Limit\"": "data-name=\"Results Limit\"",
    "data-name=\"Exclude Inlinks\"": "data-name=\"Exclude Inlinks\"",
    "data-name=\"Exclude Outlinks\"": "data-name=\"Exclude Outlinks\"",
    "data-name=\"Include Filter\"": "data-name=\"Include Filter\"",
    "data-name=\"Exclude Filter\"": "data-name=\"Exclude Filter\"",
    "data-name=\"Default Language\"": "data-name=\"Default Language\"",
    "data-name=\"Model Platform\"": "data-name=\"Model Platform\"",
    "data-name=\"Model Name\"": "data-name=\"Model Name\"",
    "data-name=\"Refresh Models List\"": "data-name=\"Refresh Models List\"",
    "data-name=\"<%= chat_platform.description %> API Key\"": "data-name=\"<%= chat_platform.description %> API Key\"",
    "data-name=\"protocol\"": "data-name=\"protocol\"",
    "data-name=\"hostname\"": "data-name=\"hostname\"",
    "data-name=\"port\"": "data-name=\"port\"",
    "data-name=\"path\"": "data-name=\"path\"",
    "data-name=\"streaming\"": "data-name=\"streaming\"",
    "data-name=\"Max input tokens\"": "data-name=\"Max input tokens\"",
    "data-name=\"API Key\"": "data-name=\"API Key\"",
    "data-name=\"Upgrade to Early Access Version (v2.2)\"": "data-name=\"Upgrade to Early Access Version (v2.2)\"",
    "data-name=\"Become a Supporter\"": "data-name=\"Become a Supporter\"",
    "data-name=\"Supporter License Key\"": "data-name=\"Supporter License Key\"",
    "data-name=\"Smart Connect - Obsidian GPT\"": "data-name=\"Smart Connect - Obsidian GPT\"",
    "data-name=\"Supporter Community Chat\"": "data-name=\"Supporter Community Chat\"",
    "data-name=\"Enable Mobile (EXPERIMENTAL)\"": "data-name=\"Enable Mobile (EXPERIMENTAL)\"",
    "data-name=\"Revert to Stable Release\"": "data-name=\"Revert to Stable Release\"",
    "description: \"Embedded JavaScript templates\"": "description: \"Embedded JavaScript templates\"",
    "description: \"Open Router\"": "description: \"Open Router\"",
    "description: \"Custom Local (OpenAI format)\"": "description: \"Custom Local (OpenAI format)\"",
    "description: \"Custom API (OpenAI format)\"": "description: \"Custom API (OpenAI format)\"",
    "description: `Max input tokens: ${model.context_length}, Finetuned: ${model.finetuned}`": "description: `Max input tokens: ${model.context_length}, Finetuned: ${model.finetuned}`",
    "description: \"Toggle on if this is an Obsidian vault.\"": "description: \"Toggle on if this is an Obsidian vault.\"",
    "description: \"Comma-separated list of files to exclude.\"": "description: \"Comma-separated list of files to exclude.\"",
    "description: \"Comma-separated list of folders to exclude.\"": "description: \"Comma-separated list of folders to exclude.\"",
    "description: \"Comma-separated list of headings to exclude.\"": "description: \"Comma-separated list of headings to exclude.\"",
    "description: \"Embed blocks using the embedding model.\"": "description: \"Embed blocks using the embedding model.\"",
    "description: \"Local, 512 tokens, 384 dim\"": "description: \"Local, 512 tokens, 384 dim\"",
    "description: \"Local, 4,096 tokens, 384 dim\"": "description: \"Local, 4,096 tokens, 384 dim\"",
    "description: \"Local, 8,192 tokens, 512 dim, Chinese/English bilingual\"": "description: \"Local, 8,192 tokens, 512 dim, Chinese/English bilingual\"",
    "description: \"API, 8,191 tokens, 1,536 dim\"": "description: \"API, 8,191 tokens, 1,536 dim\"",
    "description: \"API, 8,191 tokens, 3,072 dim\"": "description: \"API, 8,191 tokens, 3,072 dim\"",
    "description: \"API, 8,191 tokens, 512 dim\"": "description: \"API, 8,191 tokens, 512 dim\"",
    "description: \"API, 8,191 tokens, 256 dim\"": "description: \"API, 8,191 tokens, 256 dim\"",
    "description: \"Local, 8,192 tokens, 512 dim\"": "description: \"Local, 8,192 tokens, 512 dim\"",
    "description: \"Local, 8,192 tokens, 256 dim\"": "description: \"Local, 8,192 tokens, 256 dim\"",
    "description: \"Local, 2,048 tokens, 768 dim\"": "description: \"Local, 2,048 tokens, 768 dim\"",
    "description: \"Select an embedding model.\"": "description: \"Select an embedding model.\"",
    "description: \"Minimum length of note to embed.\"": "description: \"Minimum length of note to embed.\"",
    "description: \"Required for OpenAI embedding models\"": "description: \"Required for OpenAI embedding models\"",
    "description: \"Number of embeddings to process per batch on GPU. Use 0 to disable GPU.\"": "description: \"Number of embeddings to process per batch on GPU. Use 0 to disable GPU.\"",
    "description: \"Use legacy transformers (v2) instead of v3.\"": "description: \"Use legacy transformers (v2) instead of v3.\"",
    "description: \"Performs a semantic search of the user's data. Required: hypothetical_1 and hypothetical_2. Optional: hypothetical_3.\"": "description: \"Performs a semantic search of the user's data. Required: hypothetical_1 and hypothetical_2. Optional: hypothetical_3.\"",
    "description: \"Short hypothetical notes predicted to be semantically similar to the notes necessary to fulfill the user's request. At least three hypotheticals per request. The hypothetical notes may contain paragraphs, lists, or checklists in markdown format. Hypothetical notes always begin with breadcrumbs containing the anticipated folder(s), file name, and relevant headings separated by ' > ' (no slashes). Format: PARENT FOLDER NAME > CHILD FOLDER NAME > FILE NAME > HEADING 1 > HEADING 2 > HEADING 3: HYPOTHETICAL NOTE CONTENTS.\"": "description: \"Short hypothetical notes predicted to be semantically similar to the notes necessary to fulfill the user's request. At least three hypotheticals per request. The hypothetical notes may contain paragraphs, lists, or checklists in markdown format. Hypothetical notes always begin with breadcrumbs containing the anticipated folder(s), file name, and relevant headings separated by ' > ' (no slashes). Format: PARENT FOLDER NAME > CHILD FOLDER NAME > FILE NAME > HEADING 1 > HEADING 2 > HEADING 3: HYPOTHETICAL NOTE CONTENTS.\"",
    "description: \"Must be distinct from and not share any breadcrumbs with hypothetical_1.\"": "description: \"Must be distinct from and not share any breadcrumbs with hypothetical_1.\"",
    "description: \"Must be distinct from hypothetical_1 and hypothetical_2.\"": "description: \"Must be distinct from hypothetical_1 and hypothetical_2.\"",
    "\"description\": \"Enable Smart Changes (prevents accidental deletions/overwrites).\"": "\"description\": \"Enable Smart Changes (prevents accidental deletions/overwrites).\"",
    "text: `IMPORTANT: You must use the \"${body.tools[0].function_declarations[0].name}\" function tool!`": "text: `IMPORTANT: You must use the \"${body.tools[0].function_declarations[0].name}\" function tool!`",
    "text: `Image caption: ${caption}`": "text: `Image caption: ${caption}`",
    "text: \"Pause\"": "text: \"Pause\"",
    "text: \"Resume\"": "text: \"Resume\"",
    "text: `[Smart Connections v${this.main.manifest.version}]`": "text: `[Smart Connections v${this.main.manifest.version}]`",
    "text: \"Open Smart View\"": "text: \"Open Smart View\"",
    "text: \"Refresh\"": "text: \"Refresh\"",
    ".setText(`Included files: ${this.included_files} / Total files: ${this.total_files}`)": ".setText(`Included files: ${this.included_files} / Total files: ${this.total_files}`)",
    ".setPlaceholder(\"Type the name of a file...\")": ".setPlaceholder(\"Type the name of a file...\")",
    ".setPlaceholder(\"Type the name of a folder...\")": ".setPlaceholder(\"Type the name of a folder...\")",
    ".setPlaceholder(\"Type the name of a system prompt...\")": ".setPlaceholder(\"Type the name of a system prompt...\")",
    ".setPlaceholder(\"Type the name of a chat session...\")": ".setPlaceholder(\"Type the name of a chat session...\")",
    "console.error(\"Invalid input for count_tokens\", input);": "console.error(\"Invalid input for count_tokens\", input);",
    "console.error(\"Failed to fetch model data:\", error);": "console.error(\"Failed to fetch model data:\", error);",
    "console.error(\"No API key provided\");": "console.error(\"No API key provided\");",
    "console.error(`No models found for ${this.platform_key}`, models);": "console.error(`No models found for ${this.platform_key}`, models);",
    "console.error(\"get_many called with non-array keys: \", keys);": "console.error(\"get_many called with non-array keys: \", keys);",
    "console.error(`Error loading SmartEmbedModel for ${this.embed_model_key}`);": "console.error(`Error loading SmartEmbedModel for ${this.embed_model_key}`);",
    "console.error(`Error processing ${this.collection_key} embed queue: ` + JSON.stringify(e || {}, null, 2));": "console.error(`Error processing ${this.collection_key} embed queue: ` + JSON.stringify(e || {}, null, 2));",
    "console.error(\"Error during update:\", error);": "console.error(\"Error during update:\", error);",
    "console.error(\"Error during read:\", error);": "console.error(\"Error during read:\", error);",
    "console.error(\"Error during remove:\", error);": "console.error(\"Error during remove:\", error);",
    "console.error(\"error_during_move:\", error);": "console.error(\"error_during_move:\", error);",
    "console.error(\"Error during merge:\", error);": "console.error(\"Error during merge:\", error);",
    "console.error(`Error searching item ${item.id || \"unknown\"}:`, error);": "console.error(`Error searching item ${item.id || \"unknown\"}:`, error);",
    "console.error(`Error getting embed queue: ` + JSON.stringify(e || {}, null, 2));": "console.error(`Error getting embed queue: ` + JSON.stringify(e || {}, null, 2));",
    "console.error(\"error_during_block_move:\", error);": "console.error(\"error_during_block_move:\", error);",
    "console.error(`Error getting should_embed for ${this.key}: ` + JSON.stringify(e || {}, null, 2));": "console.error(`Error getting should_embed for ${this.key}: ` + JSON.stringify(e || {}, null, 2));",
    "console.error(\"error_embedding_batch\", err);": "console.error(\"error_embedding_batch\", err);",
    "console.error(\"Error processing message:\", error);": "console.error(\"Error processing message:\", error);",
    "console.error(`Error checking if path is excluded: ${e.message}`);": "console.error(`Error checking if path is excluded: ${e.message}`);",
    "console.error(`Path: `, _path);": "console.error(`Path: `, _path);",
    "console.error(\"Error during write:\", error);": "console.error(\"Error during write:\", error);",
    "console.error(\"No callback or href found for button.\");": "console.error(\"No callback or href found for button.\");",
    "console.error(`Options callback ${elm.dataset.optionsCallback} is not a function.`);": "console.error(`Options callback ${elm.dataset.optionsCallback} is not a function.`);",
    "console.error(`Failed to create server after retry. Port ${this.port} is still in use.`);": "console.error(`Failed to create server after retry. Port ${this.port} is still in use.`);",
    "console.error(\"Error downloading early access update\", v2);": "console.error(\"Error downloading early access update\", v2);",
    "Error(`Method \"${method_name}\" is not implemented for file type \"${this.item.file_type}\" in \"${this.constructor.name}\".`);": "Error(`Method \"${method_name}\" is not implemented for file type \"${this.item.file_type}\" in \"${this.constructor.name}\".`);",
    "Error(`BLOCK NOT FOUND: No block found with key \"${block_key}\".`);": "Error(`BLOCK NOT FOUND: No block found with key \"${block_key}\".`);",
    "Error(`Input size (${filtered_inputs.length}) exceeds maximum batch size (${this.batch_size})`);": "Error(`Input size (${filtered_inputs.length}) exceeds maximum batch size (${this.batch_size})`);",
    "Error(`Unknown method: ${method}`);": "Error(`Unknown method: ${method}`);",
    "Error(`Path is excluded: ${paths.find((p) => this.is_excluded(p))}`);": "Error(`Path is excluded: ${paths.find((p) => this.is_excluded(p))}`);",
    "Error(`Method ${method} not found in adapter`);": "Error(`Method ${method} not found in adapter`);",
    "Error(`Template '${template_name}' not found.`);": "Error(`Template '${template_name}' not found.`);",
    "Error(`Settings template not found.`);": "Error(`Settings template not found.`);",
    "Error(`Reference not found: ${path}`);": "Error(`Reference not found: ${path}`);",
    "Error(`Unable to start server on port ${this.port} after retry.`));\n          }\n        } else {\n          reject(error);\n        }\n      });\n      this.server.listen(this.port, () => {\n        console.log(`Server running at http://localhost:${this.port}/`);": "Error(`Unable to start server on port ${this.port} after retry.`));\n          }\n        } else {\n          reject(error);\n        }\n      });\n      this.server.listen(this.port, () => {\n        console.log(`Server running at http://localhost:${this.port}/`);",
    "Error('Could not find the include file \"' + options.escapeFunction(path2) + '\"');": "Error('Could not find the include file \"' + options.escapeFunction(path2) + '\"');",
    "Error('Could not find matching close tag for \"' + line + '\".');": "Error('Could not find matching close tag for \"' + line + '\".');",
    "Error(\"Invalid string. Length must be a multiple of 4\");": "Error(\"Invalid string. Length must be a multiple of 4\");",
    "Error(\"Cannot find module '\" + i2 + \"'\");": "Error(\"Cannot find module '\" + i2 + \"'\");",
    "Error(\"cache option requires a filename\");": "Error(\"cache option requires a filename\");",
    "Error(\"Internal EJS error: no file name or template provided\");": "Error(\"Internal EJS error: no file name or template provided\");",
    "Error(\"Please provide a callback function\");": "Error(\"Please provide a callback function\");",
    "Error(\"outputFunctionName is not a valid JS identifier.\");": "Error(\"outputFunctionName is not a valid JS identifier.\");",
    "Error(\"localsName is not a valid JS identifier.\");": "Error(\"localsName is not a valid JS identifier.\");",
    "Error(\"destructuredLocals[\" + i + \"] is not a valid JS identifier.\");": "Error(\"destructuredLocals[\" + i + \"] is not a valid JS identifier.\");",
    "Error(\"This environment does not support async/await\");": "Error(\"This environment does not support async/await\");",
    "Error(\"Arguments to path.resolve must be strings\");": "Error(\"Arguments to path.resolve must be strings\");",
    "Error(\"Arguments to path.join must be strings\");": "Error(\"Arguments to path.join must be strings\");",
    "Error(\"setTimeout has not been defined\");": "Error(\"setTimeout has not been defined\");",
    "Error(\"clearTimeout has not been defined\");": "Error(\"clearTimeout has not been defined\");",
    "Error(\"process.binding is not supported\");": "Error(\"process.binding is not supported\");",
    "Error(\"process.chdir is not supported\");": "Error(\"process.chdir is not supported\");",
    "Error(\"Network response was not ok\");": "Error(\"Network response was not ok\");",
    "Error(\"SmartEnv: Invalid main object provided\");": "Error(\"SmartEnv: Invalid main object provided\");",
    "Error(\"Container is required\");": "Error(\"Container is required\");",
    "Error(\"Item must have key property\");": "Error(\"Item must have key property\");",
    "Error(\"No data adapter class found for \" + this.collection_key + \" or smart_collections\");": "Error(\"No data adapter class found for \" + this.collection_key + \" or smart_collections\");",
    "Error(\"Vectors must have the same length\");": "Error(\"Vectors must have the same length\");",
    "Error(\"Invalid entity reference for move_to operation\");": "Error(\"Invalid entity reference for move_to operation\");",
    "Error(\"merge error: markdown_to_blocks did not return an object as expected.\");": "Error(\"merge error: markdown_to_blocks did not return an object as expected.\");",
    "Error(\"SmartCollectionDataAdapter: load() not implemented\");": "Error(\"SmartCollectionDataAdapter: load() not implemented\");",
    "Error(\"SmartCollectionDataAdapter: save() not implemented\");": "Error(\"SmartCollectionDataAdapter: save() not implemented\");",
    "Error(\"Not implemented\");": "Error(\"Not implemented\");",
    "Error(\"embed_input must be a string\");": "Error(\"embed_input must be a string\");",
    "Error(\"Model not loaded\");": "Error(\"Model not loaded\");",
    "Error(\"SmartFs requires an adapter\");": "Error(\"SmartFs requires an adapter\");",
    "Error(\"setting_class() not implemented\");": "Error(\"setting_class() not implemented\");",
    "Error(\"get_icon_html() not implemented\");": "Error(\"get_icon_html() not implemented\");",
    "Error(\"render_markdown() not implemented\");": "Error(\"render_markdown() not implemented\");",
    "Error(\"open_url() not implemented\");": "Error(\"open_url() not implemented\");",
    "Error(\"handle_folder_select not implemented\");": "Error(\"handle_folder_select not implemented\");",
    "Error(\"handle_file_select not implemented\");": "Error(\"handle_file_select not implemented\");",
    "Error(\"view_type must be implemented in subclass\");": "Error(\"view_type must be implemented in subclass\");",
    "Error(\"display_text must be implemented in subclass\");": "Error(\"display_text must be implemented in subclass\");",
    "Error(\"render_view must be implemented in subclass\");": "Error(\"render_view must be implemented in subclass\");",
    "Error(\"You have used up your free chat limit! Please add your own API key in the Smart Chat settings to enable unlimited personal usage and prevent exhausting the shared community account limit.\");": "Error(\"You have used up your free chat limit! Please add your own API key in the Smart Chat settings to enable unlimited personal usage and prevent exhausting the shared community account limit.\");",
    "Error(\"Smart Connections: plugin disabled while waiting for obsidian sync\");": "Error(\"Smart Connections: plugin disabled while waiting for obsidian sync\");",
    "console.warn(\"`scope` option is deprecated and will be removed in EJS 3\")": "console.warn(\"`scope` option is deprecated and will be removed in EJS 3\")",
    "console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\")": "console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\")",
    "console.warn(`Invalid tool call: object is empty`)": "console.warn(`Invalid tool call: object is empty`)",
    "console.warn(`Invalid tool call: missing key ${key} in tool spec`, props)": "console.warn(`Invalid tool call: missing key ${key} in tool spec`, props)",
    "console.warn(`Invalid tool call: array items are not of the same type`)": "console.warn(`Invalid tool call: array items are not of the same type`)",
    "console.warn(`Invalid tool call: array items are not of the same type as the spec`)": "console.warn(`Invalid tool call: array items are not of the same type as the spec`)",
    "console.warn(`Invalid tool call: value ${value} is not a valid number`)": "console.warn(`Invalid tool call: value ${value} is not a valid number`)",
    "console.warn(`Invalid tool call: value ${value} is not of type ${props[key].type}`)": "console.warn(`Invalid tool call: value ${value} is not of type ${props[key].type}`)",
    "console.warn(`Invalid tool call: value ${value} is not in enum ${props[key].enum}`)": "console.warn(`Invalid tool call: value ${value} is not in enum ${props[key].enum}`)",
    "console.warn(`Invalid tool call: missing required key ${key}`)": "console.warn(`Invalid tool call: missing required key ${key}`)",
    "console.warn(`Empty value for required key ${key}`)": "console.warn(`Empty value for required key ${key}`)",
    "console.warn(`Tool ${tool_name} not found or invalid, returning tool_call_content`)": "console.warn(`Tool ${tool_name} not found or invalid, returning tool_call_content`)",
    "console.warn(`No API key found for ${this.platform_key}. Cannot retrieve models.`)": "console.warn(`No API key found for ${this.platform_key}. Cannot retrieve models.`)",
    "console.warn(`SmartEnv: module ${module_key} not found`)": "console.warn(`SmartEnv: module ${module_key} not found`)",
    "console.warn(`deep_merge_no_overwrite error (${key}): ${e.message}`)": "console.warn(`deep_merge_no_overwrite error (${key}): ${e.message}`)",
    "console.warn(\"Invalid item, skipping adding to collection: \", item)": "console.warn(\"Invalid item, skipping adding to collection: \", item)",
    "console.warn(\"Entity.search: keywords not set or is not an array\")": "console.warn(\"Entity.search: keywords not set or is not an array\")",
    "console.warn(\"error getting meta changed for \", this.path, \": \", e)": "console.warn(\"error getting meta changed for \", this.path, \": \", e)",
    "console.warn(\"search_filter.keywords not set\")": "console.warn(\"search_filter.keywords not set\")",
    "console.warn(\"smart_change disabled by settings\")": "console.warn(\"smart_change disabled by settings\")",
    "console.warn(\"No content to import for \" + this.file_path)": "console.warn(\"No content to import for \" + this.file_path)",
    "console.warn(\"merge error: Expected an object from markdown_to_blocks, but received:\", blocks_obj)": "console.warn(\"merge error: Expected an object from markdown_to_blocks, but received:\", blocks_obj)",
    "console.warn(\"Error reading block:\", error.message)": "console.warn(\"Error reading block:\", error.message)",
    "console.warn(\"Error updating block:\", error.message)": "console.warn(\"Error updating block:\", error.message)",
    "console.warn(\"Error removing block:\", error.message)": "console.warn(\"Error removing block:\", error.message)",
    "console.warn(\"error removing block: \", e)": "console.warn(\"error removing block: \", e)",
    "console.warn(\"error moving block: \", e)": "console.warn(\"error moving block: \", e)",
    "console.warn(\"Error parsing line: \", line)": "console.warn(\"Error parsing line: \", line)",
    "console.warn(`Collection class not found: ${class_name}`)": "console.warn(`Collection class not found: ${class_name}`)",
    "console.warn(\"Error saving collection item: \", item.key)": "console.warn(\"Error saving collection item: \", item.key)",
    "console.warn(\"SmartEmbedModel adapter not set\")": "console.warn(\"SmartEmbedModel adapter not set\")",
    "console.warn(`SmartEmbedModel adapter ${this.opts.adapter} not found`)": "console.warn(`SmartEmbedModel adapter ${this.opts.adapter} not found`)",
    "console.warn(\"Error during read: \" + error.message)": "console.warn(\"Error during read: \" + error.message)",
    "console.warn(\"get_link_target_path: file_paths not found\")": "console.warn(\"get_link_target_path: file_paths not found\")",
    "console.warn(`Error removing file: ${rel_path2}`, error)": "console.warn(`Error removing file: ${rel_path2}`, error)",
    "console.warn(\"pre_change() not implemented\")": "console.warn(\"pre_change() not implemented\")",
    "console.warn(\"post_change() not implemented\")": "console.warn(\"post_change() not implemented\")",
    "console.warn(\"revert_setting() not implemented\")": "console.warn(\"revert_setting() not implemented\")",
    "console.warn(`Unsupported setting type: ${elm.dataset.type}`)": "console.warn(`Unsupported setting type: ${elm.dataset.type}`)",
    "console.warn(\"Scope required for rendering markdown in Obsidian adapter\")": "console.warn(\"Scope required for rendering markdown in Obsidian adapter\")",
    "console.warn(\"Error rendering markdown in Obsidian adapter\", e)": "console.warn(\"Error rendering markdown in Obsidian adapter\", e)",
    "console.warn(\"missing Obsidian Setting component\")": "console.warn(\"missing Obsidian Setting component\")",
    "console.warn(`Error registering code block: ${name}`, error)": "console.warn(`Error registering code block: ${name}`, error)",
    "console.warn(\"No active file\", curr_file)": "console.warn(\"No active file\", curr_file)",
    "console.warn(\"Error getting folders\", error)": "console.warn(\"Error getting folders\", error)",
    "console.log(\"Using fetch\")": "console.log(\"Using fetch\")",
    "console.log(\"Using request adapter\")": "console.log(\"Using request adapter\")",
    "console.log(\"has chat model adapter\")": "console.log(\"has chat model adapter\")",
    "console.log(\"Streaming Request: \")": "console.log(\"Streaming Request: \")",
    "console.log(\"ReadyState: \" + e.readyState)": "console.log(\"ReadyState: \" + e.readyState)",
    "console.log(\"init SmartChatRenderer\")": "console.log(\"init SmartChatRenderer\")",
    "console.log(\"tool call\")": "console.log(\"tool call\")",
    "console.log(\"Creating new conversation\")": "console.log(\"Creating new conversation\")",
    "console.log(\"get_conversation_ids_and_file_types\")": "console.log(\"get_conversation_ids_and_file_types\")",
    "console.log(\"Already saving\")": "console.log(\"Already saving\")",
    "console.log(\"Saving \" + this.collection_key + \": \", save_queue.length + \" items\")": "console.log(\"Saving \" + this.collection_key + \": \", save_queue.length + \" items\")",
    "console.log(\"Saved \" + this.collection_key + \" in \" + (Date.now()": "console.log(\"Saved \" + this.collection_key + \" in \" + (Date.now()",
    "console.log(\"Already loading\")": "console.log(\"Already loading\")",
    "console.log(\"Loading \" + this.collection_key + \": \", load_queue.length + \" items\")": "console.log(\"Loading \" + this.collection_key + \": \", load_queue.length + \" items\")",
    "console.log(\"Loaded \" + this.collection_key + \" in \" + this.load_time_ms + \"ms\")": "console.log(\"Loaded \" + this.collection_key + \" in \" + this.load_time_ms + \"ms\")",
    "console.log(`SmartEmbed not loaded for ${this.collection_key}. Continuing without embedding capabilities.`)": "console.log(`SmartEmbed not loaded for ${this.collection_key}. Continuing without embedding capabilities.`)",
    "console.log(`SmartEmbedModel already loading for ${this.embed_model_key}`)": "console.log(`SmartEmbedModel already loading for ${this.embed_model_key}`)",
    "console.log(`SmartEmbedModel already loaded for ${this.embed_model_key}`)": "console.log(`SmartEmbedModel already loaded for ${this.embed_model_key}`)",
    "console.log(\"Switching to legacy transformers\")": "console.log(\"Switching to legacy transformers\")",
    "console.log(\"model_key not set\")": "console.log(\"model_key not set\")",
    "console.log(\"window.document not available\")": "console.log(\"window.document not available\")",
    "console.log(\"no vec\")": "console.log(\"no vec\")",
    "console.log(`Found and returned ${top_k.length} ${this.collection_key}.`)": "console.log(`Found and returned ${top_k.length} ${this.collection_key}.`)",
    "console.log(`Smart Connections: No active embedding model for ${this.collection_key}, skipping embedding`)": "console.log(`Smart Connections: No active embedding model for ${this.collection_key}, skipping embedding`)",
    "console.log(`Smart Connections: Embed queue processing already in progress for ${this.collection_key}`)": "console.log(`Smart Connections: Embed queue processing already in progress for ${this.collection_key}`)",
    "console.log(`Time spent getting embed queue: ${datetime_end.getTime() - datetime_start.getTime()}ms`)": "console.log(`Time spent getting embed queue: ${datetime_end.getTime() - datetime_start.getTime()}ms`)",
    "console.log(`Smart Connections: No items in ${this.collection_key} embed queue`)": "console.log(`Smart Connections: No items in ${this.collection_key} embed queue`)",
    "console.log(`Processing ${this.collection_key} embed queue: ${this.queue_total} items`)": "console.log(`Processing ${this.collection_key} embed queue: ${this.queue_total} items`)",
    "console.log(\"Embed queue processing halted\")": "console.log(\"Embed queue processing halted\")",
    "console.log(\"resume_embed_queue_processing\")": "console.log(\"resume_embed_queue_processing\")",
    "console.log(`Smart Connections: Skipping large file: ${this.path}`)": "console.log(`Smart Connections: Skipping large file: ${this.path}`)",
    "console.log(`Smart Connections: Re-loading data source for ${this.path} because it has been updated on disk`)": "console.log(`Smart Connections: Re-loading data source for ${this.path} because it has been updated on disk`)",
    "console.log(`Pruned ${remove_smart_blocks.length} blocks:\n${remove_smart_blocks.map((item) => `${item.reason} - ${item.key}`).join(\"\\n\")}`)": "console.log(`Pruned ${remove_smart_blocks.length} blocks:\n${remove_smart_blocks.map((item) => `${item.reason} - ${item.key}`).join(\"\\n\")}`)",
    "console.log(\"import_queue \" + import_queue.length)": "console.log(\"import_queue \" + import_queue.length)",
    "console.log(`Time spent building links: ${end_time - start_time}ms`)": "console.log(`Time spent building links: ${end_time - start_time}ms`)",
    "console.log(`Time spent importing: ${end_time - start_time}ms`)": "console.log(`Time spent importing: ${end_time - start_time}ms`)",
    "console.log(\"File stats changed, but content is the same. Skipping import.\")": "console.log(\"File stats changed, but content is the same. Skipping import.\")",
    "console.log(`Data file not found: ${item.data_path}`)": "console.log(`Data file not found: ${item.data_path}`)",
    "console.log(\"Error loading collection item: \" + item.key)": "console.log(\"Error loading collection item: \" + item.key)",
    "console.log(`Smart Embed Model: No active embedding model for ${this.collection_key}, skipping embedding`)": "console.log(`Smart Embed Model: No active embedding model for ${this.collection_key}, skipping embedding`)",
    "console.log(`Original inputs length: ${inputs.length}`)": "console.log(`Original inputs length: ${inputs.length}`)",
    "console.log(`Filtered inputs length: ${inputs.length}`)": "console.log(`Filtered inputs length: ${inputs.length}`)",
    "console.log(\"empty batch (or all items have empty embed_input)\")": "console.log(\"empty batch (or all items have empty embed_input)\")",
    "console.log(`Prepared embed_inputs length: ${embed_inputs.length}`)": "console.log(`Prepared embed_inputs length: ${embed_inputs.length}`)",
    "console.log(\"Warning: prepare_embed_input received an empty string\")": "console.log(\"Warning: prepare_embed_input received an empty string\")",
    "console.log(\"Warning: prepare_embed_input resulted in an empty string after trimming\")": "console.log(\"Warning: prepare_embed_input resulted in an empty string after trimming\")",
    "console.log(\"embed_input is empty after filtering null and empty strings\")": "console.log(\"embed_input is empty after filtering null and empty strings\")",
    "console.log(`Retrying request (429) in ${backoff} seconds...`)": "console.log(`Retrying request (429) in ${backoff} seconds...`)",
    "console.log('message ignored (listener)'": "console.log('message ignored (listener)'",
    "console.log(\"model loaded\")": "console.log(\"model loaded\")",
    "console.log(\"[Transformers] Using GPU\")": "console.log(\"[Transformers] Using GPU\")",
    "console.log(\"[Transformers] Using CPU\")": "console.log(\"[Transformers] Using CPU\")",
    "console.log(\"init\")": "console.log(\"init\")",
    "console.log(\"load\", params)": "console.log(\"load\", params)",
    "console.log(\"View inactive, skipping render nearest\")": "console.log(\"View inactive, skipping render nearest\")",
    "console.log(\"refresh_smart_view\")": "console.log(\"refresh_smart_view\")",
    "console.log(\"displaying settings tab\")": "console.log(\"displaying settings tab\")",
    "console.log(\"Accepted\")": "console.log(\"Accepted\")",
    "console.log(\"File does not exist, creating it\")": "console.log(\"File does not exist, creating it\")",
    "console.log(\"loading view\")": "console.log(\"loading view\")",
    "console.log(\"copy message to clipboard\")": "console.log(\"copy message to clipboard\")",
    "console.log(`Error resolving ref: ${refPath}`, e)": "console.log(`Error resolving ref: ${refPath}`, e)",
    "console.log(\"should trigger retrieval\")": "console.log(\"should trigger retrieval\")",
    "console.log(\"get_context_hyde\")": "console.log(\"get_context_hyde\")",
    "console.log(`ScAppConnector initialized on port ${this.port}`)": "console.log(`ScAppConnector initialized on port ${this.port}`)",
    "console.log(`Port ${this.port} is already in use. Attempting to retry once.`)": "console.log(`Port ${this.port} is already in use. Attempting to retry once.`)",
    "console.log(`Server running at http://localhost:${this.port}/`)": "console.log(`Server running at http://localhost:${this.port}/`)",
    "console.log(\"Dataview API not found. No dataview connection for Smart Connect.\")": "console.log(\"Dataview API not found. No dataview connection for Smart Connect.\")",
    "console.log(\"waiting for changes\")": "console.log(\"waiting for changes\")",
    "console.log(\"Server closed\")": "console.log(\"Server closed\")",
    "console.log(\"Window server reference closed\")": "console.log(\"Window server reference closed\")",
    "console.log(\"Environment no longer available. Closing server.\")": "console.log(\"Environment no longer available. Closing server.\")",
    "console.log(\"unloading plugin\")": "console.log(\"unloading plugin\")",
    "console.log(\"loading env\")": "console.log(\"loading env\")",
    "console.log(\"Smart Connections v2 loaded\")": "console.log(\"Smart Connections v2 loaded\")",
    "console.log(\"env loaded\")": "console.log(\"env loaded\")",
    "console.log(\"Added to .gitignore: \" + ignore)": "console.log(\"Added to .gitignore: \" + ignore)",
    "console.log(\"old showing notice\")": "console.log(\"old showing notice\")",
    "console.log(\"Smart Connections: Waiting for Obsidian Sync to finish\")": "console.log(\"Smart Connections: Waiting for Obsidian Sync to finish\")",
    "console.log(\"render_file_counts\")": "console.log(\"render_file_counts\")",
    "console.log(\"Manifest written\")": "console.log(\"Manifest written\")",
    "console.log(\"open_note\", link)": "console.log(\"open_note\", link)",
    "\"Saving \"": "\"Saving \"",
    "\"Loading \"": "\"Loading \"",
    "`Loading ${this.collection_key}...`": "`Loading ${this.collection_key}...`",
    "`${this.collection_key} loaded`": "`${this.collection_key} loaded`",
    "`Making Smart Connections...`": "`Making Smart Connections...`",
    "`Embedding progress: ${this.embedded_total} / ${this.queue_total}`": "`Embedding progress: ${this.embedded_total} / ${this.queue_total}`",
    "`${this._calculate_embed_tokens_per_second()} tokens/sec using ${this.smart_embed.opts.model_key}`": "`${this._calculate_embed_tokens_per_second()} tokens/sec using ${this.smart_embed.opts.model_key}`",
    "`Embedding complete.`": "`Embedding complete.`",
    "`${this.embedded_total} entities embedded.`": "`${this.embedded_total} entities embedded.`",
    "`Embedding paused.`": "`Embedding paused.`",
    "`Progress: ${this.embedded_total} / ${this.queue_total}`": "`Progress: ${this.embedded_total} / ${this.queue_total}`",
    "\"Starting initial scan...\"": "\"Starting initial scan...\"",
    "\"Initial scan complete\"": "\"Initial scan complete\"",
    "\"Pruning sources...\"": "\"Pruning sources...\"",
    "`Pruned ${remove_sources.length} sources`": "`Pruned ${remove_sources.length} sources`",
    "\"Pruning blocks...\"": "\"Pruning blocks...\"",
    "`Pruned ${remove_smart_blocks.length} blocks`": "`Pruned ${remove_smart_blocks.length} blocks`",
    "`Importing...`, `Progress: ${i} / ${import_queue.length} files`": "`Importing...`, `Progress: ${i} / ${import_queue.length} files`",
    "`Processed import queue in ${Date.now() - time_start}ms`": "`Processed import queue in ${Date.now() - time_start}ms`",
    "\"No items in import queue\"": "\"No items in import queue\"",
    "\"Clearing all data...\"": "\"Clearing all data...\"",
    "\"All data cleared and reimported\"": "\"All data cleared and reimported\"",
    ", \"Notice muted\"": ", \"Notice muted\"",
    "'Smart View must be open to utilize all Smart Chat features. For example, asking things like \"Based on my notes...\" requires Smart View to be open.'": "'Smart View must be open to utilize all Smart Chat features. For example, asking things like \"Based on my notes...\" requires Smart View to be open.'",
    "\"No entity found for key: \"": "\"No entity found for key: \"",
    "\"Embed model not loaded. Please wait for the model to load and try again.\"": "\"Embed model not loaded. Please wait for the model to load and try again.\"",
    "\"Failed to embed search text.\"": "\"Failed to embed search text.\"",
    "\"Error in embedding search. See console for details.\"": "\"Error in embedding search. See console for details.\"",
    "\"Success! API key is valid\"": "\"Success! API key is valid\"",
    "\"Error: API key is invalid!\"": "\"Error: API key is invalid!\"",
    "\"Chat input is empty.\"": "\"Chat input is empty.\"",
    "\"Your chats are currently using a community account with very limited usage. Please add your own API key in the Smart Chat settings to enable unlimited personal usage and prevent exhausting the shared account limit.\"": "\"Your chats are currently using a community account with very limited usage. Please add your own API key in the Smart Chat settings to enable unlimited personal usage and prevent exhausting the shared account limit.\"",
    "\"Waiting for Obsidian Sync to finish...\"": "\"Waiting for Obsidian Sync to finish...\"",
    "\"Loading Smart Connections...\"": "\"Loading Smart Connections...\"",
    "*API Error. See console logs for details.*": "*API Error. See console logs for details.*",
    "*An error occurred. See console logs for details.*": "*An error occurred. See console logs for details.*",
    "**********": "**********",
    "name: \"Obsidian Vault\"": "name: \"Obsidian Vault\"",
    "name: \"File Exclusions\"": "name: \"File Exclusions\"",
    "name: \"Folder Exclusions\"": "name: \"Folder Exclusions\"",
    "name: \"Excluded Headings\"": "name: \"Excluded Headings\"",
    "name: \"Embed Blocks\"": "name: \"Embed Blocks\"",
    "name: \"OpenAI Text-3 Small\"": "name: \"OpenAI Text-3 Small\"",
    "name: \"OpenAI Text-3 Large\"": "name: \"OpenAI Text-3 Large\"",
    "name: \"OpenAI Text-3 Small - 512\"": "name: \"OpenAI Text-3 Small - 512\"",
    "name: \"OpenAI Text-3 Large - 256\"": "name: \"OpenAI Text-3 Large - 256\"",
    "name: \"None\"": "name: \"None\"",
    "name: \"Embedding Model\"": "name: \"Embedding Model\"",
    "name: \"Minimum Embedding Length\"": "name: \"Minimum Embedding Length\"",
    "name: \"OpenAI API Key for embeddings\"": "name: \"OpenAI API Key for embeddings\"",
    "name: \"GPU Batch Size\"": "name: \"GPU Batch Size\"",
    "name: \"Legacy Transformers (no GPU)\"": "name: \"Legacy Transformers (no GPU)\"",
    "name: \"smart_settings\"": "name: \"smart_settings\"",
    "name: \"lookup\"": "name: \"lookup\"",
    "name: \"Open: \"": "name: \"Open: \"",
    "name: \"Find: Make Smart Connections\"": "name: \"Find: Make Smart Connections\"",
    "name: \"Refresh & Make Connections\"": "name: \"Refresh & Make Connections\"",
    "name: \"Open: View Smart Connections\"": "name: \"Open: View Smart Connections\"",
    "name: \"Open: Smart Chat Conversation\"": "name: \"Open: Smart Chat Conversation\"",
    "name: \"Random Note\"": "name: \"Random Note\"",
    "name: \"Open: Smart ChatGPT\"": "name: \"Open: Smart ChatGPT\"",
    "name: \"Open: Smart Connections Supporter Private Chat\"": "name: \"Open: Smart Connections Supporter Private Chat\"",
    "name: \"Not found: \"": "name: \"Not found: \"",
    "\"name\": \"Smart Change (change safety)\"": "\"name\": \"Smart Change (change safety)\"",
    "return \"Smart Search\"": "return \"Smart Search\"",
    "return \"Smart ChatGPT\"": "return \"Smart ChatGPT\"",
    "return \"Smart Connections Supporter Private Chat\"": "return \"Smart Connections Supporter Private Chat\"",
    "return `<span>${item_count} sources (embeddings not currently loaded)</span>`": "return `<span>${item_count} sources (embeddings not currently loaded)</span>`",
    "return `<span>${scope.loaded}/${included_count} sources (partially loaded, should refresh/reload)</span>`": "return `<span>${scope.loaded}/${included_count} sources (partially loaded, should refresh/reload)</span>`",
    "return `<span>${item_count} blocks (embeddings not currently loaded)</span>`": "return `<span>${item_count} blocks (embeddings not currently loaded)</span>`",
    "return `<span>${scope.loaded}/${item_count} blocks (partially loaded, should refresh/reload)</span>`": "return `<span>${scope.loaded}/${item_count} blocks (partially loaded, should refresh/reload)</span>`",
    "return `Anticipate the type of answer desired by the user. Imagine the following${params.ct ? \" \" + params.ct : \"\"} notes were written by the user and contain all the necessary information to answer the user's question. Begin responses with \"${ScTranslations_default[this.env.smart_connections_plugin.settings.language].prompt}...\"`": "return `Anticipate the type of answer desired by the user. Imagine the following${params.ct ? \" \" + params.ct : \"\"} notes were written by the user and contain all the necessary information to answer the user's question. Begin responses with \"${ScTranslations_default[this.env.smart_connections_plugin.settings.language].prompt}...\"`",
    "e.message += \" in \" + opts.filename": "e.message += \" in \" + opts.filename",
    "e.message += \" while compiling ejs\\n\\n\"": "e.message += \" while compiling ejs\\n\\n\"",
    "e.message += \"If the above error is not helpful, you may want to try EJS-Lint:\\n\"": "e.message += \"If the above error is not helpful, you may want to try EJS-Lint:\\n\"",
    "e.message += \"Or, if you meant to create an async function, pass `async: true` as an option.\"": "e.message += \"Or, if you meant to create an async function, pass `async: true` as an option.\"",
    "`<span>Load time: ${scope.load_time_ms}ms</span>`": "`<span>Load time: ${scope.load_time_ms}ms</span>`",
    "<span>${embedded_percentage}% embedded</span>": "<span>${embedded_percentage}% embedded</span>",
    "<span>${included_count} sources included (${total_count} total)</span>": "<span>${included_count} sources included (${total_count} total)</span>",
    "<span>${embedded_percentage}% embedded (${items_w_vec})</span>": "<span>${embedded_percentage}% embedded (${items_w_vec})</span>",
    "<span>Loaded: ${item_count} blocks (expected ${scope.expected_blocks_ct})</span>": "<span>Loaded: ${item_count} blocks (expected ${scope.expected_blocks_ct})</span>",
    "User Agreement:</strong> By using Smart Connections you agree to share how it helps you with at least one other person \\u{1F60A}\\u{1F334}": "User Agreement:</strong> By using Smart Connections you agree to share how it helps you with at least one other person \\u{1F60A}\\u{1F334}",
    "The success of Smart Connections is a direct result of our community of supporters who generously fund and evaluate new features. Their unwavering commitment to our privacy-focused, open-source software benefits all. Together, we can continue to innovate and make a positive impact on the world.": "The success of Smart Connections is a direct result of our community of supporters who generously fund and evaluate new features. Their unwavering commitment to our privacy-focused, open-source software benefits all. Together, we can continue to innovate and make a positive impact on the world.",
    "Smart Connections Supporter Community": "Smart Connections Supporter Community",
    "Join the next <a href=\"https://lu.ma/calendar/cal-ZJtdnzAdURyouM7\">Lean Coffee session</a> to discuss future features & improvements.": "Join the next <a href=\"https://lu.ma/calendar/cal-ZJtdnzAdURyouM7\">Lean Coffee session</a> to discuss future features & improvements.",
    "Supporter benefits include:": "Supporter benefits include:",
    "Early access to new &amp; experimental features:": "Early access to new &amp; experimental features:",
    "Early access to new versions enables supporters to help ensure new features are ready for the broader community.": "Early access to new versions enables supporters to help ensure new features are ready for the broader community.",
    "Current Early Access Features:": "Current Early Access Features:",
    "\\u{1F5BC}\\uFE0F Add images to Smart Chat (multimodal chat)": "\\u{1F5BC}\\uFE0F Add images to Smart Chat (multimodal chat)",
    "Re-ranking model in the Smart Connections View": "Re-ranking model in the Smart Connections View",
    "Smart Chat History in canvas format": "Smart Chat History in canvas format",
    "Coming soon to Early Access:": "Coming soon to Early Access:",
    "PDF Support in Smart Connections view": "PDF Support in Smart Connections view",
    "Edit notes in Smart Chat": "Edit notes in Smart Chat",
    "New retrieval methods in Smart Chat": "New retrieval methods in Smart Chat",
    "Review retrieved context before sending in Smart Chat": "Review retrieved context before sending in Smart Chat",
    "Audio files in Smart Connections view": "Audio files in Smart Connections view",
    "Past Early Access Features:": "Past Early Access Features:",
    "ChatGPT integration with your Obsidian Vault": "ChatGPT integration with your Obsidian Vault",
    "Mobile support for Smart Connections": "Mobile support for Smart Connections",
    "Access to the supporter-only <a href=\"https://chat.smartconnections.app\">private chat": "Access to the supporter-only <a href=\"https://chat.smartconnections.app\">private chat",
    "Community:": "Community:",
    "Ask questions and share insights with other supporters.": "Ask questions and share insights with other supporters.",
    "Help &amp; Support (priority):": "Help &amp; Support (priority):",
    "Swift, top-priority support in the <a href=\"https://chat.smartconnections.app\">Supporter Chat": "Swift, top-priority support in the <a href=\"https://chat.smartconnections.app\">Supporter Chat",
    "Feature Requests (priority):": "Feature Requests (priority):",
    "Influence the future of Smart Connections with priority feature requests in the <a href=\"https://chat.smartconnections.app\">Supporter Chat": "Influence the future of Smart Connections with priority feature requests in the <a href=\"https://chat.smartconnections.app\">Supporter Chat",
    "Insider Updates:": "Insider Updates:",
    "Learn about the latest features &amp; improvements before they are announced.": "Learn about the latest features &amp; improvements before they are announced.",
    "For a very limited time:</b> Early access to Smart Connect: Use ChatGPT with your notes <i>without</i> uploading your notes to the cloud using <a href=\"https://chat.openai.com/g/g-9Xb1mRJYl-smart-connect-obsidian\">Smart Connect - Obsidian": "For a very limited time:</b> Early access to Smart Connect: Use ChatGPT with your notes <i>without</i> uploading your notes to the cloud using <a href=\"https://chat.openai.com/g/g-9Xb1mRJYl-smart-connect-obsidian\">Smart Connect - Obsidian",
    "<h3>Smart Chat</h3>": "<h3>Smart Chat</h3>",
    "<h3>System Prompts</h3>": "<h3>System Prompts</h3>",
    "<h3>Custom Local Model</h3>": "<h3>Custom Local Model</h3>",
    "<h3>Custom Server</h3>": "<h3>Custom Server</h3>",
    "Additional settings available in the Smart Chat settings tab (ex. chat model and api key).": "Additional settings available in the Smart Chat settings tab (ex. chat model and api key).",
    "<h2>Blocks</h2>": "<h2>Blocks</h2>",
    "<h2>Smart Environment</h2>": "<h2>Smart Environment</h2>",
    "Notes about embedding models:": "Notes about embedding models:",
    "IMPORTANT: make sure local <code>BGE-micro-v2</code> embedding model works before trying other local models.": "IMPORTANT: make sure local <code>BGE-micro-v2</code> embedding model works before trying other local models.",
    "Local model compatibility depends on available CPU and RAM. Try reducing the max tokens (context) if a local model if failing.": "Local model compatibility depends on available CPU and RAM. Try reducing the max tokens (context) if a local model if failing.",
    "API models are not dependent on local compute, but they require an API key and send your notes to third-party servers for processing.": "API models are not dependent on local compute, but they require an API key and send your notes to third-party servers for processing.",
    "<h1>Muted Notices</h1>": "<h1>Muted Notices</h1>",
    "No muted notices.": "No muted notices.",
    "\"Re-load\"": "\"Re-load\"",
    "\"Load\"": "\"Load\"",
    " Sources": " Sources",
    ">Import<": ">Import<",
    ">Prune<": ">Prune<",
    ">Clear All &amp; Re-import<": ">Clear All &amp; Re-import<",
    ">Smart Connections<": ">Smart Connections<",
    "Smart Chat Links": "Smart Chat Links",
    "show_notice(\"Wait until current response is finished.\")": "show_notice(\"Wait until current response is finished.\")",
    "show_notice(\"Message copied to clipboard\")": "show_notice(\"Message copied to clipboard\")",
    "show_notice(\"Supporter license key required for early access update\")": "show_notice(\"Supporter license key required for early access update\")",
    "Are you sure you want to clear all data and re-import? This action cannot be undone.": "Are you sure you want to clear all data and re-import? This action cannot be undone.",
    "--------------------------------": "--------------------------------",
    "Open: View Smart Connections": "Open: View Smart Connections",
    "\"Smart Connections\"": "\"Smart Connections\"",
    "Open: Smart Chat Conversation": "Open: Smart Chat Conversation",
    "\"Smart Chat Conversation View\"": "\"Smart Chat Conversation View\"",
    "Waiting for Obsidian Sync to finish...": "Waiting for Obsidian Sync to finish...",
    "Loading Smart Connections...": "Loading Smart Connections...",
    "\"UNTITLED CHAT\"": "\"UNTITLED CHAT\"",
    "\"UNTITLED CHAT \"": "\"UNTITLED CHAT \"",
    "\" view\"": "\" view\"",
    "`Use the \"${tool_choice.function.name}\" tool!`": "`Use the \"${tool_choice.function.name}\" tool!`",
    "`Required: use the \"${tool_choice.function.name}\" tool!`": "`Required: use the \"${tool_choice.function.name}\" tool!`",
    "`IMPORTANT: You must use the \"${body.tools[0].function_declarations[0].name}\" function tool!`": "`IMPORTANT: You must use the \"${body.tools[0].function_declarations[0].name}\" function tool!`",
    "`context: ${m[1].context}, output: ${m[1].max_out}`": "`context: ${m[1].context}, output: ${m[1].max_out}`",
    "'<div class=\"sc-loading\">Loading ' + this.collection_key + \" settings...</div>\"": "'<div class=\"sc-loading\">Loading ' + this.collection_key + \" settings...</div>\"",
    "<p>Entity not found.</p>": "<p>Entity not found.</p>",
    "Loading search...": "Loading search...",
    "'<div class=\"sc-loading\">Loading main settings...</div>'": "'<div class=\"sc-loading\">Loading main settings...</div>'",
    "Entity not found: ": "Entity not found: ",
    "hypotheticals is required": "hypotheticals is required",
    "Embedding search is not enabled.": "Embedding search is not enabled.",
    "`The text contains a special token that is not allowed: ${specialMatch[0]}`": "`The text contains a special token that is not allowed: ${specialMatch[0]}`",
    "Based on your notes": "Based on your notes",
    "Hi, I'm ChatGPT with access to your notes via Smart Connections. Ask me a question about your notes and I'll try to answer it.": "Hi, I'm ChatGPT with access to your notes via Smart Connections. Ask me a question about your notes and I'll try to answer it.",
    "`Anticipate what the user is seeking. Respond in the form of a hypothetical note written by the user. The note may contain statements as paragraphs, lists, or checklists in markdown format with no headings. Please respond with one hypothetical note and abstain from any other commentary. Use the format: PARENT FOLDER NAME > CHILD FOLDER NAME > FILE NAME > HEADING 1 > HEADING 2 > HEADING 3: HYPOTHETICAL NOTE CONTENTS.`": "`Anticipate what the user is seeking. Respond in the form of a hypothetical note written by the user. The note may contain statements as paragraphs, lists, or checklists in markdown format with no headings. Please respond with one hypothetical note and abstain from any other commentary. Use the format: PARENT FOLDER NAME > CHILD FOLDER NAME > FILE NAME > HEADING 1 > HEADING 2 > HEADING 3: HYPOTHETICAL NOTE CONTENTS.`",
    "Obsidian HTTP server is running": "Obsidian HTTP server is running",
    "\\n\\n# Ignore Smart Environment folder\\n.smart-env": "\\n\\n# Ignore Smart Environment folder\\n.smart-env",
    "`[Smart Connections] A new version is available! (v${latest_release})`": "`[Smart Connections] A new version is available! (v${latest_release})`",
    "------------------------------------": "------------------------------------",
    "----------智能聊天对话-----------": "----------智能聊天对话-----------",
    "Open help documentation": "Open help documentation",
    "Open Conversation Note": "Open Conversation Note",
    "Chat History": "Chat History",
    "Chat Options": "Chat Options",
    "Chat Settings": "Chat Settings",
    "New Chat": "New Chat",
    "Copy message to clipboard": "Copy message to clipboard",
    "Hi there, welcome to the Smart Chat.&nbsp;Ask me a question about your notes and I'll try to answer it.": "Hi there, welcome to the Smart Chat.&nbsp;Ask me a question about your notes and I'll try to answer it.",
    "Try &quot;Based on my notes&quot; or &quot;Summarize [[this note]]&quot; or &quot;Important tasks in /folder/&quot;": "Try &quot;Based on my notes&quot; or &quot;Summarize [[this note]]&quot; or &quot;Important tasks in /folder/&quot;",
    "-----------智能聊天对话-----------": "-----------智能聊天对话-----------",
    "----------智能连接搜索-----------": "----------智能连接搜索-----------",
    "Search Smart Connections": "Search Smart Connections",
    "\"Describe what you're looking for (e.g., 'PKM strategies', 'story elements', 'personal AI alignment')\"": "\"Describe what you're looking for (e.g., 'PKM strategies', 'story elements', 'personal AI alignment')\"",
    "Use semantic (embeddings) search to surface relevant notes. Results are sorted by similarity to your query. Note: returns different results than lexical (keyword) search.": "Use semantic (embeddings) search to surface relevant notes. Results are sorted by similarity to your query. Note: returns different results than lexical (keyword) search.",
    "-----------智能连接搜索------------": "-----------智能连接搜索------------",
    "data-description=\"Folder to store Smart Chat history. Use a preceeding <code>.</code> to hide it (ex. <code>.smart-chats</code>).\"": "data-description=\"Folder to store Smart Chat history. Use a preceeding <code>.</code> to hide it (ex. <code>.smart-chats</code>).\"",
    "data-description=\"Folder to store system prompts. Available in chat by typing '@'\"": "data-description=\"Folder to store system prompts. Available in chat by typing '@'\"",
    "data-description=\"API Key required to use Cohere re-ranker.\"": "data-description=\"API Key required to use Cohere re-ranker.\""
  }
}