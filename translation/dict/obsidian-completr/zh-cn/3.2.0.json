{
  "manifest": {
    "translationVersion": 1730799385649,
    "pluginVersion": "3.2.0"
  },
  "description": {
    "original": "This plugin provides advanced auto-completion functionality for LaTeX, Frontmatter and standard writing.",
    "translation": "This plugin provides advanced auto-completion functionality for LaTeX, Frontmatter and standard writing."
  },
  "dict": {
    "Notice(\"Failed to parse latex commands file \" + path + \". Using default commands.\", 3e3)": "Notice(\"Failed to parse latex commands file \" + path + \". Using default commands.\", 3e3)",
    "Notice(`${e.message}. Using default callout types.`, 3e3)": "Notice(`${e.message}. Using default callout types.`, 3e3)",
    "Notice(\"Unable to import \" + file.name + \" because it already exists!\")": "Notice(\"Unable to import \" + file.name + \" because it already exists!\")",
    "Notice(\"Error while importing \" + file.name)": "Notice(\"Error while importing \" + file.name)",
    "Notice(`Loaded ${count} words`)": "Notice(`Loaded ${count} words`)",
    ".log(prober.getCharsetName() + \" not active\\n\")": ".log(prober.getCharsetName() + \" not active\\n\")",
    ".log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\")": ".log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\")",
    ".log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\")": ".log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\")",
    ".log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\")": ".log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\")",
    ".log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\")": ".log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\")",
    ".log(\"no data received!\\n\")": ".log(\"no data received!\\n\")",
    ".log(\"pure ascii\")": ".log(\"pure ascii\")",
    ".log(prober.getCharsetName() + \" confidence \" + prober.getConfidence())": ".log(prober.getCharsetName() + \" confidence \" + prober.getConfidence())",
    ".log(\"no probers hit minimum threshhold\\n\")": ".log(\"no probers hit minimum threshhold\\n\")",
    ".log(prober.getCharsetName() + \" confidence = \" + prober.getConfidence() + \"\\n\")": ".log(prober.getCharsetName() + \" confidence = \" + prober.getConfidence() + \"\\n\")",
    ".log(\"Completr: No colors left for snippet, using random color\")": ".log(\"Completr: No colors left for snippet, using random color\")",
    ".log(\"Completr latex commands parse error:\", e.message)": ".log(\"Completr latex commands parse error:\", e.message)",
    ".log(\"Completr: Unable to read \" + fileName)": ".log(\"Completr: Unable to read \" + fileName)",
    ".log(\"Completr callout types parse error:\", e.message)": ".log(\"Completr callout types parse error:\", e.message)",
    ".log(\"Completr: Please enable Live Preview mode to use snippets\")": ".log(\"Completr: Please enable Live Preview mode to use snippets\")",
    ".log(\"Completr: Without Live Preview enabled, most features of Completr will not work properly!\")": ".log(\"Completr: Without Live Preview enabled, most features of Completr will not work properly!\")",
    "name: \"Open suggestion popup\"": "name: \"Open suggestion popup\"",
    "name: \"Select next suggestion\"": "name: \"Select next suggestion\"",
    "name: \"Select previous suggestion\"": "name: \"Select previous suggestion\"",
    "name: \"Insert selected suggestion\"": "name: \"Insert selected suggestion\"",
    "name: \"Bypass the popup and press Enter\"": "name: \"Bypass the popup and press Enter\"",
    "name: \"Bypass the popup and press Tab\"": "name: \"Bypass the popup and press Tab\"",
    "name: \"Add the currently selected word to the blacklist\"": "name: \"Add the currently selected word to the blacklist\"",
    "name: \"Close suggestion popup\"": "name: \"Close suggestion popup\"",
    "name: \"Jump to next snippet placeholder\"": "name: \"Jump to next snippet placeholder\"",
    "name: \"(internal)\"": "name: \"(internal)\"",
    ".setButtonText(\"Scan\")": ".setButtonText(\"Scan\")",
    ".setButtonText(\"Delete\")": ".setButtonText(\"Delete\")",
    ".setButtonText(\"Cancel\")": ".setButtonText(\"Cancel\")",
    ".setName(\"Word character regex\")": ".setName(\"Word character regex\")",
    ".setName(\"Auto focus\")": ".setName(\"Auto focus\")",
    ".setName(\"Auto trigger\")": ".setName(\"Auto trigger\")",
    ".setName(\"Minimum word length\")": ".setName(\"Minimum word length\")",
    ".setName(\"Minimum word trigger length\")": ".setName(\"Minimum word trigger length\")",
    ".setName(\"Word insertion mode\")": ".setName(\"Word insertion mode\")",
    ".setName(\"Ignore diacritics when filtering\")": ".setName(\"Ignore diacritics when filtering\")",
    ".setName(\"Latex provider\")": ".setName(\"Latex provider\")",
    ".setName(\"Trigger in code blocks\")": ".setName(\"Trigger in code blocks\")",
    ".setName(\"Ignore case\")": ".setName(\"Ignore case\")",
    ".setName(\"Front matter provider\")": ".setName(\"Front matter provider\")",
    ".setName(\"Add suffix to tag completion\")": ".setName(\"Add suffix to tag completion\")",
    ".setName(\"File scanner provider\")": ".setName(\"File scanner provider\")",
    ".setName(\"Scan active file\")": ".setName(\"Scan active file\")",
    ".setName(\"Word list provider\")": ".setName(\"Word list provider\")",
    ".setName(\"Word list files\")": ".setName(\"Word list files\")",
    ".setName(\"Callout provider\")": ".setName(\"Callout provider\")",
    ".setName(\"Source\")": ".setName(\"Source\")",
    ".setName(\"Enabled\")": ".setName(\"Enabled\")",
    ".setDesc(\"A regular expression which matches a character of a word. Used by during completion to find the word to the left of the cursor and used by the file scanner to find valid words.\")": ".setDesc(\"A regular expression which matches a character of a word. Used by during completion to find the word to the left of the cursor and used by the file scanner to find valid words.\")",
    ".setDesc(\"Whether the popup is automatically focused once it opens.\")": ".setDesc(\"Whether the popup is automatically focused once it opens.\")",
    ".setDesc(\"Whether the popup opens automatically when typing.\")": ".setDesc(\"Whether the popup opens automatically when typing.\")",
    ".setDesc(\"The minimum length a word has to be, to count as a valid suggestion. This value is used by the file scanner and word list provider.\")": ".setDesc(\"The minimum length a word has to be, to count as a valid suggestion. This value is used by the file scanner and word list provider.\")",
    ".setDesc(\"The minimum length a word has to be, to trigger suggestions. The LaTeX provider has its own separate setting.\")": ".setDesc(\"The minimum length a word has to be, to trigger suggestions. The LaTeX provider has its own separate setting.\")",
    ".setDesc(\"The insertion mode that is used. Ignore-case would suggest 'Hello' if the typed text is 'hello', match-case would not. Append would complete 'Hell' with 'Hello' while replace would complete it with 'hello' instead (if only 'hello' was a known word). Only used by the file scanner and word list provider.\")": ".setDesc(\"The insertion mode that is used. Ignore-case would suggest 'Hello' if the typed text is 'hello', match-case would not. Append would complete 'Hell' with 'Hello' while replace would complete it with 'hello' instead (if only 'hello' was a known word). Only used by the file scanner and word list provider.\")",
    ".setDesc(\"When enabled, the query 'Hello' can suggest 'H\\xE8ll\\xF2', meaning diacritics will be ignored when filtering the suggestions. Only used by the file scanner and word list provider.\")": ".setDesc(\"When enabled, the query 'Hello' can suggest 'H\\xE8ll\\xF2', meaning diacritics will be ignored when filtering the suggestions. Only used by the file scanner and word list provider.\")",
    ".setDesc(\"Whether the LaTeX provider should trigger after dollar signs which are enclosed in code blocks (for example ```$\\\\fr```).\")": ".setDesc(\"Whether the LaTeX provider should trigger after dollar signs which are enclosed in code blocks (for example ```$\\\\fr```).\")",
    ".setDesc(\"Whether the LaTeX provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")": ".setDesc(\"Whether the LaTeX provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")",
    ".setDesc(\"The minimum length a query has to be, to trigger suggestions.\")": ".setDesc(\"The minimum length a query has to be, to trigger suggestions.\")",
    ".setDesc(\"Whether the Front matter provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")": ".setDesc(\"Whether the Front matter provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")",
    ".setDesc(\"Whether each completed tag should be suffixed with a comma or a newline (when typing in a multi-line list). Allows faster insertion of multiple tags.\")": ".setDesc(\"Whether each completed tag should be suffixed with a comma or a newline (when typing in a multi-line list). Allows faster insertion of multiple tags.\")",
    ".setDesc(\"If this setting is enabled, the currently opened file will be scanned to find new words.\")": ".setDesc(\"If this setting is enabled, the currently opened file will be scanned to find new words.\")",
    ".setDesc(\"A list of files which contain words to be used as suggestions. Each word should be on its own line.\")": ".setDesc(\"A list of files which contain words to be used as suggestions. Each word should be on its own line.\")",
    ".setDesc(\"Where callout suggestions come from.\")": ".setDesc(\"Where callout suggestions come from.\")",
    ".setTooltip(\"Obsidian Front-Matter wiki\")": ".setTooltip(\"Obsidian Front-Matter wiki\")",
    ".setTooltip(\"Immediately scan all .md files currently in your vault.\")": ".setTooltip(\"Immediately scan all .md files currently in your vault.\")",
    ".setTooltip(\"Delete all known words.\")": ".setTooltip(\"Delete all known words.\")",
    ".setTooltip(\"Reload\")": ".setTooltip(\"Reload\")",
    ".setTooltip(\"Remove\")": ".setTooltip(\"Remove\")",
    "Error(\"Display name cannot contain a newline: \" + invalidCommand.displayName);": "Error(\"Display name cannot contain a newline: \" + invalidCommand.displayName);",
    "Error(\"Display name cannot contain a newline: \" + invalidsuggestion.displayName);": "Error(\"Display name cannot contain a newline: \" + invalidsuggestion.displayName);",
    "Error(`Failed to parse file ${file}.`);": "Error(`Failed to parse file ${file}.`);",
    "Error(`Invalid suggestions file ${file}: JSON root must be array.`);": "Error(`Invalid suggestions file ${file}: JSON root must be array.`);",
    "Whether or not the latex provider is enabled": "Whether or not the latex provider is enabled",
    "Whether the front matter provider is enabled": "Whether the front matter provider is enabled",
    "Whether or not the file scanner provider is enabled.": "Whether or not the file scanner provider is enabled.",
    "Whether or not the word list provider is enabled": "Whether or not the word list provider is enabled",
    "Whether or not the callout provider is enabled": "Whether or not the callout provider is enabled",
    "Start scanning?": "Start scanning?",
    "Depending on the size of your vault and computer, this may take a while.": "Depending on the size of your vault and computer, this may take a while.",
    "Delete all known words?": "Delete all known words?",
    "This will delete all words that have been scanned. No suggestions from this provider will show up anymore until new files are scanned.": "This will delete all words that have been scanned. No suggestions from this provider will show up anymore until new files are scanned.",
    "\"Delete \" + name + \"?\"": "\"Delete \" + name + \"?\"",
    "The file will be removed and the words inside of it won't show up as suggestions anymore.": "The file will be removed and the words inside of it won't show up as suggestions anymore."
  }
}