{
  "manifest": {
    "translationVersion": -639075600000,
    "pluginVersion": "1.0.4"
  },
  "description": {
    "original": "Build your own knowledge graph with smiles :-)",
    "translation": "Build your own knowledge graph with smiles :-)"
  },
  "dict": {
    "Notice(errorText)": "Notice(errorText)",
    "Notice(\"Save successfully!\")": "Notice(\"Save successfully!\")",
    "Notice(error.message)": "Notice(error.message)",
    "name: \"Blur node\"": "name: \"Blur node\"",
    "text: \"\",\n      focus: false,\n      save: true\n    });\n    const data = this.main.canvas.getData();\n    this.main.canvas.importData({\n      \"": "text: \"\",\n      focus: false,\n      save: true\n    });\n    const data = this.main.canvas.getData();\n    this.main.canvas.importData({\n      \"",
    "text: \"\\u{1F917} Lovely Mindmap Settings\"": "text: \"\\u{1F917} Lovely Mindmap Settings\"",
    ".setButtonText(\"Save\")": ".setButtonText(\"Save\")",
    ".setName(\"Auto Focus\")": ".setName(\"Auto Focus\")",
    ".setName(\"Create Child Node\")": ".setName(\"Create Child Node\")",
    ".setName(\"Create Sibling Node Before\")": ".setName(\"Create Sibling Node Before\")",
    ".setName(\"Create Sibling Node After\")": ".setName(\"Create Sibling Node After\")",
    ".setDesc(\"auto focus node when create new node\")": ".setDesc(\"auto focus node when create new node\")",
    ".setDesc(`Custom your hotkey to create a sibling node before the current node. Default is Shift+Enter. Same as 'Create Child Node'.`)": ".setDesc(`Custom your hotkey to create a sibling node before the current node. Default is Shift+Enter. Same as 'Create Child Node'.`)",
    ".setDesc(`Custom your hotkey to create a sibling node after the current node. Default is Enter. Same as 'Create Child Node'.`)": ".setDesc(`Custom your hotkey to create a sibling node after the current node. Default is Enter. Same as 'Create Child Node'.`)",
    "Custom your hotkey to create a child node, default is Tab.": "Custom your hotkey to create a child node, default is Tab.",
    ".setPlaceholder(\"Enter hotkey\")": ".setPlaceholder(\"Enter hotkey\")",
    "You can use any letter, number, or modifier combined with": "You can use any letter, number, or modifier combined with",
    "a letter or number, e.g.": "a letter or number, e.g.",
    "to separate modifiers and alphanumeric characters.": "to separate modifiers and alphanumeric characters.",
    "u300Dto create a child node.": "u300Dto create a child node.",
    "Use\\u300C": "Use\\u300C",
    "\\u300Dor\\u300C": "\\u300Dor\\u300C"
  }
}