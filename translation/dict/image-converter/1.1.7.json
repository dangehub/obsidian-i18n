{
  "manifest": {
    "translationVersion": -639075600000,
    "pluginVersion": "1.1.7"
  },
  "description": {
    "original": "Convert, compress and resize images from one format to another by dragging and dropping or pasting into the note.",
    "translation": "Convert, compress and resize images from one format to another by dragging and dropping or pasting into the note."
  },
  "dict": {
    "Notice(\"Image copied to clipboard\")": "Notice(\"Image copied to clipboard\")",
    "Notice(\"Error: No active file found.\")": "Notice(\"Error: No active file found.\")",
    "Notice(\"Error: Failed to compress image.\")": "Notice(\"Error: Failed to compress image.\")",
    "Notice(\"Error: No format selected for conversion.\")": "Notice(\"Error: No format selected for conversion.\")",
    "Notice(\"Original file kept without any compression.\")": "Notice(\"Original file kept without any compression.\")",
    "Notice(`Image: ${decodeURIComponent(s0)": "Notice(`Image: ${decodeURIComponent(s0)",
    "Notice(`Failed to rename ${decodeURIComponent(t0)": "Notice(`Failed to rename ${decodeURIComponent(t0)",
    "Notice(`Failed to rename ${t0}: no active editor`)": "Notice(`Failed to rename ${t0}: no active editor`)",
    "Notice(`Renamed ${decodeURIComponent(s0)": "Notice(`Renamed ${decodeURIComponent(s0)",
    "Notice(`${O} images were converted.`)": "Notice(`${O} images were converted.`)",
    "Notice(\"Error: Failed to resize image.\")": "Notice(\"Error: Failed to resize image.\")",
    "Notice(`${J} images were converted.`)": "Notice(`${J} images were converted.`)",
    "Notice(\"Base64 encoded image deleted from the note\")": "Notice(\"Base64 encoded image deleted from the note\")",
    "Notice(\"External image link deleted from the note\")": "Notice(\"External image link deleted from the note\")",
    "Notice(`Image: ${s0.basename} deleted from: ${s0.path}`)": "Notice(`Image: ${s0.basename} deleted from: ${s0.path}`)",
    "Notice(\"Error: No active note found.\")": "Notice(\"Error: No active note found.\")",
    ".log(\"====\",n0,u0)": ".log(\"====\",n0,u0)",
    ".log(Date.now()": ".log(Date.now()",
    ".log(p)": ".log(p)",
    ".log(a)": ".log(a)",
    ".log(\"warning: \"+K.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")": ".log(\"warning: \"+K.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")",
    ".log(\"FS.trackingDelegate['willMovePath']('\"+p+\"', '\"+a+\"')": ".log(\"FS.trackingDelegate['willMovePath']('\"+p+\"', '\"+a+\"')",
    ".log(\"FS.trackingDelegate['onMovePath']('\"+p+\"', '\"+a+\"')": ".log(\"FS.trackingDelegate['onMovePath']('\"+p+\"', '\"+a+\"')",
    ".log(\"FS.trackingDelegate['willDeletePath']('\"+p+\"')": ".log(\"FS.trackingDelegate['willDeletePath']('\"+p+\"')",
    ".log(\"FS.trackingDelegate['onDeletePath']('\"+p+\"')": ".log(\"FS.trackingDelegate['onDeletePath']('\"+p+\"')",
    ".log(\"FS.trackingDelegate['onOpenFile']('\"+p+\"', flags)": ".log(\"FS.trackingDelegate['onOpenFile']('\"+p+\"', flags)",
    ".log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"')": ".log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"')",
    ".log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")": ".log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")",
    ".log(\"creating db\")": ".log(\"creating db\")",
    ".log(\"Decoding image failed\",this.handle,p)": ".log(\"Decoding image failed\",this.handle,p)",
    ".log(\"Could not create HEIF context\")": ".log(\"Could not create HEIF context\")",
    ".log(\"Could not parse HEIF file\",a)": ".log(\"Could not parse HEIF file\",a)",
    ".log(\"Error loading image ids\",g)": ".log(\"Error loading image ids\",g)",
    ".log(\"No images found\")": ".log(\"No images found\")",
    ".log(\"Could not get image data for id\",g[h],i0)": ".log(\"Could not get image data for id\",g[h],i0)",
    ".log(`${O} of ${J.length} ${t0.name} ${t0.path}  ${e0} seconds elapsed`)": ".log(`${O} of ${J.length} ${t0.name} ${t0.path}  ${e0} seconds elapsed`)",
    ".error(new Error(\"Invalid file signature\")": ".error(new Error(\"Invalid file signature\")",
    ".error(new Error(\"Expected IHDR on beggining\")": ".error(new Error(\"Expected IHDR on beggining\")",
    ".error(new Error(\"Unsupported critical chunk type \"+J)": ".error(new Error(\"Unsupported critical chunk type \"+J)",
    ".error(new Error(\"Crc error - \"+$+\" - \"+P)": ".error(new Error(\"Crc error - \"+$+\" - \"+P)",
    ".error(new Error(\"Unsupported bit depth \"+J)": ".error(new Error(\"Unsupported bit depth \"+J)",
    ".error(new Error(\"Unsupported color type\")": ".error(new Error(\"Unsupported color type\")",
    ".error(new Error(\"Unsupported compression method\")": ".error(new Error(\"Unsupported compression method\")",
    ".error(new Error(\"Unsupported filter method\")": ".error(new Error(\"Unsupported filter method\")",
    ".error(new Error(\"Unsupported interlace method\")": ".error(new Error(\"Unsupported interlace method\")",
    ".error(new Error(\"Transparency chunk must be after palette\")": ".error(new Error(\"Transparency chunk must be after palette\")",
    ".error(new Error(\"More transparent colors than palette size\")": ".error(new Error(\"More transparent colors than palette size\")",
    ".error(p)": ".error(p)",
    ".error(\"An error occurred:\",z)": ".error(\"An error occurred:\",z)",
    "name:\"Anno Domini\"": "name:\"Anno Domini\"",
    "name:\"Before Christ\"": "name:\"Before Christ\"",
    "name:\"Process all images in current note\"": "name:\"Process all images in current note\"",
    "name:\"),z.setDesc('Add processed images to a specified folder next to the note you added the image to.  If any of the folders do not exist, they will be created. For example, if your note is located in \"": "name:\"),z.setDesc('Add processed images to a specified folder next to the note you added the image to.  If any of the folders do not exist, they will be created. For example, if your note is located in \"",
    "text:\"Enter new dimensions\"": "text:\"Enter new dimensions\"",
    "text:\"Please backup you images, this will resize your original image.\"": "text:\"Please backup you images, this will resize your original image.\"",
    "text:\"Aspect ratio is always preserved.\"": "text:\"Aspect ratio is always preserved.\"",
    "text:\"To resize only width, you can leave Height input empty\"": "text:\"To resize only width, you can leave Height input empty\"",
    "text:\"To resize only Height, you can leave width input empty\"": "text:\"To resize only Height, you can leave width input empty\"",
    "text:\"\"});e0.style.fontSize=\"": "text:\"\"});e0.style.fontSize=\"",
    ".setText(\"Converting image... \\u23F3\")": ".setText(\"Converting image... \\u23F3\")",
    ".setText(\"Image converted \\u2705\")": ".setText(\"Image converted \\u2705\")",
    ".setText(`Processing image ${O} of ${J.length}, elapsed time: ${e0} seconds`)": ".setText(`Processing image ${O} of ${J.length}, elapsed time: ${e0} seconds`)",
    ".setText(`Finished processing ${O} images, total time: ${t0} seconds`)": ".setText(`Finished processing ${O} images, total time: ${t0} seconds`)",
    ".setText(`Processing image ${J} of ${r0}, elapsed time: ${B0} seconds`)": ".setText(`Processing image ${J} of ${r0}, elapsed time: ${B0} seconds`)",
    ".setText(`Finished processing ${J} images, total time: ${t0} seconds`)": ".setText(`Finished processing ${J} images, total time: ${t0} seconds`)",
    ".setText(\"\")},5e3)}}async convertCurrentNoteImages(P){let J=this.getActiveFile();if(!J){new L2.Notice(\"Error: No active file found.\")": ".setText(\"\")},5e3)}}async convertCurrentNoteImages(P){let J=this.getActiveFile();if(!J){new L2.Notice(\"Error: No active file found.\")",
    ".setButtonText(\"Save\")": ".setButtonText(\"Save\")",
    ".setButtonText(\"Submit\")": ".setButtonText(\"Submit\")",
    ".setName(\"Select format to convert images to\")": ".setName(\"Select format to convert images to\")",
    ".setName(\"Quality\")": ".setName(\"Quality\")",
    ".setName(\"Image resize mode\")": ".setName(\"Image resize mode\")",
    ".setName(\"Auto rename\")": ".setName(\"Auto rename\")",
    ".setName(\"Path to specific folder:\")": ".setName(\"Path to specific folder:\")",
    ".setName(\"Subfolder name:\")": ".setName(\"Subfolder name:\")",
    ".setName(\"Output\")": ".setName(\"Output\")",
    ".setName(\"Non-destructive resize:\")": ".setName(\"Non-destructive resize:\")",
    ".setName(\"Custom Size:\")": ".setName(\"Custom Size:\")",
    ".setName(\"Resize by dragging edge of an image\")": ".setName(\"Resize by dragging edge of an image\")",
    ".setName(\"Resize with Shift + Scrollwheel\")": ".setName(\"Resize with Shift + Scrollwheel\")",
    ".setName(\"Right-click context menu\")": ".setName(\"Right-click context menu\")",
    ".setName(\"Width\")": ".setName(\"Width\")",
    ".setName(\"Height\")": ".setName(\"Height\")",
    ".setDesc(`Turn this on to allow image conversion and compression on drag'n'drop or paste. \"Same as original\" - will keep original file format.`)": ".setDesc(`Turn this on to allow image conversion and compression on drag'n'drop or paste. \"Same as original\" - will keep original file format.`)",
    ".setDesc(\"0 - low quality, 99 - high quality, 100 - no compression; 75 - recommended\")": ".setDesc(\"0 - low quality, 99 - high quality, 100 - no compression; 75 - recommended\")",
    ".setDesc(\"Select the mode to use when resizing the image. Resizing an image will further reduce file-size, but it will resize your actual file, which means that the original file will be modified, and the changes will be permanent.\")": ".setDesc(\"Select the mode to use when resizing the image. Resizing an image will further reduce file-size, but it will resize your actual file, which means that the original file will be modified, and the changes will be permanent.\")",
    ".setDesc('Automatically rename dropped image into current notes name + todays date (YYYYMMDDHHMMSS). For instance, image \"testImage.jpg\" dropped into note \"Howtotakenotes.md\" becomes \"Howtotakenotes-20230927164411.webp\"')": ".setDesc('Automatically rename dropped image into current notes name + todays date (YYYYMMDDHHMMSS). For instance, image \"testImage.jpg\" dropped into note \"Howtotakenotes.md\" becomes \"Howtotakenotes-20230927164411.webp\"')",
    ".setDesc('If you specify folder path as \"/attachments/images\" then all processed images will be saved inside \"/attachments/images/\" folder. If any of the folders do not exist, they will be created.')": ".setDesc('If you specify folder path as \"/attachments/images\" then all processed images will be saved inside \"/attachments/images/\" folder. If any of the folders do not exist, they will be created.')",
    ".setDesc(\"Select where to save converted images. Default - follow rules as defined by Obsidian in 'File & Links' > 'Default location for new attachments'\")": ".setDesc(\"Select where to save converted images. Default - follow rules as defined by Obsidian in 'File & Links' > 'Default location for new attachments'\")",
    ".setDesc('Automatically apply \"|size\" to dropped/pasted images.')": ".setDesc('Automatically apply \"|size\" to dropped/pasted images.')",
    ".setDesc('Specify the default size which should be applied on all dropped/pasted images. For example, if you specify custom size as \"250\" then when you drop or paste an \"image.jpg\" it would become ![[image.jpg|250]]')": ".setDesc('Specify the default size which should be applied on all dropped/pasted images. For example, if you specify custom size as \"250\" then when you drop or paste an \"image.jpg\" it would become ![[image.jpg|250]]')",
    ".setDesc(\"Turn this on to allow resizing images by dragging the edge of an image.\")": ".setDesc(\"Turn this on to allow resizing images by dragging the edge of an image.\")",
    ".setDesc(\"Toggle this setting to allow resizing images using the Shift key combined with the scroll wheel.\")": ".setDesc(\"Toggle this setting to allow resizing images using the Shift key combined with the scroll wheel.\")",
    ".setDesc(\"Toggle to enable or disable right-click context menu\")": ".setDesc(\"Toggle to enable or disable right-click context menu\")",
    ".setDesc('\"Same as original\" - will keep original file format.')": ".setDesc('\"Same as original\" - will keep original file format.')",
    ".setPlaceholder(\"Enter quality (0-100)\")": ".setPlaceholder(\"Enter quality (0-100)\")",
    ".setPlaceholder(\"Width\")": ".setPlaceholder(\"Width\")",
    ".setPlaceholder(\"Height\")": ".setPlaceholder(\"Height\")",
    ".setPlaceholder(\"Enter desired length in pixels\")": ".setPlaceholder(\"Enter desired length in pixels\")",
    ".setTitle(\"Process all images in current note\")": ".setTitle(\"Process all images in current note\")",
    ".setTitle(\"Copy Image\")": ".setTitle(\"Copy Image\")",
    ".setTitle(\"Copy as Base64 encoded image\")": ".setTitle(\"Copy as Base64 encoded image\")",
    ".setTitle(\"Resize Image\")": ".setTitle(\"Resize Image\")",
    "textContent='Below settings allow you to adjust image dimensions using the standard ObsidianMD method by modifying image links. For instance, to change the width of ![[Engelbart.jpg]], we add \"| 100\" at the end, resulting in ![[Engelbart.jpg | 100]].'": "textContent='Below settings allow you to adjust image dimensions using the standard ObsidianMD method by modifying image links. For instance, to change the width of ![[Engelbart.jpg]], we add \"| 100\" at the end, resulting in ![[Engelbart.jpg | 100]].'",
    "textContent=\"Non-Destructive Image Resizing:\"": "textContent=\"Non-Destructive Image Resizing:\"",
    "textContent=\"Convert, compress and resize\"": "textContent=\"Convert, compress and resize\"",
    "Notice(\"No images found in the vault.\")": "Notice(\"No images found in the vault.\")",
    "name:\"Process all vault images\"": "name:\"Process all vault images\"",
    ".setTitle(\"Delete Image from vault\")": ".setTitle(\"Delete Image from vault\")"
  }
}