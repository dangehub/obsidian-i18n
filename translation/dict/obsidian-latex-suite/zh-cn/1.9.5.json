{
  "manifest": {
    "translationVersion": 1735726106016,
    "pluginVersion": "1.9.5"
  },
  "description": {
    "original": "Make typesetting LaTeX math as fast as handwriting through snippets, text expansion, and editor enhancements",
    "translation": "Make typesetting LaTeX math as fast as handwriting through snippets, text expansion, and editor enhancements"
  },
  "dict": {
    ".setText(\"Make equations more readable by hiding LaTeX markup and instead displaying it in a pretty format.\")": ".setText(\"Make equations more readable by hiding LaTeX markup and instead displaying it in a pretty format.\")",
    ".setText(\"LaTeX beneath the cursor will be revealed.\")": ".setText(\"LaTeX beneath the cursor will be revealed.\")",
    ".setText(\"Disabled by default to not confuse new users. However, I recommend turning this on once you are comfortable with the plugin!\")": ".setText(\"Disabled by default to not confuse new users. However, I recommend turning this on once you are comfortable with the plugin!\")",
    ".setText(\"When inside an equation, show a popup preview window of the rendered math.\")": ".setText(\"When inside an equation, show a popup preview window of the rendered math.\")",
    ".setText(\"The popup preview will be shown for all inline math equations, as well as for block math equations in Source mode.\")": ".setText(\"The popup preview will be shown for all inline math equations, as well as for block math equations in Source mode.\")",
    ".setButtonText(\"Reset to default snippets\")": ".setButtonText(\"Reset to default snippets\")",
    ".setButtonText(\"Remove all snippets\")": ".setButtonText(\"Remove all snippets\")",
    ".setButtonText(\"Cancel\")": ".setButtonText(\"Cancel\")",
    ".setName(\"Enabled\")": ".setName(\"Enabled\")",
    ".setName(\"Snippets\")": ".setName(\"Snippets\")",
    ".setName(\"Load snippets from file or folder\")": ".setName(\"Load snippets from file or folder\")",
    ".setName(\"Snippets file or folder location\")": ".setName(\"Snippets file or folder location\")",
    ".setName(\"Key trigger for non-auto snippets\")": ".setName(\"Key trigger for non-auto snippets\")",
    ".setName(\"Color paired brackets\")": ".setName(\"Color paired brackets\")",
    ".setName(\"Highlight matching bracket beneath cursor\")": ".setName(\"Highlight matching bracket beneath cursor\")",
    ".setName(\"Position\")": ".setName(\"Position\")",
    ".setName(\"Fraction symbol\")": ".setName(\"Fraction symbol\")",
    ".setName(\"Excluded environments\")": ".setName(\"Excluded environments\")",
    ".setName(\"Breaking characters\")": ".setName(\"Breaking characters\")",
    ".setName(\"Environments\")": ".setName(\"Environments\")",
    ".setName(\"Triggers\")": ".setName(\"Triggers\")",
    ".setName(\"Snippet variables\")": ".setName(\"Snippet variables\")",
    ".setName(\"Load snippet variables from file or folder\")": ".setName(\"Load snippet variables from file or folder\")",
    ".setName(\"Snippet variables file or folder location\")": ".setName(\"Snippet variables file or folder location\")",
    ".setName(\"Word delimiters\")": ".setName(\"Word delimiters\")",
    ".setName(\"Remove trailing whitespaces in snippets in inline math\")": ".setName(\"Remove trailing whitespaces in snippets in inline math\")",
    ".setName(\"Remove closing $ when backspacing inside blank inline math\")": ".setName(\"Remove closing $ when backspacing inside blank inline math\")",
    ".setName(\"Don't trigger snippets when IME is active\")": ".setName(\"Don't trigger snippets when IME is active\")",
    ".setName(\"Code languages to interpret as math mode\")": ".setName(\"Code languages to interpret as math mode\")",
    ".setDesc(\"Whether snippets are enabled.\")": ".setDesc(\"Whether snippets are enabled.\")",
    ".setDesc('Enter snippets here.  Remember to add a comma after each snippet, and escape all backslashes with an extra \\\\. Lines starting with \"//\" will be treated as comments and ignored.')": ".setDesc('Enter snippets here.  Remember to add a comma after each snippet, and escape all backslashes with an extra \\\\. Lines starting with \"//\" will be treated as comments and ignored.')",
    ".setDesc(\"Whether to load snippets from a specified file, or from all files within a folder (instead of from the plugin settings).\")": ".setDesc(\"Whether to load snippets from a specified file, or from all files within a folder (instead of from the plugin settings).\")",
    ".setDesc(\"What key to press to expand non-auto snippets.\")": ".setDesc(\"What key to press to expand non-auto snippets.\")",
    ".setDesc(\"Whether to colorize matching brackets.\")": ".setDesc(\"Whether to colorize matching brackets.\")",
    ".setDesc(\"When the cursor is adjacent to a bracket, highlight the matching bracket.\")": ".setDesc(\"When the cursor is adjacent to a bracket, highlight the matching bracket.\")",
    ".setDesc(\"Where to display the popup preview relative to the equation source.\")": ".setDesc(\"Where to display the popup preview relative to the equation source.\")",
    ".setDesc(\"Whether auto-fraction is enabled.\")": ".setDesc(\"Whether auto-fraction is enabled.\")",
    ".setDesc(\"The fraction symbol to use in the replacement. e.g. \\\\frac, \\\\dfrac, \\\\tfrac\")": ".setDesc(\"The fraction symbol to use in the replacement. e.g. \\\\frac, \\\\dfrac, \\\\tfrac\")",
    ".setDesc('A list of environments to exclude auto-fraction from running in. For example, to exclude auto-fraction from running while inside an exponent, such as e^{...}, use  [\"^{\", \"}\"]')": ".setDesc('A list of environments to exclude auto-fraction from running in. For example, to exclude auto-fraction from running while inside an exponent, such as e^{...}, use  [\"^{\", \"}\"]')",
    ".setDesc('A list of characters that denote the start/end of a fraction. e.g. if + is included in the list, \"a+b/c\" will expand to \"a+\\\\frac{b}{c}\". If + is not in the list, it will expand to \"\\\\frac{a+b}{c}\".')": ".setDesc('A list of characters that denote the start/end of a fraction. e.g. if + is included in the list, \"a+b/c\" will expand to \"a+\\\\frac{b}{c}\". If + is not in the list, it will expand to \"\\\\frac{a+b}{c}\".')",
    ".setDesc(\"Whether matrix shortcuts are enabled.\")": ".setDesc(\"Whether matrix shortcuts are enabled.\")",
    ".setDesc(\"A list of environment names to run the matrix shortcuts in, separated by commas.\")": ".setDesc(\"A list of environment names to run the matrix shortcuts in, separated by commas.\")",
    ".setDesc(\"Whether tabout is enabled.\")": ".setDesc(\"Whether tabout is enabled.\")",
    ".setDesc(\"Whether to automatically enlarge brackets containing e.g. sum, int, frac.\")": ".setDesc(\"Whether to automatically enlarge brackets containing e.g. sum, int, frac.\")",
    ".setDesc(\"A list of symbols that should trigger auto-enlarge brackets, separated by commas.\")": ".setDesc(\"A list of symbols that should trigger auto-enlarge brackets, separated by commas.\")",
    ".setDesc(\"Assign snippet variables that can be used as shortcuts when writing snippets.\")": ".setDesc(\"Assign snippet variables that can be used as shortcuts when writing snippets.\")",
    ".setDesc(\"Whether to load snippet variables from a specified file, or from all files within a folder (instead of from the plugin settings).\")": ".setDesc(\"Whether to load snippet variables from a specified file, or from all files within a folder (instead of from the plugin settings).\")",
    ".setDesc('Symbols that will be treated as word delimiters, for use with the \"w\" snippet option.')": ".setDesc('Symbols that will be treated as word delimiters, for use with the \"w\" snippet option.')",
    ".setDesc(\"Whether to remove trailing whitespaces when expanding snippets at the end of inline math blocks.\")": ".setDesc(\"Whether to remove trailing whitespaces when expanding snippets at the end of inline math blocks.\")",
    ".setDesc(\"Whether to also remove the closing $ when you delete the opening $ symbol inside blank inline math.\")": ".setDesc(\"Whether to also remove the closing $ when you delete the opening $ symbol inside blank inline math.\")",
    ".setDesc(\"Whether to suppress snippets triggering when an IME is active.\")": ".setDesc(\"Whether to suppress snippets triggering when an IME is active.\")",
    ".setDesc(\"Codeblock languages where the whole code block should be treated like a math block, separated by commas.\")": ".setDesc(\"Codeblock languages where the whole code block should be treated like a math block, separated by commas.\")",
    ".setPlaceholder('[ [\"^{\", \"}] ]')": ".setPlaceholder('[ [\"^{\", \"}] ]')",
    ".setTooltip(\"Reset to default snippets\")": ".setTooltip(\"Reset to default snippets\")",
    ".setTooltip(\"Remove all snippets\")": ".setTooltip(\"Remove all snippets\")"
  }
}